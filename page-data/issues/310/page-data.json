{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/310",
    "result": {"data":{"issuesJson":{"id":"2ccf798b-bfea-5fa4-98b6-88edebd9c316","title":"aylei/kubectl-debug: 能够便捷地进行 Kubernetes 上的 Pod 排障诊断工具","number":310,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/aylei/kubectl-debug\">aylei/kubectl-debug</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/58221f2e867c20c4d67e209ab52b8cfe2728762b501bf133473ea93119ae9518/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f61796c65692f6b75626563746c2d64656275672e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/aylei/kubectl-debug.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/f84d19c1dbc96ee5f45b95215bda4a01c437aff20b7838dc022215fa0860c60f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f61796c65692f6b75626563746c2d64656275673f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/aylei/kubectl-debug?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/f078cf108b603fa7ba731b889a26910efb0f98a577011c1c1d421b0663c9caa7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f61796c65692f6b75626563746c2d64656275673f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/aylei/kubectl-debug?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/c4b2edc3438bb4b26e87a127a4307d262af96678ee2b7f30182195d72c195571/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f61796c65692f6b75626563746c2d64656275673f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/aylei/kubectl-debug?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/f150e24392ec53014d1571c865ac1cc936b0ee60db3e7a468147fbfb3647cf33/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f61796c65692f6b75626563746c2d64656275673f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/aylei/kubectl-debug?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/93a9d935131c87b3e494c6a5b26ece565a7c1e63f06535a0c7bef5ec574dfdef/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f61796c65692f6b75626563746c2d64656275673f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/aylei/kubectl-debug?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<h1 dir=\"auto\">Deprecation Notice</h1>\n<p dir=\"auto\">This repository is no longer maintained, please checkout <a href=\"https://github.com/JamesTGrant/kubectl-debug\">https://github.com/JamesTGrant/kubectl-debug</a>.</p>\n<h1 dir=\"auto\">Kubectl-debug</h1>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/66983804d9ebbae354e7de8ea1881fb16d413dc0524f91529369a1862576ea56/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f6c2f706c75672e737667\"><img src=\"https://camo.githubusercontent.com/66983804d9ebbae354e7de8ea1881fb16d413dc0524f91529369a1862576ea56/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f6c2f706c75672e737667\" alt=\"license\" data-canonical-src=\"https://img.shields.io/hexpm/l/plug.svg\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://travis-ci.org/aylei/kubectl-debug\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/aabc5df043b007b9a873b9e4327e846c29ea7b8a23d6beb23b7e44e3de9ceea9/68747470733a2f2f7472617669732d63692e6f72672f61796c65692f6b75626563746c2d64656275672e7376673f6272616e63683d6d6173746572\" alt=\"travis\" data-canonical-src=\"https://travis-ci.org/aylei/kubectl-debug.svg?branch=master\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://goreportcard.com/report/github.com/aylei/kubectl-debug\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/99c0e07421f20d3f6dc2e2df2ad9f2beb92bc1fc93076e48057b669abcb5390f/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f61796c65692f6b75626563746c2d6465627567\" alt=\"Go Report Card\" data-canonical-src=\"https://goreportcard.com/badge/github.com/aylei/kubectl-debug\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://hub.docker.com/r/aylei/debug-agent\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/d78650a404f07dcf68ffffd9ac6f112fd48aab87b11cb2d5325287ab1e30beb7/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f61796c65692f64656275672d6167656e742e737667\" alt=\"docker\" data-canonical-src=\"https://img.shields.io/docker/pulls/aylei/debug-agent.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"/docs/zh-cn.md\">简体中文</a></p>\n<h1 dir=\"auto\">Overview</h1>\n<p dir=\"auto\"><code class=\"notranslate\">kubectl-debug</code> is an out-of-tree solution for <a href=\"https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/troubleshoot-running-pods.md\">troubleshooting running pods</a>, which allows you to run a new container in running pods for debugging purpose (<a href=\"/docs/examples.md\">examples</a>). The new container will join the <code class=\"notranslate\">pid</code>, <code class=\"notranslate\">network</code>, <code class=\"notranslate\">user</code> and <code class=\"notranslate\">ipc</code> namespaces of the target container, so you can use arbitrary trouble-shooting tools without pre-installing them in your production container image.</p>\n<ul dir=\"auto\">\n<li><a href=\"#kubectl-debug\">Kubectl-debug</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#screenshots\">Screenshots</a></li>\n<li><a href=\"#quick-start\">Quick Start</a>\n<ul dir=\"auto\">\n<li><a href=\"#install-the-kubectl-debug-plugin\">Install the kubectl debug plugin</a></li>\n<li><a href=\"#optional-install-the-debug-agent-daemonset\">(Optional) Install the debug agent DaemonSet</a></li>\n<li><a href=\"#debug-instructions\">Debug instructions</a></li>\n</ul>\n</li>\n<li><a href=\"#build-from-source\">Build from source</a></li>\n<li><a href=\"#port-forward-mode-and-agentless-modedefault-opening\">port-forward mode And agentless mode(Default opening)</a></li>\n<li><a href=\"#configuration\">Configuration</a></li>\n<li><a href=\"#authorization\">Authorization</a></li>\n<li><a href=\"#roadmap\">Roadmap</a></li>\n<li><a href=\"#contribute\">Contribute</a></li>\n<li><a href=\"#acknowledgement\">Acknowledgement</a></li>\n</ul>\n<h1 dir=\"auto\">Screenshots</h1>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/docs/kube-debug.gif\"><img src=\"/docs/kube-debug.gif\" alt=\"gif\" data-animated-image=\"\" style=\"max-width: 100%;\"></a></p>\n<h1 dir=\"auto\">Quick Start</h1>\n<h2 dir=\"auto\">Install the kubectl debug plugin</h2>\n<p dir=\"auto\">Homebrew:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"brew install aylei/tap/kubectl-debug\"><pre class=\"notranslate\">brew install aylei/tap/kubectl-debug</pre></div>\n<p dir=\"auto\">Download the binary:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export PLUGIN_VERSION=0.1.1\n# linux x86_64\ncurl -Lo kubectl-debug.tar.gz https://github.com/aylei/kubectl-debug/releases/download/v${PLUGIN_VERSION}/kubectl-debug_${PLUGIN_VERSION}_linux_amd64.tar.gz\n# macos\ncurl -Lo kubectl-debug.tar.gz https://github.com/aylei/kubectl-debug/releases/download/v${PLUGIN_VERSION}/kubectl-debug_${PLUGIN_VERSION}_darwin_amd64.tar.gz\n\ntar -zxvf kubectl-debug.tar.gz kubectl-debug\nsudo mv kubectl-debug /usr/local/bin/\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> PLUGIN_VERSION=0.1.1\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> linux x86_64</span>\ncurl -Lo kubectl-debug.tar.gz https://github.com/aylei/kubectl-debug/releases/download/v<span class=\"pl-smi\">${PLUGIN_VERSION}</span>/kubectl-debug_<span class=\"pl-smi\">${PLUGIN_VERSION}</span>_linux_amd64.tar.gz\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> macos</span>\ncurl -Lo kubectl-debug.tar.gz https://github.com/aylei/kubectl-debug/releases/download/v<span class=\"pl-smi\">${PLUGIN_VERSION}</span>/kubectl-debug_<span class=\"pl-smi\">${PLUGIN_VERSION}</span>_darwin_amd64.tar.gz\n\ntar -zxvf kubectl-debug.tar.gz kubectl-debug\nsudo mv kubectl-debug /usr/local/bin/</pre></div>\n<p dir=\"auto\">For windows users, download the latest archive from the <a href=\"https://github.com/aylei/kubectl-debug/releases/tag/v0.1.1\">release page</a>, decompress the package and add it to your PATH.</p>\n<h2 dir=\"auto\">(Optional) Install the debug agent DaemonSet</h2>\n<p dir=\"auto\"><code class=\"notranslate\">kubectl-debug</code> requires an agent pod to communicate with the container runtime. In the <a href=\"#port-forward-mode-And-agentless-mode\">agentless mode</a>, the agent pod can be created when a debug session starts and to be cleaned up when the session ends.(Turn on agentless mode by default)</p>\n<p dir=\"auto\">While convenient, creating pod before debugging can be time consuming. You can install the debug agent DaemonSet and use --agentless=false params in advance to skip this:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# if your kubernetes version is v1.16 or newer\nkubectl apply -f https://raw.githubusercontent.com/aylei/kubectl-debug/master/scripts/agent_daemonset.yml\n# if your kubernetes is old version(&lt;v1.16), you should change the apiVersion to extensions/v1beta1, As follows\nwget https://raw.githubusercontent.com/aylei/kubectl-debug/master/scripts/agent_daemonset.yml\nsed -i '' '1s/apps\\/v1/extensions\\/v1beta1/g' agent_daemonset.yml\nkubectl apply -f agent_daemonset.yml\n# or using helm\nhelm install kubectl-debug -n=debug-agent ./contrib/helm/kubectl-debug\n# use daemonset agent mode(close agentless mode)\nkubectl debug --agentless=false POD_NAME\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> if your kubernetes version is v1.16 or newer</span>\nkubectl apply -f https://raw.githubusercontent.com/aylei/kubectl-debug/master/scripts/agent_daemonset.yml\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> if your kubernetes is old version(&lt;v1.16), you should change the apiVersion to extensions/v1beta1, As follows</span>\nwget https://raw.githubusercontent.com/aylei/kubectl-debug/master/scripts/agent_daemonset.yml\nsed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1s/apps\\/v1/extensions\\/v1beta1/g<span class=\"pl-pds\">'</span></span> agent_daemonset.yml\nkubectl apply -f agent_daemonset.yml\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> or using helm</span>\nhelm install kubectl-debug -n=debug-agent ./contrib/helm/kubectl-debug\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> use daemonset agent mode(close agentless mode)</span>\nkubectl debug --agentless=false POD_NAME</pre></div>\n<h2 dir=\"auto\">Debug instructions</h2>\n<p dir=\"auto\">Try it out!</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# kubectl 1.12.0 or higher\nkubectl debug -h\n# if you installed the debug agent's daemonset, you can use --agentless=false to speed up the startup.\n# the default agentless mode will be used in following commands\nkubectl debug POD_NAME\n\n# in case of your pod stuck in `CrashLoopBackoff` state and cannot be connected to,\n# you can fork a new pod and diagnose the problem in the forked pod\nkubectl debug POD_NAME --fork\n\n# in fork mode, if you want the copied pod retains the labels of the original pod, you can use the --fork-pod-retain-labels parameter to set(comma separated, and spaces are not allowed)\n# Example is as follows\n# If not set, this parameter is empty by default (Means that any labels of the original pod are not retained, and the labels of the copied pods are empty.)\nkubectl debug POD_NAME --fork --fork-pod-retain-labels=&lt;labelKeyA&gt;,&lt;labelKeyB&gt;,&lt;labelKeyC&gt;\n\n# in order to enable node without public IP or direct access (firewall and other reasons) to access, port-forward mode is enabled by default.\n# if you don't need to turn on port-forward mode, you can use --port-forward false to turn off it.\nkubectl debug POD_NAME --port-forward=false --agentless=false --daemonset-ns=kube-system --daemonset-name=debug-agent\n\n# old versions of kubectl cannot discover plugins, you may execute the binary directly\nkubectl-debug POD_NAME\n\n# use primary docker registry, set registry kubernets secret to pull image\n# the default registry-secret-name is kubectl-debug-registry-secret, the default namespace is default\n# please set the secret data source as {Username: &lt;username&gt;, Password: &lt;password&gt;}\nkubectl-debug POD_NAME --image calmkart/netshoot:latest --registry-secret-name &lt;k8s_secret_name&gt; --registry-secret-namespace &lt;namespace&gt;\n# in default agentless mode, you can set the agent pod's resource limits/requests, for example:\n# default is not set\nkubectl-debug POD_NAME --agent-pod-cpu-requests=250m --agent-pod-cpu-limits=500m --agent-pod-memory-requests=200Mi --agent-pod-memory-limits=500Mi\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> kubectl 1.12.0 or higher</span>\nkubectl debug -h\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> if you installed the debug agent's daemonset, you can use --agentless=false to speed up the startup.</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> the default agentless mode will be used in following commands</span>\nkubectl debug POD_NAME\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> in case of your pod stuck in `CrashLoopBackoff` state and cannot be connected to,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> you can fork a new pod and diagnose the problem in the forked pod</span>\nkubectl debug POD_NAME --fork\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> in fork mode, if you want the copied pod retains the labels of the original pod, you can use the --fork-pod-retain-labels parameter to set(comma separated, and spaces are not allowed)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Example is as follows</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> If not set, this parameter is empty by default (Means that any labels of the original pod are not retained, and the labels of the copied pods are empty.)</span>\nkubectl debug POD_NAME --fork --fork-pod-retain-labels=<span class=\"pl-k\">&lt;</span>labelKeyA<span class=\"pl-k\">&gt;</span>,<span class=\"pl-k\">&lt;</span>labelKeyB<span class=\"pl-k\">&gt;</span>,<span class=\"pl-k\">&lt;</span>labelKeyC<span class=\"pl-k\">&gt;</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> in order to enable node without public IP or direct access (firewall and other reasons) to access, port-forward mode is enabled by default.</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> if you don't need to turn on port-forward mode, you can use --port-forward false to turn off it.</span>\nkubectl debug POD_NAME --port-forward=false --agentless=false --daemonset-ns=kube-system --daemonset-name=debug-agent\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> old versions of kubectl cannot discover plugins, you may execute the binary directly</span>\nkubectl-debug POD_NAME\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> use primary docker registry, set registry kubernets secret to pull image</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> the default registry-secret-name is kubectl-debug-registry-secret, the default namespace is default</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> please set the secret data source as {Username: &lt;username&gt;, Password: &lt;password&gt;}</span>\nkubectl-debug POD_NAME --image calmkart/netshoot:latest --registry-secret-name <span class=\"pl-k\">&lt;</span>k8s_secret_name<span class=\"pl-k\">&gt;</span> --registry-secret-namespace <span class=\"pl-k\">&lt;</span>namespace<span class=\"pl-k\">&gt;</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> in default agentless mode, you can set the agent pod's resource limits/requests, for example:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default is not set</span>\nkubectl-debug POD_NAME --agent-pod-cpu-requests=250m --agent-pod-cpu-limits=500m --agent-pod-memory-requests=200Mi --agent-pod-memory-limits=500Mi</pre></div>\n<ul dir=\"auto\">\n<li>You can configure the default arguments to simplify usage, refer to <a href=\"#configuration\">Configuration</a></li>\n<li>Refer to <a href=\"/docs/examples.md\">Examples</a> for practical debugging examples</li>\n</ul>\n<h2 dir=\"auto\">(Optional) Create a Secret for Use with Private Docker Registries</h2>\n<p dir=\"auto\">You can use a new or existing <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#registry-secret-existing-credentials\" rel=\"nofollow\">Kubernetes <code class=\"notranslate\">dockerconfigjson</code> secret</a>. For example:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Be sure to run &quot;docker login&quot; beforehand.\nkubectl create secret generic kubectl-debug-registry-secret \\\n    --from-file=.dockerconfigjson=&lt;path/to/.docker/config.json&gt; \\\n    --type=kubernetes.io/dockerconfigjson\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> Be sure to run \"docker login\" beforehand.</span>\nkubectl create secret generic kubectl-debug-registry-secret \\\n    --from-file=.dockerconfigjson=<span class=\"pl-k\">&lt;</span>path/to/.docker/config.json<span class=\"pl-k\">&gt;</span> \\\n    --type=kubernetes.io/dockerconfigjson</pre></div>\n<p dir=\"auto\">Alternatively, you can create a secret with the key <code class=\"notranslate\">authStr</code> and a JSON payload containing a <code class=\"notranslate\">Username</code> and <code class=\"notranslate\">Password</code>. For example:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"echo -n '{&quot;Username&quot;: &quot;calmkart&quot;, &quot;Password&quot;: &quot;calmkart&quot;}' &gt; ./authStr\nkubectl create secret generic kubectl-debug-registry-secret --from-file=./authStr\"><pre class=\"notranslate\"><span class=\"pl-c1\">echo</span> -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{\"Username\": \"calmkart\", \"Password\": \"calmkart\"}<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">&gt;</span> ./authStr\nkubectl create secret generic kubectl-debug-registry-secret --from-file=./authStr</pre></div>\n<p dir=\"auto\">Refer to <a href=\"https://kubernetes.io/docs/concepts/configuration/secret/\" rel=\"nofollow\">the official Kubernetes documentation on Secrets</a> for more ways to create them.</p>\n<h1 dir=\"auto\">Build from source</h1>\n<p dir=\"auto\">Clone this repo and:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# make will build plugin binary and debug-agent image\nmake\n# install plugin\nmv kubectl-debug /usr/local/bin\n\n# build plugin only\nmake plugin\n# build agent only\nmake agent-docker\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> make will build plugin binary and debug-agent image</span>\nmake\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> install plugin</span>\nmv kubectl-debug /usr/local/bin\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> build plugin only</span>\nmake plugin\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> build agent only</span>\nmake agent-docker</pre></div>\n<h1 dir=\"auto\">port-forward mode And agentless mode(Default opening)</h1>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">port-foward</code> mode: By default, <code class=\"notranslate\">kubectl-debug</code> will directly connect with the target host. When <code class=\"notranslate\">kubectl-debug</code> cannot connect to <code class=\"notranslate\">targetHost:agentPort</code>, you can enable <code class=\"notranslate\">port-forward</code> mode. In <code class=\"notranslate\">port-forward</code> mode, the local machine listens on <code class=\"notranslate\">localhost:agentPort</code> and forwards data to/from <code class=\"notranslate\">targetPod:agentPort</code>.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">agentless</code> mode: By default, <code class=\"notranslate\">debug-agent</code> needs to be pre-deployed on each node of the cluster, which consumes cluster resources all the time. Unfortunately, debugging Pod is a low-frequency operation. To avoid loss of cluster resources, the <code class=\"notranslate\">agentless</code> mode has been added in <a href=\"https://github.com/aylei/kubectl-debug/pull/31\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/aylei/kubectl-debug/pull/31/hovercard\">#31</a>. In <code class=\"notranslate\">agentless</code> mode, <code class=\"notranslate\">kubectl-debug</code> will first start <code class=\"notranslate\">debug-agent</code> on the host where the target Pod is located, and then <code class=\"notranslate\">debug-agent</code>  starts the debug container. After the user exits, <code class=\"notranslate\">kubectl-debug</code> will delete the debug container and <code class=\"notranslate\">kubectl-debug</code> will delete the <code class=\"notranslate\">debug-agent</code> pod at last.</p>\n</li>\n</ul>\n<h1 dir=\"auto\">Configuration</h1>\n<p dir=\"auto\"><code class=\"notranslate\">kubectl-debug</code> uses <a href=\"https://github.com/nicolaka/netshoot\">nicolaka/netshoot</a> as the default image to run debug container, and use <code class=\"notranslate\">bash</code> as default entrypoint.</p>\n<p dir=\"auto\">You can override the default image and entrypoint with cli flag, or even better, with config file <code class=\"notranslate\">~/.kube/debug-config</code>:</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# debug agent listening port(outside container)\n# default to 10027\nagentPort: 10027\n\n# whether using agentless mode\n# default to true\nagentless: true\n# namespace of debug-agent pod, used in agentless mode\n# default to 'default'\nagentPodNamespace: default\n# prefix of debug-agent pod, used in agentless mode\n# default to  'debug-agent-pod'\nagentPodNamePrefix: debug-agent-pod\n# image of debug-agent pod, used in agentless mode\n# default to 'aylei/debug-agent:latest'\nagentImage: aylei/debug-agent:latest\n\n# daemonset name of the debug-agent, used in port-forward\n# default to 'debug-agent'\ndebugAgentDaemonset: debug-agent\n# daemonset namespace of the debug-agent, used in port-forwad\n# default to 'default'\ndebugAgentNamespace: kube-system\n# whether using port-forward when connecting debug-agent\n# default true\nportForward: true\n# image of the debug container\n# default as showed\nimage: nicolaka/netshoot:latest\n# start command of the debug container\n# default ['bash']\ncommand:\n- '/bin/bash'\n- '-l'\n# private docker registry auth kuberntes secret\n# default registrySecretName is kubectl-debug-registry-secret\n# default registrySecretNamespace is default\nregistrySecretName: my-debug-secret\nregistrySecretNamespace: debug\n# in agentless mode, you can set the agent pod's resource limits/requests:\n# default is not set\nagentCpuRequests: &quot;&quot;\nagentCpuLimits: &quot;&quot;\nagentMemoryRequests: &quot;&quot;\nagentMemoryLimits: &quot;&quot;\n# in fork mode, if you want the copied pod retains the labels of the original pod, you can change this params\n# format is []string\n# If not set, this parameter is empty by default (Means that any labels of the original pod are not retained, and the labels of the copied pods are empty.)\nforkPodRetainLabels: []\n# You can disable SSL certificate check when communicating with image registry by \n# setting registrySkipTLSVerify to true.\nregistrySkipTLSVerify: false\n# You can set the log level with the verbosity setting\nverbosity : 0\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> debug agent listening port(outside container)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default to 10027</span>\n<span class=\"pl-ent\">agentPort</span>: <span class=\"pl-c1\">10027</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> whether using agentless mode</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default to true</span>\n<span class=\"pl-ent\">agentless</span>: <span class=\"pl-c1\">true</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> namespace of debug-agent pod, used in agentless mode</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default to 'default'</span>\n<span class=\"pl-ent\">agentPodNamespace</span>: <span class=\"pl-s\">default</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> prefix of debug-agent pod, used in agentless mode</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default to  'debug-agent-pod'</span>\n<span class=\"pl-ent\">agentPodNamePrefix</span>: <span class=\"pl-s\">debug-agent-pod</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> image of debug-agent pod, used in agentless mode</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default to 'aylei/debug-agent:latest'</span>\n<span class=\"pl-ent\">agentImage</span>: <span class=\"pl-s\">aylei/debug-agent:latest</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> daemonset name of the debug-agent, used in port-forward</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default to 'debug-agent'</span>\n<span class=\"pl-ent\">debugAgentDaemonset</span>: <span class=\"pl-s\">debug-agent</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> daemonset namespace of the debug-agent, used in port-forwad</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default to 'default'</span>\n<span class=\"pl-ent\">debugAgentNamespace</span>: <span class=\"pl-s\">kube-system</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> whether using port-forward when connecting debug-agent</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default true</span>\n<span class=\"pl-ent\">portForward</span>: <span class=\"pl-c1\">true</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> image of the debug container</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default as showed</span>\n<span class=\"pl-ent\">image</span>: <span class=\"pl-s\">nicolaka/netshoot:latest</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> start command of the debug container</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default ['bash']</span>\n<span class=\"pl-ent\">command</span>:\n- <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/bin/bash<span class=\"pl-pds\">'</span></span>\n- <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-l<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> private docker registry auth kuberntes secret</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default registrySecretName is kubectl-debug-registry-secret</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default registrySecretNamespace is default</span>\n<span class=\"pl-ent\">registrySecretName</span>: <span class=\"pl-s\">my-debug-secret</span>\n<span class=\"pl-ent\">registrySecretNamespace</span>: <span class=\"pl-s\">debug</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> in agentless mode, you can set the agent pod's resource limits/requests:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> default is not set</span>\n<span class=\"pl-ent\">agentCpuRequests</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-ent\">agentCpuLimits</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-ent\">agentMemoryRequests</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-ent\">agentMemoryLimits</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> in fork mode, if you want the copied pod retains the labels of the original pod, you can change this params</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> format is []string</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> If not set, this parameter is empty by default (Means that any labels of the original pod are not retained, and the labels of the copied pods are empty.)</span>\n<span class=\"pl-ent\">forkPodRetainLabels</span>: <span class=\"pl-s\">[]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> You can disable SSL certificate check when communicating with image registry by </span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> setting registrySkipTLSVerify to true.</span>\n<span class=\"pl-ent\">registrySkipTLSVerify</span>: <span class=\"pl-c1\">false</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> You can set the log level with the verbosity setting</span>\n<span class=\"pl-ent\">verbosity </span>: <span class=\"pl-c1\">0</span></pre></div>\n<p dir=\"auto\">If the debug-agent is not accessible from host port, it is recommended to set <code class=\"notranslate\">portForward: true</code> to using port-forawrd mode.</p>\n<p dir=\"auto\">PS: <code class=\"notranslate\">kubectl-debug</code> will always override the entrypoint of the container, which is by design to avoid users running an unwanted service by mistake(of course you can always do this explicitly).</p>\n<h1 dir=\"auto\">Authorization</h1>\n<p dir=\"auto\">Currently, <code class=\"notranslate\">kubectl-debug</code> reuse the privilege of the <code class=\"notranslate\">pod/exec</code> sub resource to do authorization, which means that it has the same privilege requirements with the <code class=\"notranslate\">kubectl exec</code> command.</p>\n<h1 dir=\"auto\">Auditing / Security</h1>\n<p dir=\"auto\">Some teams may want to limit what debug image users are allowed to use and to have an audit record for each command they run in the debug container.</p>\n<p dir=\"auto\">You can use the environment variable <code class=\"notranslate\">KCTLDBG_RESTRICT_IMAGE_TO</code> restrict the agent to using a specific container image.   For example putting the following in the container spec section of your daemonset yaml will force the agent to always use the image <code class=\"notranslate\">docker.io/nicolaka/netshoot:latest</code> regardless of what the user specifies on the kubectl-debug command line</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"          env : \n            - name: KCTLDBG_RESTRICT_IMAGE_TO\n              value: docker.io/nicolaka/netshoot:latest\"><pre class=\"notranslate\"><code class=\"notranslate\">          env : \n            - name: KCTLDBG_RESTRICT_IMAGE_TO\n              value: docker.io/nicolaka/netshoot:latest\n</code></pre></div>\n<p dir=\"auto\">If <code class=\"notranslate\">KCTLDBG_RESTRICT_IMAGE_TO</code> is set and as a result agent is using an image that is different than what the user requested then the agent will log to standard out a message that announces what is happening.   The message will include the URI's of both images.</p>\n<p dir=\"auto\">Auditing can be enabled by placing<br>\n<code class=\"notranslate\">audit: true</code><br>\nin the agent's config file.</p>\n<p dir=\"auto\">There are 3 settings related to auditing.</p>\n<dl>\n<dt><code class=\"notranslate\">audit</code></dt>\n<dd>Boolean value that indicates whether auditing should be enabled or not.  Default value is <code class=\"notranslate\">false</code></dd>\n<dt><code class=\"notranslate\">audit_fifo</code></dt>\n<dd>Template of path to a FIFO that will be used to exchange audit information from the debug container to the agent.  The default value is <code class=\"notranslate\">/var/data/kubectl-debug-audit-fifo/KCTLDBG-CONTAINER-ID</code>.   If auditing is enabled then the agent will :\n<ol dir=\"auto\">\n<li>Prior to creating the debug container, create a fifo based on the value of <code class=\"notranslate\">audit_fifo</code>.  The agent will replace <code class=\"notranslate\">KCTLDBG-CONTAINER-ID</code> with the id of the debug container it is creating.</li>\n<li>Create a thread that reads lines of text from the FIFO and then writes log messages to standard out, where the log messages look similar to example below <br>\n<code class=\"notranslate\">\n2020/05/22 17:59:58 runtime.go:717: audit - user: USERNAME/885cbd0506868985a6fc491bb59a2d3c debugee: 48107cbdacf4b478cbf1e2e34dbea6ebb48a2942c5f3d1effbacf0a216eac94f exec: 265   execve(\"/bin/tar\", [\"tar\", \"--help\"], 0x55a8d0dfa6c0 /* 7 vars */) = 0\n</code><br>\nWhere USERNAME is the kubernetes user as determined by the client that launched the debug container and debuggee is the container id of the container being debugged.\n</li>\n<li>Bind mount the fifo it creates to the debugger container.  </li>\n</ol>\n</dd>\n<dt><code class=\"notranslate\">audit_shim</code>\n</dt><dd>String array that will be placed before the command that will be run in the debug container.  The default value is <code class=\"notranslate\">{\"/usr/bin/strace\", \"-o\", \"KCTLDBG-FIFO\", \"-f\", \"-e\", \"trace=/exec\"}</code>.  The agent will replace KCTLDBG-FIFO with the fifo path ( see above )  If auditing is enabled then agent will use the concatenation of the array specified by <code class=\"notranslate\">audit_shim</code> and the original command array it was going to use.</dd>\n</dl>\n<p dir=\"auto\">The easiest way to enable auditing is to define a config map in the yaml you use to deploy the deamonset.   You can do this by place</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"apiVersion : v1\nkind: ConfigMap \nmetadata: \n  name : kubectl-debug-agent-config\ndata: \n  agent-config.yml: |  \n    audit: true\n---    \"><pre class=\"notranslate\"><code class=\"notranslate\">apiVersion : v1\nkind: ConfigMap \nmetadata: \n  name : kubectl-debug-agent-config\ndata: \n  agent-config.yml: |  \n    audit: true\n---    \n</code></pre></div>\n<p dir=\"auto\">at the top of the file, adding a <code class=\"notranslate\">configmap</code> volume like so</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        - name: config\n          configMap:\n            name: kubectl-debug-agent-config\"><pre class=\"notranslate\"><code class=\"notranslate\">        - name: config\n          configMap:\n            name: kubectl-debug-agent-config\n</code></pre></div>\n<p dir=\"auto\">and a volume mount like so</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            - name: config\n              mountPath: &quot;/etc/kubectl-debug/agent-config.yml&quot;\n              subPath: agent-config.yml\"><pre class=\"notranslate\"><code class=\"notranslate\">            - name: config\n              mountPath: \"/etc/kubectl-debug/agent-config.yml\"\n              subPath: agent-config.yml\n</code></pre></div>\n<p dir=\"auto\">.</p>\n<h1 dir=\"auto\">Roadmap</h1>\n<p dir=\"auto\"><code class=\"notranslate\">kubectl-debug</code> is supposed to be just a troubleshooting helper, and is going be replaced by the native <code class=\"notranslate\">kubectl debug</code> command when <a href=\"https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/troubleshoot-running-pods.md\">this proposal</a> is implemented and merged in the future kubernetes release. But for now, there is still some works to do to improve <code class=\"notranslate\">kubectl-debug</code>.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" aria-label=\"Incomplete task\"> Security: currently, <code class=\"notranslate\">kubectl-debug</code> do authorization in the client-side, which should be moved to the server-side (debug-agent)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" aria-label=\"Incomplete task\"> More unit tests</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" aria-label=\"Incomplete task\"> More real world debugging example</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" aria-label=\"Incomplete task\"> e2e tests</li>\n</ul>\n<p dir=\"auto\">If you are interested in any of the above features, please file an issue to avoid potential duplication.</p>\n<h1 dir=\"auto\">Contribute</h1>\n<p dir=\"auto\">Feel free to open issues and pull requests. Any feedback is highly appreciated!</p>\n<h1 dir=\"auto\">Acknowledgement</h1>\n<p dir=\"auto\">This project would not be here without the effort of <a href=\"https://github.com/aylei/kubectl-debug/graphs/contributors\">our contributors</a>, thanks!</p>","updatedAt":"2025-05-21T16:07:35Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"K8S-Tools","color":"2d411a"}},{"node":{"name":"aylei","color":"de819e"}}]},"comments":{"edges":[]}}},"pageContext":{"number":310,"previous":{"title":"hidetatz/kubecolor: 可以给 kubectl 命令行输出内容着色的一个工具","number":309},"next":{"title":"itaysk/kubectl-neat: 能够智能清除 kubectl get pod -o yaml 时的无用输出，使其更易于阅读","number":311}}},
    "staticQueryHashes": ["151096407","2861350382"]}