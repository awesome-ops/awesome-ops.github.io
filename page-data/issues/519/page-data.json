{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/519",
    "result": {"data":{"issuesJson":{"id":"afcbbcc9-a682-5e51-a0c9-0b995db0357f","title":"lotabout/skim: 一个类似 grep 命令的通用的模糊查找器，可以节省您的时间。","number":519,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/lotabout/skim\">lotabout/skim</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/f55efddfb6755594390bce8203e048f8df0ba53e54802711834d832a6f5c32fe/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f6c6f7461626f75742f736b696d2e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/lotabout/skim.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/99ae3e501247a332d3ea2794e7ace15ba612c1b9db229aa8e86830a14740d0b6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6c6f7461626f75742f736b696d3f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/lotabout/skim?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/947a4d3b5731d6c3e7c2f557918c2c72f1f2de2734fb8b0c0cf50943f4228580/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6c6f7461626f75742f736b696d3f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/lotabout/skim?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/100b7323bbeaea2918de7ea86f5bc23cd2099deff5fd269f8c810dbe1c58fa8a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6c6f7461626f75742f736b696d3f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/lotabout/skim?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/5d85e4899ed05571625e9ecfa75e5b56449107ef37b9b9fd1d069cbadc8a98ce/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6c6f7461626f75742f736b696d3f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/lotabout/skim?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/99234af5ff7a488ded4ddee83c42972265cf6f331ee93ae60097450815e2794b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f6c6f7461626f75742f736b696d3f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/lotabout/skim?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<p align=\"center\" dir=\"auto\">\n  <a href=\"https://crates.io/crates/skim\" rel=\"nofollow\">\n    <img src=\"https://camo.githubusercontent.com/f1b89b41779abbfb99fe49536b5924535c58ab2bcd10f8c6b2952e16fe6cebaf/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f736b696d2e737667\" alt=\"Crates.io\" data-canonical-src=\"https://img.shields.io/crates/v/skim.svg\" style=\"max-width: 100%;\">\n  </a>\n  <a href=\"https://github.com/skim-rs/skim/actions?query=workflow%3A%22Build+%26+Test%22+event%3Apush\">\n    <img src=\"https://github.com/skim-rs/skim/actions/workflows/test.yml/badge.svg?event=push\" alt=\"Build &amp; Test\" style=\"max-width: 100%;\">\n  </a>\n  <a href=\"https://repology.org/project/skim-fuzzy-finder/versions\" rel=\"nofollow\">\n    <img src=\"https://camo.githubusercontent.com/5b8baf8a6e45c83dfe43f4bd3ee067a29b8c1c94fc759625c803547d783d4df1/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f736b696d2d66757a7a792d66696e6465722e737667\" alt=\"Packaging status\" data-canonical-src=\"https://repology.org/badge/tiny-repos/skim-fuzzy-finder.svg\" style=\"max-width: 100%;\">\n  </a>\n  <a href=\"https://discord.gg/23PuxttufP\" rel=\"nofollow\">\n    <img alt=\"Skim Discord\" src=\"https://camo.githubusercontent.com/a03ba5a2ebf42743db61958d1e713e039dae693ac45332bb86dde54da8c14a7a/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f313033313833303935373433323530343336313f6c6162656c3d26636f6c6f723d373338396438266c6162656c436f6c6f723d366137656332266c6f676f436f6c6f723d666666666666266c6f676f3d646973636f7264\" data-canonical-src=\"https://img.shields.io/discord/1031830957432504361?label=&amp;color=7389d8&amp;labelColor=6a7ec2&amp;logoColor=ffffff&amp;logo=discord\" style=\"max-width: 100%;\">\n  </a>\n</p>\n<blockquote>\n<p dir=\"auto\">Life is short, skim!</p>\n</blockquote>\n<p dir=\"auto\">Half of our life is spent on navigation: files, lines, commands… You need skim!<br>\nIt's a general fuzzy finder that saves you time.</p>\n<p dir=\"auto\"><a href=\"https://asciinema.org/a/pIfwazaM0mTHA8F7qRbjrqOnm\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/e1d49de5d99dddcf2ac7d6adff52225b076df2911f4f3aa15685cfe437ea08c6/68747470733a2f2f61736369696e656d612e6f72672f612f70496677617a614d306d5448413846377152626a72714f6e6d2e737667\" alt=\"skim demo\" data-canonical-src=\"https://asciinema.org/a/pIfwazaM0mTHA8F7qRbjrqOnm.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">skim provides a single executable: <code class=\"notranslate\">sk</code>. Anywhere you would want to use<br>\n<code class=\"notranslate\">grep</code>, try <code class=\"notranslate\">sk</code> instead!</p>\n<h1 dir=\"auto\">Table of contents</h1>\n<ul dir=\"auto\">\n<li><a href=\"#installation\">Installation</a>\n<ul dir=\"auto\">\n<li><a href=\"#package-managers\">Package Managers</a></li>\n<li><a href=\"#manually\">Manually</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\">Usage</a>\n<ul dir=\"auto\">\n<li><a href=\"#as-vim-plugin\">As Vim plugin</a></li>\n<li><a href=\"#as-filter\">As filter</a></li>\n<li><a href=\"#as-interactive-interface\">As Interactive Interface</a></li>\n<li><a href=\"#shell-bindings\">Shell Bindings</a></li>\n<li><a href=\"#key-bindings\">Key Bindings</a></li>\n<li><a href=\"#search-syntax\">Search Syntax</a></li>\n<li><a href=\"#exit-code\">exit code</a></li>\n</ul>\n</li>\n<li><a href=\"#tools-compatible-with-skim\">Tools compatible with <code class=\"notranslate\">skim</code></a>\n<ul dir=\"auto\">\n<li><a href=\"#fzf-lua-neovim-plugin\">fzf-lua neovim plugin</a></li>\n<li><a href=\"#nu_plugin_skim\">nu_plugin_skim</a></li>\n</ul>\n</li>\n<li><a href=\"#customization\">Customization</a>\n<ul dir=\"auto\">\n<li><a href=\"#keymap\">Keymap</a></li>\n<li><a href=\"#sort-criteria\">Sort Criteria</a></li>\n<li><a href=\"#color-scheme\">Color Scheme</a></li>\n<li><a href=\"#misc\">Misc</a></li>\n</ul>\n</li>\n<li><a href=\"#advanced-topics\">Advanced Topics</a>\n<ul dir=\"auto\">\n<li><a href=\"#interactive-mode\">Interactive mode</a>\n<ul dir=\"auto\">\n<li><a href=\"#how-does-it-work\">How does it work?</a></li>\n</ul>\n</li>\n<li><a href=\"#executing-external-programs\">Executing external programs</a></li>\n<li><a href=\"#preview-window\">Preview Window</a>\n<ul dir=\"auto\">\n<li><a href=\"#how-does-it-work-1\">How does it work?</a></li>\n</ul>\n</li>\n<li><a href=\"#fields-support\">Fields support</a></li>\n<li><a href=\"#use-as-a-library\">Use as a library</a></li>\n<li><a href=\"#tuikit\">Tuikit</a></li>\n</ul>\n</li>\n<li><a href=\"#faq\">FAQ</a>\n<ul dir=\"auto\">\n<li><a href=\"#how-to-ignore-files\">How to ignore files?</a></li>\n<li><a href=\"#some-files-are-not-shown-in-vim-plugin\">Some files are not shown in Vim plugin</a></li>\n</ul>\n</li>\n<li><a href=\"#differences-from-fzf\">Differences from fzf</a></li>\n<li><a href=\"#how-to-contribute\">How to contribute</a></li>\n<li><a href=\"#troubleshooting\">Troubleshooting</a>\n<ul dir=\"auto\">\n<li><a href=\"#no-line-feed-issues-with-nix-freebsd-termux\">No line feed issues with nix, FreeBSD, termux</a></li>\n</ul>\n</li>\n</ul>\n<h1 dir=\"auto\">Installation</h1>\n<p dir=\"auto\">The skim project contains several components:</p>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">sk</code> executable -- the core.</li>\n<li><code class=\"notranslate\">sk-tmux</code> -- script for launching <code class=\"notranslate\">sk</code> in a tmux pane.</li>\n<li>Vim/Nvim plugin -- to call <code class=\"notranslate\">sk</code> inside Vim/Nvim. Check <a href=\"https://github.com/skim-rs/skim/blob/master/plugin/skim.vim\">skim.vim</a> for Vim support.</li>\n</ol>\n<h2 dir=\"auto\">Package Managers</h2>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th>OS</th>\n<th>Package Manager</th>\n<th>Command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>macOS</td>\n<td>Homebrew</td>\n<td><code class=\"notranslate\">brew install sk</code></td>\n</tr>\n<tr>\n<td>macOS</td>\n<td>MacPorts</td>\n<td><code class=\"notranslate\">sudo port install skim</code></td>\n</tr>\n<tr>\n<td>Fedora</td>\n<td>dnf</td>\n<td><code class=\"notranslate\">dnf install skim</code></td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td>apk</td>\n<td><code class=\"notranslate\">apk add skim</code></td>\n</tr>\n<tr>\n<td>Arch</td>\n<td>pacman</td>\n<td><code class=\"notranslate\">pacman -S skim</code></td>\n</tr>\n<tr>\n<td>Gentoo</td>\n<td>Portage</td>\n<td><code class=\"notranslate\">emerge --ask app-misc/skim</code></td>\n</tr>\n<tr>\n<td>Guix</td>\n<td>guix</td>\n<td><code class=\"notranslate\">guix install skim</code></td>\n</tr>\n<tr>\n<td>Void</td>\n<td>XBPS</td>\n<td><code class=\"notranslate\">xbps-install -S skim</code></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://repology.org/project/skim-fuzzy-finder/versions\" rel=\"nofollow\">\n    <img src=\"https://camo.githubusercontent.com/4d9228da289c810dbe2ff9ca9666e2efd03bd21108221a7d302330768b5720ad/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f766572746963616c2d616c6c7265706f732f736b696d2d66757a7a792d66696e6465722e7376673f636f6c756d6e733d34\" alt=\"Packaging status\" data-canonical-src=\"https://repology.org/badge/vertical-allrepos/skim-fuzzy-finder.svg?columns=4\" style=\"max-width: 100%;\">\n</a>\n<h2 dir=\"auto\">Manually</h2>\n<p dir=\"auto\">Any of the following applies:</p>\n<ul dir=\"auto\">\n<li>Using Git\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ git clone --depth 1 git@github.com:skim-rs/skim.git ~/.skim\n$ ~/.skim/install\"><pre class=\"notranslate\">$ git clone --depth 1 git@github.com:skim-rs/skim.git <span class=\"pl-k\">~</span>/.skim\n$ <span class=\"pl-k\">~</span>/.skim/install</pre></div>\n</li>\n<li>Using Binary: directly <a href=\"https://github.com/skim-rs/skim/releases\">download the sk executable</a>.</li>\n<li>Install from <a href=\"https://crates.io/\" rel=\"nofollow\">crates.io</a>: <code class=\"notranslate\">cargo install skim</code></li>\n<li>Build Manually\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ git clone --depth 1 git@github.com:skim-rs/skim.git ~/.skim\n$ cd ~/.skim\n$ cargo install\n$ cargo build --release\n$ # put the resulting `target/release/sk` executable on your PATH.\"><pre class=\"notranslate\">$ git clone --depth 1 git@github.com:skim-rs/skim.git <span class=\"pl-k\">~</span>/.skim\n$ <span class=\"pl-c1\">cd</span> <span class=\"pl-k\">~</span>/.skim\n$ cargo install\n$ cargo build --release\n$ <span class=\"pl-c\"><span class=\"pl-c\">#</span> put the resulting `target/release/sk` executable on your PATH.</span></pre></div>\n</li>\n</ul>\n<h1 dir=\"auto\">Usage</h1>\n<p dir=\"auto\">skim can be used as a general filter (like <code class=\"notranslate\">grep</code>) or as an interactive<br>\ninterface for invoking commands.</p>\n<h2 dir=\"auto\">As Vim plugin</h2>\n<p dir=\"auto\">Via vim-plug (recommended):</p>\n<div class=\"highlight highlight-source-viml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Plug 'skim-rs/skim', { 'dir': '~/.skim', 'do': './install' }\"><pre class=\"notranslate\">Plug <span class=\"pl-s\"><span class=\"pl-pds\">'</span>skim-rs/skim<span class=\"pl-pds\">'</span></span>, { <span class=\"pl-s\"><span class=\"pl-pds\">'</span>dir<span class=\"pl-pds\">'</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>~/.skim<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>do<span class=\"pl-pds\">'</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./install<span class=\"pl-pds\">'</span></span> }</pre></div>\n<h2 dir=\"auto\">As filter</h2>\n<p dir=\"auto\">Try the following:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# directly invoke skim\nsk\n\n# or pipe some input to it: (press TAB key to select multiple items with -m enabled)\nvim $(find . -name &quot;*.rs&quot; | sk -m)\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> directly invoke skim</span>\nsk\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> or pipe some input to it: (press TAB key to select multiple items with -m enabled)</span>\nvim <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>find <span class=\"pl-c1\">.</span> -name <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*.rs<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> sk -m<span class=\"pl-pds\">)</span></span></pre></div>\n<p dir=\"auto\">The above command will allow you to select files with \".rs\" extension and open<br>\nthe ones you selected in Vim.</p>\n<h2 dir=\"auto\">As Interactive Interface</h2>\n<p dir=\"auto\"><code class=\"notranslate\">skim</code> can invoke other commands dynamically. Normally you would want to<br>\nintegrate it with <a href=\"https://www.gnu.org/software/grep/\" rel=\"nofollow\">grep</a>,<br>\n<a href=\"https://github.com/petdance/ack2\">ack</a>,<br>\n<a href=\"https://github.com/ggreer/the_silver_searcher\">ag</a>, or<br>\n<a href=\"https://github.com/BurntSushi/ripgrep\">rg</a> for searching contents in a<br>\nproject directory:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# works with grep\nsk --ansi -i -c 'grep -rI --color=always --line-number &quot;{}&quot; .'\n# works with ack\nsk --ansi -i -c 'ack --color &quot;{}&quot;'\n# works with ag\nsk --ansi -i -c 'ag --color &quot;{}&quot;'\n# works with rg\nsk --ansi -i -c 'rg --color=always --line-number &quot;{}&quot;'\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> works with grep</span>\nsk --ansi -i -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>grep -rI --color=always --line-number \"{}\" .<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> works with ack</span>\nsk --ansi -i -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ack --color \"{}\"<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> works with ag</span>\nsk --ansi -i -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ag --color \"{}\"<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> works with rg</span>\nsk --ansi -i -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rg --color=always --line-number \"{}\"<span class=\"pl-pds\">'</span></span></pre></div>\n<blockquote>\n<p dir=\"auto\"><strong>Note</strong>: in these examples, <code class=\"notranslate\">{}</code> will be litterally expanded to the current input query.<br>\nThis does mean that these examples will search for the exact query string, and not fuzzily.<br>\nTo achieve fuzzy search, you need to pipe the command output into <code class=\"notranslate\">sk</code>, without interactive mode.</p>\n</blockquote>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://cloud.githubusercontent.com/assets/1527040/21603930/655d859a-d1db-11e6-9fec-c25099d30a12.gif\"><img src=\"https://cloud.githubusercontent.com/assets/1527040/21603930/655d859a-d1db-11e6-9fec-c25099d30a12.gif\" alt=\"interactive mode demo\" data-animated-image=\"\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Shell Bindings</h2>\n<p dir=\"auto\">Bindings for Fish, Bash and Zsh are available in the <code class=\"notranslate\">shell</code> directory:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">completion.{shell}</code> contains the completion scripts for <code class=\"notranslate\">sk</code> cli usage</li>\n<li><code class=\"notranslate\">key-bindings.{shell}</code> contains key-binds and shell integrations:\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">ctrl-t</code> to select a file through <code class=\"notranslate\">sk</code></li>\n<li><code class=\"notranslate\">ctrl-r</code> to select an history entry through <code class=\"notranslate\">sk</code></li>\n<li><code class=\"notranslate\">alt-c</code>  to <code class=\"notranslate\">cd</code> into a directory selected through <code class=\"notranslate\">sk</code></li>\n<li>(not available in <code class=\"notranslate\">fish</code>) <code class=\"notranslate\">**</code> to complete file paths, for example <code class=\"notranslate\">ls **&lt;tab&gt;</code> will show a <code class=\"notranslate\">sk</code> widget to select a folder</li>\n</ul>\n</li>\n</ul>\n<p dir=\"auto\">To enable them, you need to source the <code class=\"notranslate\">key-bindings.{shell}</code> file and enable the completions according to your shell's documentation (usually by placing them in the right directory).</p>\n<h2 dir=\"auto\">Key Bindings</h2>\n<p dir=\"auto\">Some commonly used key bindings:</p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Key</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\">Enter</td>\n<td>Accept (select current one and quit)</td>\n</tr>\n<tr>\n<td align=\"right\">ESC/Ctrl-G</td>\n<td>Abort</td>\n</tr>\n<tr>\n<td align=\"right\">Ctrl-P/Up</td>\n<td>Move cursor up</td>\n</tr>\n<tr>\n<td align=\"right\">Ctrl-N/Down</td>\n<td>Move cursor Down</td>\n</tr>\n<tr>\n<td align=\"right\">TAB</td>\n<td>Toggle selection and move down (with <code class=\"notranslate\">-m</code>)</td>\n</tr>\n<tr>\n<td align=\"right\">Shift-TAB</td>\n<td>Toggle selection and move up (with <code class=\"notranslate\">-m</code>)</td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<p dir=\"auto\">For the full list of key bindings, check out the <a href=\"https://github.com/skim-rs/skim/blob/master/man/man1/sk.1\">man<br>\npage</a> (<code class=\"notranslate\">man sk</code>).</p>\n<h2 dir=\"auto\">Search Syntax</h2>\n<p dir=\"auto\"><code class=\"notranslate\">skim</code> borrows <code class=\"notranslate\">fzf</code>'s syntax for matching items:</p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th>Token</th>\n<th>Match type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"notranslate\">text</code></td>\n<td>fuzzy-match</td>\n<td>items that match <code class=\"notranslate\">text</code></td>\n</tr>\n<tr>\n<td><code class=\"notranslate\">^music</code></td>\n<td>prefix-exact-match</td>\n<td>items that start with <code class=\"notranslate\">music</code></td>\n</tr>\n<tr>\n<td><code class=\"notranslate\">.mp3$</code></td>\n<td>suffix-exact-match</td>\n<td>items that end with <code class=\"notranslate\">.mp3</code></td>\n</tr>\n<tr>\n<td><code class=\"notranslate\">'wild</code></td>\n<td>exact-match (quoted)</td>\n<td>items that include <code class=\"notranslate\">wild</code></td>\n</tr>\n<tr>\n<td><code class=\"notranslate\">!fire</code></td>\n<td>inverse-exact-match</td>\n<td>items that do not include <code class=\"notranslate\">fire</code></td>\n</tr>\n<tr>\n<td><code class=\"notranslate\">!.mp3$</code></td>\n<td>inverse-suffix-exact-match</td>\n<td>items that do not end with <code class=\"notranslate\">.mp3</code></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<p dir=\"auto\"><code class=\"notranslate\">skim</code> also supports the combination of tokens.</p>\n<ul dir=\"auto\">\n<li>Whitespace has the meaning of <code class=\"notranslate\">AND</code>. With the term <code class=\"notranslate\">src main</code>, <code class=\"notranslate\">skim</code> will search<br>\nfor items that match <strong>both</strong> <code class=\"notranslate\">src</code> and <code class=\"notranslate\">main</code>.</li>\n<li><code class=\"notranslate\">|</code> means <code class=\"notranslate\">OR</code> (note the spaces around <code class=\"notranslate\">|</code>). With the term <code class=\"notranslate\">.md$ | .markdown$</code>, <code class=\"notranslate\">skim</code> will search for items ends with either <code class=\"notranslate\">.md</code> or<br>\n<code class=\"notranslate\">.markdown</code>.</li>\n<li><code class=\"notranslate\">OR</code> has higher precedence. So <code class=\"notranslate\">readme .md$ | .markdown$</code> is grouped into<br>\n<code class=\"notranslate\">readme AND (.md$ OR .markdown$)</code>.</li>\n</ul>\n<p dir=\"auto\">In case that you want to use regular expressions, <code class=\"notranslate\">skim</code> provides <code class=\"notranslate\">regex</code> mode:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sk --regex\"><pre class=\"notranslate\">sk --regex</pre></div>\n<p dir=\"auto\">You can switch to <code class=\"notranslate\">regex</code> mode dynamically by pressing <code class=\"notranslate\">Ctrl-R</code> (Rotate Mode).</p>\n<h2 dir=\"auto\">exit code</h2>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th>Exit Code</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Exited normally</td>\n</tr>\n<tr>\n<td>1</td>\n<td>No Match found</td>\n</tr>\n<tr>\n<td>130</td>\n<td>Aborted by Ctrl-C/Ctrl-G/ESC/etc...</td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<h1 dir=\"auto\">Tools compatible with <code class=\"notranslate\">skim</code></h1>\n<p dir=\"auto\">These tools are or aim to be compatible with <code class=\"notranslate\">skim</code>:</p>\n<h2 dir=\"auto\"><a href=\"https://github.com/ibhagwan/fzf-lua\">fzf-lua neovim plugin</a></h2>\n<p dir=\"auto\">A <a href=\"https://neovim.io\" rel=\"nofollow\">neovim</a> plugin allowing fzf and skim to be used in a to navigate your code.</p>\n<p dir=\"auto\">Install it with your package manager, following the README. For instance, with <code class=\"notranslate\">lazy.nvim</code>:</p>\n<div class=\"highlight highlight-source-lua notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;ibhagwan/fzf-lua&quot;,\n  -- enable `sk` support instead of the default `fzf`\n  opts = {'skim'}\n}\"><pre class=\"notranslate\">{\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ibhagwan/fzf-lua<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-c\"><span class=\"pl-c\">--</span> enable `sk` support instead of the default `fzf`</span>\n  <span class=\"pl-smi\">opts</span> <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>skim<span class=\"pl-pds\">'</span></span>}\n}</pre></div>\n<h2 dir=\"auto\"><a href=\"https://github.com/idanarye/nu_plugin_skim\">nu_plugin_skim</a></h2>\n<p dir=\"auto\">A <a href=\"https://www.nushell.sh/\" rel=\"nofollow\">nushell</a> plugin to allow for better interaction between skim and nushell.</p>\n<p dir=\"auto\">Following the instruction in the plugin's README, you can install it with cargo:</p>\n<div class=\"highlight highlight-source-nu notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"cargo install nu_plugin_skim\nplugin add ~/.cargo/bin/nu_plugin_skim\"><pre class=\"notranslate\">cargo install nu_plugin_skim\nplugin add ~<span class=\"pl-sr\">/.cargo/</span>bin<span class=\"pl-sr\">/nu_plugin_skim</span></pre></div>\n<h1 dir=\"auto\">Customization</h1>\n<p dir=\"auto\">The doc here is only a preview, please check the man page (<code class=\"notranslate\">man sk</code>) for a full<br>\nlist of options.</p>\n<h2 dir=\"auto\">Keymap</h2>\n<p dir=\"auto\">Specify the bindings with comma separated pairs (no space allowed). For example:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sk --bind 'alt-a:select-all,alt-d:deselect-all'\"><pre class=\"notranslate\">sk --bind <span class=\"pl-s\"><span class=\"pl-pds\">'</span>alt-a:select-all,alt-d:deselect-all<span class=\"pl-pds\">'</span></span></pre></div>\n<p dir=\"auto\">Additionally, use <code class=\"notranslate\">+</code> to concatenate actions, such as <code class=\"notranslate\">execute-silent(echo {} | pbcopy)+abort</code>.</p>\n<p dir=\"auto\">See the <em>KEY BINDINGS</em> section of the man page for details.</p>\n<h2 dir=\"auto\">Sort Criteria</h2>\n<p dir=\"auto\">There are five sort keys for results: <code class=\"notranslate\">score, index, begin, end, length</code>. You can<br>\nspecify how the records are sorted by <code class=\"notranslate\">sk --tiebreak score,index,-begin</code> or any<br>\nother order you want.</p>\n<h2 dir=\"auto\">Color Scheme</h2>\n<p dir=\"auto\">It is a high chance that you are a better artist than me. Luckily you won't<br>\nbe stuck with the default colors - <code class=\"notranslate\">skim</code> supports customization of the color scheme.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"--color=[BASE_SCHEME][,COLOR:ANSI]\"><pre class=\"notranslate\">--color=[BASE_SCHEME][,COLOR:ANSI]</pre></div>\n<p dir=\"auto\">The configuration of colors starts with the name of the base color scheme,<br>\nfollowed by custom color mappings. For example:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sk --color=current_bg:24\nsk --color=light,fg:232,bg:255,current_bg:116,info:27\"><pre class=\"notranslate\">sk --color=current_bg:24\nsk --color=light,fg:232,bg:255,current_bg:116,info:27</pre></div>\n<p dir=\"auto\">See the <code class=\"notranslate\">--color</code> option in the man page for details.</p>\n<h2 dir=\"auto\">Misc</h2>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">--ansi</code>: to parse ANSI color codes (e.g., <code class=\"notranslate\">\\e[32mABC</code>) of the data source</li>\n<li><code class=\"notranslate\">--regex</code>: use the query as regular expression to match the data source</li>\n</ul>\n<h1 dir=\"auto\">Advanced Topics</h1>\n<h2 dir=\"auto\">Interactive mode</h2>\n<p dir=\"auto\">In <strong>interactive mode</strong>, you can invoke a command dynamically. Try it out:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sk --ansi -i -c 'rg --color=always --line-number &quot;{}&quot;'\"><pre class=\"notranslate\">sk --ansi -i -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rg --color=always --line-number \"{}\"<span class=\"pl-pds\">'</span></span></pre></div>\n<h3 dir=\"auto\">How does it work?</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/1527040/53381293-461ce380-39ab-11e9-8e86-7c3bbfd557bc.png\"><img src=\"https://user-images.githubusercontent.com/1527040/53381293-461ce380-39ab-11e9-8e86-7c3bbfd557bc.png\" alt=\"skim's interactive mode\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>Skim  accepts two kinds of sources: Command output or piped input</li>\n<li>Skim has two kinds of prompts: A query prompt to specify the query pattern and a<br>\ncommand prompt to specify the \"arguments\" of the command</li>\n<li><code class=\"notranslate\">-c</code> is used to specify the command to execute and defaults to <code class=\"notranslate\">SKIM_DEFAULT_COMMAND</code></li>\n<li><code class=\"notranslate\">-i</code> tells skim to open command prompt on startup, which will show <code class=\"notranslate\">c&gt;</code> by default.</li>\n</ul>\n<p dir=\"auto\">If you want to further narrow down the results returned by the command, press<br>\n<code class=\"notranslate\">Ctrl-Q</code> to toggle interactive mode.</p>\n<h2 dir=\"auto\">Executing external programs</h2>\n<p dir=\"auto\">You can set up key bindings for starting external processes without leaving skim (<code class=\"notranslate\">execute</code>, <code class=\"notranslate\">execute-silent</code>).</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Press F1 to open the file with less without leaving skim\n# Press CTRL-Y to copy the line to clipboard and aborts skim (requires pbcopy)\nsk --bind 'f1:execute(less -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort'\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> Press F1 to open the file with less without leaving skim</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Press CTRL-Y to copy the line to clipboard and aborts skim (requires pbcopy)</span>\nsk --bind <span class=\"pl-s\"><span class=\"pl-pds\">'</span>f1:execute(less -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort<span class=\"pl-pds\">'</span></span></pre></div>\n<h2 dir=\"auto\">Preview Window</h2>\n<p dir=\"auto\">This is a great feature of fzf that skim borrows. For example, we use 'ag' to<br>\nfind the matched lines, and once we narrow down to the target lines, we want to<br>\nfinally decide which lines to pick by checking the context around the line.<br>\n<code class=\"notranslate\">grep</code> and <code class=\"notranslate\">ag</code> have the option <code class=\"notranslate\">--context</code>, and skim can make use of <code class=\"notranslate\">--context</code> for<br>\na better preview window. For example:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sk --ansi -i -c 'ag --color &quot;{}&quot;' --preview &quot;preview.sh {}&quot;\"><pre class=\"notranslate\">sk --ansi -i -c <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ag --color \"{}\"<span class=\"pl-pds\">'</span></span> --preview <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>preview.sh {}<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">(Note that <a href=\"https://github.com/junegunn/fzf.vim/blob/master/bin/preview.sh\">preview.sh</a> is a script to print the context given filename:lines:columns)</p>\n<p dir=\"auto\">You get things like this:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/1527040/30677573-0cee622e-9ebf-11e7-8316-c741324ecb3a.png\"><img src=\"https://user-images.githubusercontent.com/1527040/30677573-0cee622e-9ebf-11e7-8316-c741324ecb3a.png\" alt=\"preview demo\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">How does it work?</h3>\n<p dir=\"auto\">If the preview command is given by the <code class=\"notranslate\">--preview</code> option, skim will replace the<br>\n<code class=\"notranslate\">{}</code> with the current highlighted line surrounded by single quotes, call the<br>\ncommand to get the output, and print the output on the preview window.</p>\n<p dir=\"auto\">Sometimes you don't need the whole line for invoking the command. In this case<br>\nyou can use <code class=\"notranslate\">{}</code>, <code class=\"notranslate\">{1..}</code>, <code class=\"notranslate\">{..3}</code> or <code class=\"notranslate\">{1..5}</code> to select the fields. The<br>\nsyntax is explained in the section <a href=\"#filds-support\">Fields Support</a>.</p>\n<p dir=\"auto\">Lastly, you might want to configure the position of preview window with <code class=\"notranslate\">--preview-window</code>:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">--preview-window up:30%</code> to put the window in the up position with height<br>\n30% of the total height of skim.</li>\n<li><code class=\"notranslate\">--preview-window left:10:wrap</code> to specify the <code class=\"notranslate\">wrap</code> allows the preview<br>\nwindow to wrap the output of the preview command.</li>\n<li><code class=\"notranslate\">--preview-window wrap:hidden</code> to hide the preview window at startup, later<br>\nit can be shown by the action <code class=\"notranslate\">toggle-preview</code>.</li>\n</ul>\n<h2 dir=\"auto\">Fields support</h2>\n<p dir=\"auto\">Normally only plugin users need to understand this.</p>\n<p dir=\"auto\">For example, you have the data source with the format:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;filename&gt;:&lt;line number&gt;:&lt;column number&gt;\"><pre class=\"notranslate\"><span class=\"pl-k\">&lt;</span>filename<span class=\"pl-k\">&gt;</span>:<span class=\"pl-k\">&lt;</span>line number<span class=\"pl-k\">&gt;</span>:<span class=\"pl-k\">&lt;</span>column number<span class=\"pl-k\">&gt;</span></pre></div>\n<p dir=\"auto\">However, you want to search <code class=\"notranslate\">&lt;filename&gt;</code> only when typing in queries. That<br>\nmeans when you type <code class=\"notranslate\">21</code>, you want to find a <code class=\"notranslate\">&lt;filename&gt;</code> that contains <code class=\"notranslate\">21</code>,<br>\nbut not matching line number or column number.</p>\n<p dir=\"auto\">You can use <code class=\"notranslate\">sk --delimiter ':' --nth 1</code> to achieve this.</p>\n<p dir=\"auto\">You can also use <code class=\"notranslate\">--with-nth</code> to re-arrange the order of fields.</p>\n<p dir=\"auto\"><strong>Range Syntax</strong></p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">&lt;num&gt;</code> -- to specify the <code class=\"notranslate\">num</code>-th fields, starting with 1.</li>\n<li><code class=\"notranslate\">start..</code> -- starting from the <code class=\"notranslate\">start</code>-th fields and the rest.</li>\n<li><code class=\"notranslate\">..end</code> -- starting from the <code class=\"notranslate\">0</code>-th field, all the way to <code class=\"notranslate\">end</code>-th field,<br>\nincluding <code class=\"notranslate\">end</code>.</li>\n<li><code class=\"notranslate\">start..end</code> -- starting from <code class=\"notranslate\">start</code>-th field, all the way to <code class=\"notranslate\">end</code>-th<br>\nfield, including <code class=\"notranslate\">end</code>.</li>\n</ul>\n<h2 dir=\"auto\">Use as a library</h2>\n<p dir=\"auto\">Skim can be used as a library in your Rust crates.</p>\n<p dir=\"auto\">First, add skim into your <code class=\"notranslate\">Cargo.toml</code>:</p>\n<div class=\"highlight highlight-source-toml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[dependencies]\nskim = &quot;*&quot;\"><pre class=\"notranslate\">[<span class=\"pl-en\">dependencies</span>]\n<span class=\"pl-smi\">skim</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">Then try to run this simple example:</p>\n<div class=\"highlight highlight-source-rust notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"extern crate skim;\nuse skim::prelude::*;\nuse std::io::Cursor;\n\npub fn main() {\n    let options = SkimOptionsBuilder::default()\n        .height(String::from(&quot;50%&quot;))\n        .multi(true)\n        .build()\n        .unwrap();\n\n    let input = &quot;aaaaa\\nbbbb\\nccc&quot;.to_string();\n\n    // `SkimItemReader` is a helper to turn any `BufRead` into a stream of `SkimItem`\n    // `SkimItem` was implemented for `AsRef&lt;str&gt;` by default\n    let item_reader = SkimItemReader::default();\n    let items = item_reader.of_bufread(Cursor::new(input));\n\n    // `run_with` would read and show items from the stream\n    let selected_items = Skim::run_with(&amp;options, Some(items))\n        .map(|out| out.selected_items)\n        .unwrap_or_else(|| Vec::new());\n\n    for item in selected_items.iter() {\n        println!(&quot;{}&quot;, item.output());\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">extern</span> <span class=\"pl-k\">crate</span> skim<span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">use</span> skim<span class=\"pl-kos\">::</span>prelude<span class=\"pl-kos\">::</span><span class=\"pl-c1\">*</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">use</span> std<span class=\"pl-kos\">::</span>io<span class=\"pl-kos\">::</span><span class=\"pl-v\">Cursor</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">pub</span> <span class=\"pl-k\">fn</span> <span class=\"pl-en\">main</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">let</span> options = <span class=\"pl-smi\">SkimOptionsBuilder</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">default</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">.</span><span class=\"pl-en\">height</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">String</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">from</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"50%\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">.</span><span class=\"pl-en\">multi</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">.</span><span class=\"pl-en\">build</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">.</span><span class=\"pl-en\">unwrap</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">let</span> input = <span class=\"pl-s\">\"aaaaa<span class=\"pl-cce\">\\n</span>bbbb<span class=\"pl-cce\">\\n</span>ccc\"</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_string</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// `SkimItemReader` is a helper to turn any `BufRead` into a stream of `SkimItem`</span>\n    <span class=\"pl-c\">// `SkimItem` was implemented for `AsRef&lt;str&gt;` by default</span>\n    <span class=\"pl-k\">let</span> item_reader = <span class=\"pl-smi\">SkimItemReader</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">default</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">let</span> items = item_reader<span class=\"pl-kos\">.</span><span class=\"pl-en\">of_bufread</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">Cursor</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span>input<span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// `run_with` would read and show items from the stream</span>\n    <span class=\"pl-k\">let</span> selected_items = <span class=\"pl-smi\">Skim</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">run_with</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">&amp;</span>options<span class=\"pl-kos\">,</span> <span class=\"pl-en\">Some</span><span class=\"pl-kos\">(</span>items<span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span>|out| out<span class=\"pl-kos\">.</span><span class=\"pl-c1\">selected_items</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">.</span><span class=\"pl-en\">unwrap_or_else</span><span class=\"pl-kos\">(</span>|| <span class=\"pl-smi\">Vec</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">for</span> item <span class=\"pl-k\">in</span> selected_items<span class=\"pl-kos\">.</span><span class=\"pl-en\">iter</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">println</span><span class=\"pl-en\">!</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"{}\"</span><span class=\"pl-kos\">,</span> item<span class=\"pl-kos\">.</span>output<span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Given an <code class=\"notranslate\">Option&lt;SkimItemReceiver&gt;</code>, skim will read items accordingly, do its<br>\njob and bring us back the user selection including the selected items, the<br>\nquery, etc. Note that:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">SkimItemReceiver</code> is <code class=\"notranslate\">crossbeam::channel::Receiver&lt;Arc&lt;dyn SkimItem&gt;&gt;</code></li>\n<li>If it is none, it will invoke the given command and read items from command output</li>\n<li>Otherwise, it will read the items from the (crossbeam) channel.</li>\n</ul>\n<p dir=\"auto\">Trait <code class=\"notranslate\">SkimItem</code> is provided to customize how a line could be displayed,<br>\ncompared and previewed. It is implemented by default for <code class=\"notranslate\">AsRef&lt;str&gt;</code></p>\n<p dir=\"auto\">Plus, <code class=\"notranslate\">SkimItemReader</code> is a helper to convert a <code class=\"notranslate\">BufRead</code> into<br>\n<code class=\"notranslate\">SkimItemReceiver</code> (we can easily turn a <code class=\"notranslate\">File</code> or <code class=\"notranslate\">String</code> into <code class=\"notranslate\">BufRead</code>),<br>\nso that you could deal with strings or files easily.</p>\n<p dir=\"auto\">Check out more examples under the <a href=\"https://github.com/skim-rs/skim/tree/master/skim/examples\">examples/</a> directory.</p>\n<h2 dir=\"auto\">Tuikit</h2>\n<p dir=\"auto\"><code class=\"notranslate\">tuikit</code> is the TUI framework used in <code class=\"notranslate\">skim</code>. It is available from the library as <code class=\"notranslate\">skim::tuikit</code>.</p>\n<p dir=\"auto\">Check <a href=\"./tuikit/README.md\">the README</a> for more details.</p>\n<h1 dir=\"auto\">FAQ</h1>\n<h2 dir=\"auto\">How to ignore files?</h2>\n<p dir=\"auto\">Skim invokes <code class=\"notranslate\">find .</code> to fetch a list of files for filtering. You can override<br>\nthat by setting the environment variable <code class=\"notranslate\">SKIM_DEFAULT_COMMAND</code>. For example:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ SKIM_DEFAULT_COMMAND=&quot;fd --type f || git ls-tree -r --name-only HEAD || rg --files || find .&quot;\n$ sk\"><pre class=\"notranslate\">$ SKIM_DEFAULT_COMMAND=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fd --type f || git ls-tree -r --name-only HEAD || rg --files || find .<span class=\"pl-pds\">\"</span></span>\n$ sk</pre></div>\n<p dir=\"auto\">You could put it in your <code class=\"notranslate\">.bashrc</code> or <code class=\"notranslate\">.zshrc</code> if you like it to be default.</p>\n<h2 dir=\"auto\">Some files are not shown in Vim plugin</h2>\n<p dir=\"auto\">If you use the Vim plugin and execute the <code class=\"notranslate\">:SK</code> command, you might find some<br>\nof your files not shown.</p>\n<p dir=\"auto\">As described in <a href=\"https://github.com/skim-rs/skim/issues/3\" data-hovercard-type=\"issue\" data-hovercard-url=\"/skim-rs/skim/issues/3/hovercard\">#3</a>, in the Vim<br>\nplugin, <code class=\"notranslate\">SKIM_DEFAULT_COMMAND</code> is set to the command by default:</p>\n<div class=\"highlight highlight-source-viml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"let $SKIM_DEFAULT_COMMAND = &quot;git ls-tree -r --name-only HEAD || rg --files || ag -l -g \\&quot;\\&quot; || find .&quot;\"><pre class=\"notranslate\"><span class=\"pl-k\">let</span> <span class=\"pl-c1\">$SKIM_DEFAULT_COMMAND</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>git ls-tree -r --name-only HEAD || rg --files || ag -l -g <span class=\"pl-cce\">\\\"\\\"</span> || find .<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">That means, the files not recognized by git will not shown. Either override the<br>\ndefault with <code class=\"notranslate\">let $SKIM_DEFAULT_COMMAND = ''</code> or find the missing file by<br>\nyourself.</p>\n<h1 dir=\"auto\">Differences from fzf</h1>\n<p dir=\"auto\"><a href=\"https://github.com/junegunn/fzf\">fzf</a> is a command-line fuzzy finder written<br>\nin Go and <a href=\"https://github.com/skim-rs/skim\">skim</a> tries to implement a new one<br>\nin Rust!</p>\n<p dir=\"auto\">This project is written from scratch. Some decisions of implementation are<br>\ndifferent from fzf. For example:</p>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">skim</code> has an interactive mode.</li>\n<li><code class=\"notranslate\">skim</code> supports pre-selection.</li>\n<li>The fuzzy search algorithm is different.</li>\n</ol>\n<p dir=\"auto\">More generally, <code class=\"notranslate\">skim</code>'s maintainers allow themselves some freedom of implementation.<br>\nThe goal is to keep <code class=\"notranslate\">skim</code> as feature-full as <code class=\"notranslate\">fzf</code> is, but the command flags might differ.</p>\n<h1 dir=\"auto\">How to contribute</h1>\n<p dir=\"auto\"><a href=\"https://github.com/skim-rs/skim/issues/new\">Create new issues</a> if you encounter any bugs<br>\nor have any ideas. Pull requests are warmly welcomed.</p>\n<h1 dir=\"auto\">Troubleshooting</h1>\n<h2 dir=\"auto\">No line feed issues with nix, FreeBSD, termux</h2>\n<p dir=\"auto\">If you encounter display issues like:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ for n in {1..10}; do echo &quot;$n&quot;; done | sk\n  0/10 0/0.&gt; 10/10  10  9  8  7  6  5  4  3  2&gt; 1\"><pre class=\"notranslate\">$ <span class=\"pl-k\">for</span> <span class=\"pl-smi\">n</span> <span class=\"pl-k\">in</span> {1..10}<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$n</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span> <span class=\"pl-k\">|</span> sk\n  0/10 0/0.<span class=\"pl-k\">&gt;</span> 10/10  10  9  8  7  6  5  4  3  <span class=\"pl-k\">2&gt;</span> 1</pre></div>\n<p dir=\"auto\">For example</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"890626418\" data-permission-text=\"Title is private\" data-url=\"https://github.com/skim-rs/skim/issues/412\" data-hovercard-type=\"issue\" data-hovercard-url=\"/skim-rs/skim/issues/412/hovercard\" href=\"https://github.com/skim-rs/skim/issues/412\">skim-rs/skim#412</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1205810940\" data-permission-text=\"Title is private\" data-url=\"https://github.com/skim-rs/skim/issues/455\" data-hovercard-type=\"issue\" data-hovercard-url=\"/skim-rs/skim/issues/455/hovercard\" href=\"https://github.com/skim-rs/skim/issues/455\">skim-rs/skim#455</a></li>\n</ul>\n<p dir=\"auto\">You need to set TERMINFO or TERMINFO_DIRS to the path of a correct terminfo database path</p>\n<p dir=\"auto\">For example, with termux, you can add this in your bashrc:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export TERMINFO=/data/data/com.termux/files/usr/share/terminfo\"><pre class=\"notranslate\"><code class=\"notranslate\">export TERMINFO=/data/data/com.termux/files/usr/share/terminfo\n</code></pre></div>","updatedAt":"2025-05-22T01:48:29Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"命令行工具","color":"e05879"}},{"node":{"name":"lotabout","color":"3d8ae9"}}]},"comments":{"edges":[]}}},"pageContext":{"number":519,"previous":{"title":"TeamStuQ/skill-map: 程序员技能图谱","number":518},"next":{"title":"skooner-k8s/skooner: 简单的 Kubernetes 实时仪表板和管理工具","number":520}}},
    "staticQueryHashes": ["151096407","2861350382"]}