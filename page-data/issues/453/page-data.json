{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/453",
    "result": {"data":{"issuesJson":{"id":"bd898015-ea7e-5b60-9ada-89c9d3627f9d","title":"ncabatoff/process-exporter: 用于进程指标的 Prometheus Exporter","number":453,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/ncabatoff/process-exporter\">ncabatoff/process-exporter</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/8138bf90cb03661b39eed9e6d1f9136d02496cc73823015d4ca836c7ca2be518/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f6e63616261746f66662f70726f636573732d6578706f727465722e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/ncabatoff/process-exporter.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/d0f5c2712e8d6a07cadbd6072f951a6d0a384667c1d38bc1ea0723ad1733a5b1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6e63616261746f66662f70726f636573732d6578706f727465723f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/ncabatoff/process-exporter?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/0b55bd9ce75d6dc0046a3eed7b78858e5a32a72b4c6dd4533a03a47e7e5c1373/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6e63616261746f66662f70726f636573732d6578706f727465723f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/ncabatoff/process-exporter?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/8da574c7a3de53f392d3f0a03d87452f2ec09884b8c957ccfb00d40b007f9e36/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e63616261746f66662f70726f636573732d6578706f727465723f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/ncabatoff/process-exporter?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/377fdc057bbb5ba1f76ed4f2f884fa287c7300d2532f791b6222c73f07ea9378/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6e63616261746f66662f70726f636573732d6578706f727465723f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/ncabatoff/process-exporter?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/93d04815933f907dbd574c6da797d4fac3ba4d48b65cdc0e3bdfb2c0e34ca1b3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f6e63616261746f66662f70726f636573732d6578706f727465723f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/ncabatoff/process-exporter?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<h1 dir=\"auto\">process-exporter</h1>\n<p dir=\"auto\">Prometheus exporter that mines /proc to report on selected processes.</p>\n<p dir=\"auto\"><a href=\"https://github.com/ncabatoff/process-exporter/releases/latest\"><img src=\"https://camo.githubusercontent.com/1ab1152bc59575c3d0508c2b9ddeb3763f1499d15b153d69f2c4b58da94f04e4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6e63616261746f66662f70726f636573732d6578706f727465722e7376673f7374796c653d666c61742d737175617265253232\" alt=\"Release\" data-canonical-src=\"https://img.shields.io/github/release/ncabatoff/process-exporter.svg?style=flat-square%22\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://github.com/goreleaser\"><img src=\"https://camo.githubusercontent.com/9ee4d0da4caa6f1d8354cf40b7fa52a3ddc89df90371535e6532634c7560dbfb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d676f72656c65617365722d677265656e2e7376673f6272616e63683d6d6173746572\" alt=\"Powered By: GoReleaser\" data-canonical-src=\"https://img.shields.io/badge/powered%20by-goreleaser-green.svg?branch=master\" style=\"max-width: 100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ncabatoff/process-exporter/actions/workflows/build.yml/badge.svg\"><img src=\"https://github.com/ncabatoff/process-exporter/actions/workflows/build.yml/badge.svg\" alt=\"Build\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Some apps are impractical to instrument directly, either because you<br>\ndon't control the code or they're written in a language that isn't easy to<br>\ninstrument with Prometheus.  We must instead resort to mining /proc.</p>\n<h2 dir=\"auto\">Installation</h2>\n<p dir=\"auto\">Either grab a package for your OS from the <a href=\"https://github.com/ncabatoff/process-exporter/releases/latest\">Releases</a> page, or<br>\ninstall via <a href=\"https://hub.docker.com/r/ncabatoff/process-exporter/\" rel=\"nofollow\">docker</a>.</p>\n<h2 dir=\"auto\">Running</h2>\n<p dir=\"auto\">Usage:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  process-exporter [options] -config.path filename.yml\"><pre class=\"notranslate\"><code class=\"notranslate\">  process-exporter [options] -config.path filename.yml\n</code></pre></div>\n<p dir=\"auto\">or via docker:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  docker run -d --rm -p 9256:9256 --privileged -v /proc:/host/proc -v `pwd`:/config ncabatoff/process-exporter --procfs /host/proc -config.path /config/filename.yml\n\"><pre class=\"notranslate\"><code class=\"notranslate\">  docker run -d --rm -p 9256:9256 --privileged -v /proc:/host/proc -v `pwd`:/config ncabatoff/process-exporter --procfs /host/proc -config.path /config/filename.yml\n\n</code></pre></div>\n<p dir=\"auto\">Important options (run process-exporter --help for full list):</p>\n<p dir=\"auto\">-children (default:true) makes it so that any process that otherwise<br>\nisn't part of its own group becomes part of the first group found (if any) when<br>\nwalking the process tree upwards.  In other words, resource usage of<br>\nsubprocesses is added to their parent's usage unless the subprocess identifies<br>\nas a different group name.</p>\n<p dir=\"auto\">-threads (default:true) means that metrics will be broken down by thread name<br>\nas well as group name.</p>\n<p dir=\"auto\">-recheck (default:false) means that on each scrape the process names are<br>\nre-evaluated. This is disabled by default as an optimization, but since<br>\nprocesses can choose to change their names, this may result in a process<br>\nfalling into the wrong group if we happen to see it for the first time before<br>\nit's assumed its proper name. You can use -recheck-with-time-limit to enable this<br>\nfeature only for a specific duration after process starts.</p>\n<p dir=\"auto\">-procnames is intended as a quick alternative to using a config file.  Details<br>\nin the following section.</p>\n<p dir=\"auto\">-remove-empty-groups (default:false) forget process groups with no processes.<br>\nThis is particularly useful if you have some process groups that you expect will<br>\nnever return (e.g. if you have process groups named \"scan-\", and once<br>\nthe scan is completed no more process will ever run for that scan again).</p>\n<p dir=\"auto\">To disable any of these options, use the <code class=\"notranslate\">-option=false</code>.</p>\n<h2 dir=\"auto\">Configuration and group naming</h2>\n<p dir=\"auto\">To select and group the processes to monitor, either provide command-line<br>\narguments or use a YAML configuration file.</p>\n<p dir=\"auto\">The recommended option is to use a config file via -config.path, but for<br>\nconvenience and backwards compatibility the -procnames/-namemapping options<br>\nexist as an alternative.</p>\n<h3 dir=\"auto\">Using a config file</h3>\n<p dir=\"auto\">The general format of the -config.path YAML file is a top-level<br>\n<code class=\"notranslate\">process_names</code> section, containing a list of name matchers:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"process_names:\n  - matcher1\n  - matcher2\n  ...\n  - matcherN\"><pre class=\"notranslate\"><code class=\"notranslate\">process_names:\n  - matcher1\n  - matcher2\n  ...\n  - matcherN\n</code></pre></div>\n<p dir=\"auto\">The default config shipped with the deb/rpm packages is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"process_names:\n  - name: &quot;{{.Comm}}&quot;\n    cmdline:\n    - '.+'\"><pre class=\"notranslate\"><code class=\"notranslate\">process_names:\n  - name: \"{{.Comm}}\"\n    cmdline:\n    - '.+'\n</code></pre></div>\n<p dir=\"auto\">A process may only belong to one group: even if multiple items would match, the<br>\nfirst one listed in the file wins.</p>\n<p dir=\"auto\">(Side note: to avoid confusion with the cmdline YAML element, we'll refer to<br>\nthe command-line arguments of a process <code class=\"notranslate\">/proc/&lt;pid&gt;/cmdline</code> as the array<br>\n<code class=\"notranslate\">argv[]</code>.)</p>\n<h4 dir=\"auto\">Using a config file: group name</h4>\n<p dir=\"auto\">Each item in <code class=\"notranslate\">process_names</code> gives a recipe for identifying and naming<br>\nprocesses.  The optional <code class=\"notranslate\">name</code> tag defines a template to use to name<br>\nmatching processes; if not specified, <code class=\"notranslate\">name</code> defaults to <code class=\"notranslate\">{{.ExeBase}}</code>.</p>\n<p dir=\"auto\">Template variables available:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">{{.Comm}}</code> contains the basename of the original executable, i.e. 2nd field in <code class=\"notranslate\">/proc/&lt;pid&gt;/stat</code></li>\n<li><code class=\"notranslate\">{{.ExeBase}}</code> contains the basename of the executable</li>\n<li><code class=\"notranslate\">{{.ExeFull}}</code> contains the fully qualified path of the executable</li>\n<li><code class=\"notranslate\">{{.Username}}</code> contains the username of the effective user</li>\n<li><code class=\"notranslate\">{{.Matches}}</code> map contains all the matches resulting from applying cmdline regexps</li>\n<li><code class=\"notranslate\">{{.PID}}</code> contains the PID of the process.  Note that using PID means the group<br>\nwill only contain a single process.</li>\n<li><code class=\"notranslate\">{{.StartTime}}</code> contains the start time of the process.  This can be useful<br>\nin conjunction with PID because PIDs get reused over time.</li>\n<li><code class=\"notranslate\">{{.Cgroups}}</code> contains (if supported) the cgroups of the process<br>\n(<code class=\"notranslate\">/proc/self/cgroup</code>). This is particularly useful for identifying to which container<br>\na process belongs.</li>\n</ul>\n<p dir=\"auto\">Using <code class=\"notranslate\">PID</code> or <code class=\"notranslate\">StartTime</code> is discouraged: this is almost never what you want,<br>\nand is likely to result in high cardinality metrics which Prometheus will have<br>\ntrouble with.</p>\n<h4 dir=\"auto\">Using a config file: process selectors</h4>\n<p dir=\"auto\">Each item in <code class=\"notranslate\">process_names</code> must contain one or more selectors (<code class=\"notranslate\">comm</code>, <code class=\"notranslate\">exe</code><br>\nor <code class=\"notranslate\">cmdline</code>); if more than one selector is present, they must all match.  Each<br>\nselector is a list of strings to match against a process's <code class=\"notranslate\">comm</code>, <code class=\"notranslate\">argv[0]</code>,<br>\nor in the case of <code class=\"notranslate\">cmdline</code>, a regexp to apply to the command line.  The cmdline<br>\nregexp uses the <a href=\"https://golang.org/pkg/regexp\" rel=\"nofollow\">Go syntax</a>.</p>\n<p dir=\"auto\">For <code class=\"notranslate\">comm</code> and <code class=\"notranslate\">exe</code>, the list of strings is an OR, meaning any process<br>\nmatching any of the strings will be added to the item's group.</p>\n<p dir=\"auto\">For <code class=\"notranslate\">cmdline</code>, the list of regexes is an AND, meaning they all must match.  Any<br>\ncapturing groups in a regexp must use the <code class=\"notranslate\">?P&lt;name&gt;</code> option to assign a name to<br>\nthe capture, which is used to populate <code class=\"notranslate\">.Matches</code>.</p>\n<p dir=\"auto\">Performance tip: give an exe or comm clause in addition to any cmdline<br>\nclause, so you avoid executing the regexp when the executable name doesn't<br>\nmatch.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\nprocess_names:\n  # comm is the second field of /proc/&lt;pid&gt;/stat minus parens.\n  # It is the base executable name, truncated at 15 chars.\n  # It cannot be modified by the program, unlike exe.\n  - comm:\n    - bash\n\n  # exe is argv[0]. If no slashes, only basename of argv[0] need match.\n  # If exe contains slashes, argv[0] must match exactly.\n  - exe:\n    - postgres\n    - /usr/local/bin/prometheus\n\n  # cmdline is a list of regexps applied to argv.\n  # Each must match, and any captures are added to the .Matches map.\n  - name: &quot;{{.ExeFull}}:{{.Matches.Cfgfile}}&quot;\n    exe:\n    - /usr/local/bin/process-exporter\n    cmdline:\n    - -config.path\\s+(?P&lt;Cfgfile&gt;\\S+)\n\"><pre class=\"notranslate\"><code class=\"notranslate\">\nprocess_names:\n  # comm is the second field of /proc/&lt;pid&gt;/stat minus parens.\n  # It is the base executable name, truncated at 15 chars.\n  # It cannot be modified by the program, unlike exe.\n  - comm:\n    - bash\n\n  # exe is argv[0]. If no slashes, only basename of argv[0] need match.\n  # If exe contains slashes, argv[0] must match exactly.\n  - exe:\n    - postgres\n    - /usr/local/bin/prometheus\n\n  # cmdline is a list of regexps applied to argv.\n  # Each must match, and any captures are added to the .Matches map.\n  - name: \"{{.ExeFull}}:{{.Matches.Cfgfile}}\"\n    exe:\n    - /usr/local/bin/process-exporter\n    cmdline:\n    - -config.path\\s+(?P&lt;Cfgfile&gt;\\S+)\n\n</code></pre></div>\n<p dir=\"auto\">Here's the config I use on my home machine:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\nprocess_names:\n  - comm:\n    - chromium-browse\n    - bash\n    - prometheus\n    - gvim\n  - exe:\n    - /sbin/upstart\n    cmdline:\n    - --user\n    name: upstart:-user\n\"><pre class=\"notranslate\"><code class=\"notranslate\">\nprocess_names:\n  - comm:\n    - chromium-browse\n    - bash\n    - prometheus\n    - gvim\n  - exe:\n    - /sbin/upstart\n    cmdline:\n    - --user\n    name: upstart:-user\n\n</code></pre></div>\n<h3 dir=\"auto\">Using -procnames/-namemapping instead of config.path</h3>\n<p dir=\"auto\">Every name in the procnames list becomes a process group. The default name of<br>\na process is the value found in the second field of /proc//stat<br>\n(\"comm\"), which is truncated at 15 chars.  Usually this is the same as the<br>\nname of the executable.</p>\n<p dir=\"auto\">If -namemapping isn't provided, every process with a comm value present<br>\nin -procnames is assigned to a group based on that name, and any other<br>\nprocesses are ignored.</p>\n<p dir=\"auto\">The -namemapping option is a comma-separated list of alternating<br>\nname,regexp values. It allows assigning a name to a process based on a<br>\ncombination of the process name and command line. For example, using</p>\n<p dir=\"auto\">-namemapping \"python2,([^/]+).py,java,-jar\\s+([^/]+).jar\"</p>\n<p dir=\"auto\">will make it so that each different python2 and java -jar invocation will be<br>\ntracked with distinct metrics. Processes whose remapped name is absent from<br>\nthe procnames list will be ignored. On a Ubuntu Xenian machine being used as<br>\na workstation, here's a good way of tracking resource usage for a few<br>\ndifferent key user apps:</p>\n<p dir=\"auto\">process-exporter -namemapping \"upstart,(--user)\" <br>\n-procnames chromium-browse,bash,gvim,prometheus,process-exporter,upstart:-user</p>\n<p dir=\"auto\">Since upstart --user is the parent process of the X11 session, this will<br>\nmake all apps started by the user fall into the group named \"upstart:-user\",<br>\nunless they're one of the others named explicitly with -procnames, like gvim.</p>\n<h2 dir=\"auto\">Group Metrics</h2>\n<p dir=\"auto\">There's no meaningful way to name a process that will only ever name a single process, so process-exporter assumes that every metric will be attached<br>\nto a group of processes - not a<br>\n<a href=\"https://en.wikipedia.org/wiki/Process_group\" rel=\"nofollow\">process group</a> in the technical<br>\nsense, just one or more processes that meet a configuration's specification<br>\nof what should be monitored and how to name it.</p>\n<p dir=\"auto\">All these metrics start with <code class=\"notranslate\">namedprocess_namegroup_</code> and have at minimum<br>\nthe label <code class=\"notranslate\">groupname</code>.</p>\n<h3 dir=\"auto\">num_procs gauge</h3>\n<p dir=\"auto\">Number of processes in this group.</p>\n<h3 dir=\"auto\">cpu_seconds_total counter</h3>\n<p dir=\"auto\">CPU usage based on /proc/[pid]/stat fields utime(14) and stime(15) i.e. user and system time. This is similar to the node_exporter's <code class=\"notranslate\">node_cpu_seconds_total</code>.</p>\n<h3 dir=\"auto\">read_bytes_total counter</h3>\n<p dir=\"auto\">Bytes read based on /proc/[pid]/io field read_bytes.  The man page<br>\nsays</p>\n<blockquote>\n<p dir=\"auto\">Attempt to count the number of bytes which this process really did cause to be fetched from the storage layer.  This is accurate for block-backed filesystems.</p>\n</blockquote>\n<p dir=\"auto\">but I would take it with a grain of salt.</p>\n<p dir=\"auto\">As <code class=\"notranslate\">/proc/[pid]/io</code> are set by the kernel as read only to the process' user (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"3080729967\" data-permission-text=\"Title is private\" data-url=\"https://github.com/awesome-ops/awesome-ops.github.io/issues/137\" data-hovercard-type=\"issue\" data-hovercard-url=\"/awesome-ops/awesome-ops.github.io/issues/137/hovercard\" href=\"https://github.com/awesome-ops/awesome-ops.github.io/issues/137\">#137</a>), to get these values you should run <code class=\"notranslate\">process-exporter</code> either as that user or as <code class=\"notranslate\">root</code>. Otherwise, we can't read these values and you'll get a constant 0 in the metric.</p>\n<h3 dir=\"auto\">write_bytes_total counter</h3>\n<p dir=\"auto\">Bytes written based on /proc/[pid]/io field write_bytes.  As with<br>\nread_bytes, somewhat dubious.  May be useful for isolating which processes<br>\nare doing the most I/O, but probably not measuring just how much I/O is happening.</p>\n<h3 dir=\"auto\">major_page_faults_total counter</h3>\n<p dir=\"auto\">Number of major page faults based on /proc/[pid]/stat field majflt(12).</p>\n<h3 dir=\"auto\">minor_page_faults_total counter</h3>\n<p dir=\"auto\">Number of minor page faults based on /proc/[pid]/stat field minflt(10).</p>\n<h3 dir=\"auto\">context_switches_total counter</h3>\n<p dir=\"auto\">Number of context switches based on /proc/[pid]/status fields voluntary_ctxt_switches<br>\nand nonvoluntary_ctxt_switches.  The extra label <code class=\"notranslate\">ctxswitchtype</code> can have two values:<br>\n<code class=\"notranslate\">voluntary</code> and <code class=\"notranslate\">nonvoluntary</code>.</p>\n<h3 dir=\"auto\">memory_bytes gauge</h3>\n<p dir=\"auto\">Number of bytes of memory used.  The extra label <code class=\"notranslate\">memtype</code> can have three values:</p>\n<p dir=\"auto\"><em>resident</em>: Field rss(24) from /proc/[pid]/stat, whose doc says:</p>\n<blockquote>\n<p dir=\"auto\">This is just the pages which count toward text, data, or stack space.  This does not include pages which have not been demand-loaded in, or which are swapped out.</p>\n</blockquote>\n<p dir=\"auto\"><em>virtual</em>: Field vsize(23) from /proc/[pid]/stat, virtual memory size.</p>\n<p dir=\"auto\"><em>swapped</em>: Field VmSwap from /proc/[pid]/status, translated from KB to bytes.</p>\n<p dir=\"auto\">If gathering smaps file is enabled, two additional values for <code class=\"notranslate\">memtype</code> are added:</p>\n<p dir=\"auto\"><em>proportionalResident</em>: Sum of \"Pss\" fields from /proc/[pid]/smaps, whose doc says:</p>\n<blockquote>\n<p dir=\"auto\">The \"proportional set size\" (PSS) of a process is the count of pages it has<br>\nin memory, where each page is divided by the number of processes sharing it.</p>\n</blockquote>\n<p dir=\"auto\"><em>proportionalSwapped</em>: Sum of \"SwapPss\" fields from /proc/[pid]/smaps</p>\n<h3 dir=\"auto\">open_filedesc gauge</h3>\n<p dir=\"auto\">Number of file descriptors, based on counting how many entries are in the directory<br>\n/proc/[pid]/fd.</p>\n<h3 dir=\"auto\">worst_fd_ratio gauge</h3>\n<p dir=\"auto\">Worst ratio of open filedescs to filedesc limit, amongst all the procs in the<br>\ngroup. The limit is the fd soft limit based on /proc/[pid]/limits.</p>\n<p dir=\"auto\">Normally Prometheus metrics ought to be as \"basic\" as possible (i.e. the raw<br>\nvalues rather than a derived ratio), but we use a ratio here because nothing<br>\nelse makes sense. Suppose there are 10 procs in a given group, each with a<br>\nsoft limit of 4096, and one of them has 4000 open fds and the others all have<br>\n40, their total fdcount is 4360 and total soft limit is 40960, so the ratio<br>\nis 1:10, but in fact one of the procs is about to run out of fds. With<br>\nworst_fd_ratio we're able to know this: in the above example it would be<br>\n0.97, rather than the 0.10 you'd see if you computed sum(open_filedesc) /<br>\nsum(limit_filedesc).</p>\n<h3 dir=\"auto\">oldest_start_time_seconds gauge</h3>\n<p dir=\"auto\">Epoch time (seconds since 1970/1/1) at which the oldest process in the group<br>\nstarted.  This is derived from field starttime(22) from /proc/[pid]/stat, added<br>\nto boot time to make it relative to epoch.</p>\n<h3 dir=\"auto\">num_threads gauge</h3>\n<p dir=\"auto\">Sum of number of threads of all process in the group.  Based on field num_threads(20)<br>\nfrom /proc/[pid]/stat.</p>\n<h3 dir=\"auto\">states gauge</h3>\n<p dir=\"auto\">Number of threads in the group in each of various states, based on the field<br>\nstate(3) from /proc/[pid]/stat.</p>\n<p dir=\"auto\">The extra label <code class=\"notranslate\">state</code> can have these values: <code class=\"notranslate\">Running</code>, <code class=\"notranslate\">Sleeping</code>, <code class=\"notranslate\">Waiting</code>, <code class=\"notranslate\">Zombie</code>, <code class=\"notranslate\">Other</code>.</p>\n<h2 dir=\"auto\">Group Thread Metrics</h2>\n<p dir=\"auto\">Since publishing thread metrics adds a lot of overhead, use the <code class=\"notranslate\">-threads</code> command-line argument to disable them,<br>\nif necessary.</p>\n<p dir=\"auto\">All these metrics start with <code class=\"notranslate\">namedprocess_namegroup_</code> and have at minimum<br>\nthe labels <code class=\"notranslate\">groupname</code> and <code class=\"notranslate\">threadname</code>.  <code class=\"notranslate\">threadname</code> is field comm(2) from<br>\n/proc/[pid]/stat.  Just as groupname breaks the set of processes down into<br>\ngroups, threadname breaks a given process group down into subgroups.</p>\n<h3 dir=\"auto\">thread_count gauge</h3>\n<p dir=\"auto\">Number of threads in this thread subgroup.</p>\n<h3 dir=\"auto\">thread_cpu_seconds_total counter</h3>\n<p dir=\"auto\">Same as cpu_user_seconds_total and cpu_system_seconds_total, but broken down<br>\nper-thread subgroup.  Unlike cpu_user_seconds_total/cpu_system_seconds_total,<br>\nthe label <code class=\"notranslate\">cpumode</code> is used to distinguish between <code class=\"notranslate\">user</code> and <code class=\"notranslate\">system</code> time.</p>\n<h3 dir=\"auto\">thread_io_bytes_total counter</h3>\n<p dir=\"auto\">Same as read_bytes_total and write_bytes_total, but broken down<br>\nper-thread subgroup.  Unlike read_bytes_total/write_bytes_total,<br>\nthe label <code class=\"notranslate\">iomode</code> is used to distinguish between <code class=\"notranslate\">read</code> and <code class=\"notranslate\">write</code> bytes.</p>\n<h3 dir=\"auto\">thread_major_page_faults_total counter</h3>\n<p dir=\"auto\">Same as major_page_faults_total, but broken down per-thread subgroup.</p>\n<h3 dir=\"auto\">thread_minor_page_faults_total counter</h3>\n<p dir=\"auto\">Same as minor_page_faults_total, but broken down per-thread subgroup.</p>\n<h3 dir=\"auto\">thread_context_switches_total counter</h3>\n<p dir=\"auto\">Same as context_switches_total, but broken down per-thread subgroup.</p>\n<h2 dir=\"auto\">Instrumentation cost</h2>\n<p dir=\"auto\">process-exporter will consume CPU in proportion to the number of processes in<br>\nthe system and the rate at which new ones are created.  The most expensive<br>\nparts - applying regexps and executing templates - are only applied once per<br>\nprocess seen, unless the command-line option -recheck is provided.</p>\n<p dir=\"auto\">If you have mostly long-running processes process-exporter overhead should be<br>\nminimal: each time a scrape occurs, it will parse of /proc/$pid/stat and<br>\n/proc/$pid/cmdline for every process being monitored and add a few numbers.</p>\n<h2 dir=\"auto\">Dashboards</h2>\n<p dir=\"auto\">An example Grafana dashboard to view the metrics is available at <a href=\"https://grafana.net/dashboards/249\" rel=\"nofollow\">https://grafana.net/dashboards/249</a></p>\n<h2 dir=\"auto\">Building</h2>\n<p dir=\"auto\">Requires Go 1.21 (at least) installed.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"make\"><pre class=\"notranslate\"><code class=\"notranslate\">make\n</code></pre></div>\n<h2 dir=\"auto\">Exposing metrics through HTTPS</h2>\n<p dir=\"auto\">web-config.yml</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Minimal TLS configuration example. Additionally, a certificate and a key file\n# are needed.\ntls_server_config:\n  cert_file: server.crt\n  key_file: server.key\"><pre class=\"notranslate\"><code class=\"notranslate\"># Minimal TLS configuration example. Additionally, a certificate and a key file\n# are needed.\ntls_server_config:\n  cert_file: server.crt\n  key_file: server.key\n</code></pre></div>\n<p dir=\"auto\">Running</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ./process-exporter -web.config.file web-config.yml &amp;\n$ curl -sk https://localhost:9256/metrics | grep process\n\n# HELP namedprocess_scrape_errors general scrape errors: no proc metrics collected during a cycle\n# TYPE namedprocess_scrape_errors counter\nnamedprocess_scrape_errors 0\n# HELP namedprocess_scrape_partial_errors incremented each time a tracked proc's metrics collection fails partially, e.g. unreadable I/O stats\n# TYPE namedprocess_scrape_partial_errors counter\nnamedprocess_scrape_partial_errors 0\n# HELP namedprocess_scrape_procread_errors incremented each time a proc's metrics collection fails\n# TYPE namedprocess_scrape_procread_errors counter\nnamedprocess_scrape_procread_errors 0\n# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.\n# TYPE process_cpu_seconds_total counter\nprocess_cpu_seconds_total 0.21\n# HELP process_exporter_build_info A metric with a constant '1' value labeled by version, revision, branch, and goversion from which process_exporter was built.\n# TYPE process_exporter_build_info gauge\nprocess_exporter_build_info{branch=&quot;&quot;,goversion=&quot;go1.17.3&quot;,revision=&quot;&quot;,version=&quot;&quot;} 1\n# HELP process_max_fds Maximum number of open file descriptors.\n# TYPE process_max_fds gauge\nprocess_max_fds 1.048576e+06\n# HELP process_open_fds Number of open file descriptors.\n# TYPE process_open_fds gauge\nprocess_open_fds 10\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ./process-exporter -web.config.file web-config.yml &amp;\n$ curl -sk https://localhost:9256/metrics | grep process\n\n# HELP namedprocess_scrape_errors general scrape errors: no proc metrics collected during a cycle\n# TYPE namedprocess_scrape_errors counter\nnamedprocess_scrape_errors 0\n# HELP namedprocess_scrape_partial_errors incremented each time a tracked proc's metrics collection fails partially, e.g. unreadable I/O stats\n# TYPE namedprocess_scrape_partial_errors counter\nnamedprocess_scrape_partial_errors 0\n# HELP namedprocess_scrape_procread_errors incremented each time a proc's metrics collection fails\n# TYPE namedprocess_scrape_procread_errors counter\nnamedprocess_scrape_procread_errors 0\n# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.\n# TYPE process_cpu_seconds_total counter\nprocess_cpu_seconds_total 0.21\n# HELP process_exporter_build_info A metric with a constant '1' value labeled by version, revision, branch, and goversion from which process_exporter was built.\n# TYPE process_exporter_build_info gauge\nprocess_exporter_build_info{branch=\"\",goversion=\"go1.17.3\",revision=\"\",version=\"\"} 1\n# HELP process_max_fds Maximum number of open file descriptors.\n# TYPE process_max_fds gauge\nprocess_max_fds 1.048576e+06\n# HELP process_open_fds Number of open file descriptors.\n# TYPE process_open_fds gauge\nprocess_open_fds 10\n</code></pre></div>\n<p dir=\"auto\">For further information about TLS configuration, please visit: <a href=\"https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md\">exporter-toolkit</a></p>","updatedAt":"2025-05-21T16:16:53Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"Prometheus-Exporter","color":"367acb"}},{"node":{"name":"ncabatoff","color":"4092f5"}}]},"comments":{"edges":[]}}},"pageContext":{"number":453,"previous":{"title":"denilsonsa/prettyping: prettyping 是标准工具的包装器 ping，目的是使输出更漂亮、更丰富多彩、更紧凑且更易于阅读。","number":452},"next":{"title":"dalance/procs: 用 Rust 编写的 ps 的现代替代品","number":454}}},
    "staticQueryHashes": ["151096407","2861350382"]}