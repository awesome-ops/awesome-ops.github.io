{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/617",
    "result": {"data":{"issuesJson":{"id":"3f0f6046-0213-5245-8f9c-466d09f7d70e","title":"BurntSushi/xsv: 一个用于索引、切片、分析、分割和连接 CSV 文件的命令行程序。","number":617,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/BurntSushi/xsv\">BurntSushi/xsv</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/699420e6c50b20120dee4f15906d0f34f5c7915815a755b1bf9fd36028d688e2/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f4275726e7453757368692f7873762e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/BurntSushi/xsv.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/75ef9f2fa4b36678b93f6583c3a8bfde141b301accf866805080de6760cd1536/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f4275726e7453757368692f7873763f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/BurntSushi/xsv?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/095c9cd3504f84d59e6b22ebc7e752f1697524b2891d0e9e4e206f29560509ff/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f4275726e7453757368692f7873763f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/BurntSushi/xsv?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/3b3b98aa788b1316356fdb13aed646307740b8d809c777efd93fbc948071f0ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4275726e7453757368692f7873763f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/BurntSushi/xsv?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/873f20324b27ec5d892de8471da21cb5f035b0756d605b258993330259d7faec/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f4275726e7453757368692f7873763f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/BurntSushi/xsv?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/f4cf121ef9f4fbd0e3d80e1ff66364ff4961c394de69c31b1af156ad12f525b0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f4275726e7453757368692f7873763f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/BurntSushi/xsv?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<h1 dir=\"auto\"><code class=\"notranslate\">xsv</code> is now unmaintained</h1>\n<p dir=\"auto\">In lieu of <code class=\"notranslate\">xsv</code>, I'd recommend either<br>\n<a href=\"https://github.com/dathere/qsv\">qsv</a><br>\nor<br>\n<a href=\"https://github.com/medialab/xan\">xan</a>.</p>\n<hr>\n<p dir=\"auto\">xsv is a command line program for indexing, slicing, analyzing, splitting<br>\nand joining CSV files. Commands should be simple, fast and composable:</p>\n<ol dir=\"auto\">\n<li>Simple tasks should be easy.</li>\n<li>Performance trade offs should be exposed in the CLI interface.</li>\n<li>Composition should not come at the expense of performance.</li>\n</ol>\n<p dir=\"auto\">This README contains information on how to<br>\n<a href=\"https://github.com/BurntSushi/xsv#installation\">install <code class=\"notranslate\">xsv</code></a>, in addition to<br>\na quick tour of several commands.</p>\n<p dir=\"auto\"><a href=\"https://travis-ci.org/BurntSushi/xsv\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/b074494bde82df4a88b3a610a7ad9d3bb356cd9ba6653f11f5601ceb1199ded4/68747470733a2f2f6170692e7472617669732d63692e6f72672f4275726e7453757368692f7873762e737667\" alt=\"Linux build status\" data-canonical-src=\"https://api.travis-ci.org/BurntSushi/xsv.svg\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://ci.appveyor.com/project/BurntSushi/xsv\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/afc9924b56683c2ec8cdcef55c786050d313d40905c8e1387a80176fcf365ff7/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f4275726e7453757368692f7873763f7376673d74727565\" alt=\"Windows build status\" data-canonical-src=\"https://ci.appveyor.com/api/projects/status/github/BurntSushi/xsv?svg=true\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://crates.io/crates/xsv\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/59faa88778f2722b7770c31fc73498242b56fe71f828c52e45b726d8b6638c5f/68747470733a2f2f6d6572697462616467652e6865726f6b756170702e636f6d2f787376\" alt=\"\" data-canonical-src=\"https://meritbadge.herokuapp.com/xsv\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Dual-licensed under MIT or the <a href=\"https://unlicense.org\" rel=\"nofollow\">UNLICENSE</a>.</p>\n<h3 dir=\"auto\">Available commands</h3>\n<ul dir=\"auto\">\n<li><strong>cat</strong> - Concatenate CSV files by row or by column.</li>\n<li><strong>count</strong> - Count the rows in a CSV file. (Instantaneous with an index.)</li>\n<li><strong>fixlengths</strong> - Force a CSV file to have same-length records by either<br>\npadding or truncating them.</li>\n<li><strong>flatten</strong> - A flattened view of CSV records. Useful for viewing one record<br>\nat a time. e.g., <code class=\"notranslate\">xsv slice -i 5 data.csv | xsv flatten</code>.</li>\n<li><strong>fmt</strong> - Reformat CSV data with different delimiters, record terminators<br>\nor quoting rules. (Supports ASCII delimited data.)</li>\n<li><strong>frequency</strong> - Build frequency tables of each column in CSV data. (Uses<br>\nparallelism to go faster if an index is present.)</li>\n<li><strong>headers</strong> - Show the headers of CSV data. Or show the intersection of all<br>\nheaders between many CSV files.</li>\n<li><strong>index</strong> - Create an index for a CSV file. This is very quick and provides<br>\nconstant time indexing into the CSV file.</li>\n<li><strong>input</strong> - Read CSV data with exotic quoting/escaping rules.</li>\n<li><strong>join</strong> - Inner, outer and cross joins. Uses a simple hash index to make it<br>\nfast.</li>\n<li><strong>partition</strong> - Partition CSV data based on a column value.</li>\n<li><strong>sample</strong> - Randomly draw rows from CSV data using reservoir sampling (i.e.,<br>\nuse memory proportional to the size of the sample).</li>\n<li><strong>reverse</strong> - Reverse order of rows in CSV data.</li>\n<li><strong>search</strong> - Run a regex over CSV data. Applies the regex to each field<br>\nindividually and shows only matching rows.</li>\n<li><strong>select</strong> - Select or re-order columns from CSV data.</li>\n<li><strong>slice</strong> - Slice rows from any part of a CSV file. When an index is present,<br>\nthis only has to parse the rows in the slice (instead of all rows leading up<br>\nto the start of the slice).</li>\n<li><strong>sort</strong> - Sort CSV data.</li>\n<li><strong>split</strong> - Split one CSV file into many CSV files of N chunks.</li>\n<li><strong>stats</strong> - Show basic types and statistics of each column in the CSV file.<br>\n(i.e., mean, standard deviation, median, range, etc.)</li>\n<li><strong>table</strong> - Show aligned output of any CSV data using<br>\n<a href=\"https://github.com/BurntSushi/tabwriter\">elastic tabstops</a>.</li>\n</ul>\n<h3 dir=\"auto\">A whirlwind tour</h3>\n<p dir=\"auto\">Let's say you're playing with some of the data from the<br>\n<a href=\"https://github.com/petewarden/dstkdata\">Data Science Toolkit</a>, which contains<br>\nseveral CSV files. Maybe you're interested in the population counts of each<br>\ncity in the world. So grab the data and start examining it:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ curl -LO https://burntsushi.net/stuff/worldcitiespop.csv\n$ xsv headers worldcitiespop.csv\n1   Country\n2   City\n3   AccentCity\n4   Region\n5   Population\n6   Latitude\n7   Longitude\"><pre class=\"notranslate\">$ curl -LO https://burntsushi.net/stuff/worldcitiespop.csv\n$ xsv headers worldcitiespop.csv\n1   Country\n2   City\n3   AccentCity\n4   Region\n5   Population\n6   Latitude\n7   Longitude</pre></div>\n<p dir=\"auto\">The next thing you might want to do is get an overview of the kind of data that<br>\nappears in each column. The <code class=\"notranslate\">stats</code> command will do this for you:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv stats worldcitiespop.csv --everything | xsv table\nfield       type     min            max            min_length  max_length  mean          stddev         median     mode         cardinality\nCountry     Unicode  ad             zw             2           2                                                   cn           234\nCity        Unicode   bab el ahmar  Þykkvibaer     1           91                                                  san jose     2351892\nAccentCity  Unicode   Bâb el Ahmar  ïn Bou Chella  1           91                                                  San Antonio  2375760\nRegion      Unicode  00             Z9             0           2                                        13         04           397\nPopulation  Integer  7              31480498       0           8           47719.570634  302885.559204  10779                   28754\nLatitude    Float    -54.933333     82.483333      1           12          27.188166     21.952614      32.497222  51.15        1038349\nLongitude   Float    -179.983333    180            1           14          37.08886      63.22301       35.28      23.8         1167162\"><pre class=\"notranslate\">$ xsv stats worldcitiespop.csv --everything <span class=\"pl-k\">|</span> xsv table\nfield       <span class=\"pl-c1\">type</span>     min            max            min_length  max_length  mean          stddev         median     mode         cardinality\nCountry     Unicode  ad             zw             2           2                                                   cn           234\nCity        Unicode   bab el ahmar  Þykkvibaer     1           91                                                  san jose     2351892\nAccentCity  Unicode   Bâb el Ahmar  ïn Bou Chella  1           91                                                  San Antonio  2375760\nRegion      Unicode  00             Z9             0           2                                        13         04           397\nPopulation  Integer  7              31480498       0           8           47719.570634  302885.559204  10779                   28754\nLatitude    Float    -54.933333     82.483333      1           12          27.188166     21.952614      32.497222  51.15        1038349\nLongitude   Float    -179.983333    180            1           14          37.08886      63.22301       35.28      23.8         1167162</pre></div>\n<p dir=\"auto\">The <code class=\"notranslate\">xsv table</code> command takes any CSV data and formats it into aligned columns<br>\nusing <a href=\"https://github.com/BurntSushi/tabwriter\">elastic tabstops</a>. You'll<br>\nnotice that it even gets alignment right with respect to Unicode characters.</p>\n<p dir=\"auto\">So, this command takes about 12 seconds to run on my machine, but we can speed<br>\nit up by creating an index and re-running the command:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv index worldcitiespop.csv\n$ xsv stats worldcitiespop.csv --everything | xsv table\n...\"><pre class=\"notranslate\">$ xsv index worldcitiespop.csv\n$ xsv stats worldcitiespop.csv --everything <span class=\"pl-k\">|</span> xsv table\n...</pre></div>\n<p dir=\"auto\">Which cuts it down to about 8 seconds on my machine. (And creating the index<br>\ntakes less than 2 seconds.)</p>\n<p dir=\"auto\">Notably, the same type of \"statistics\" command in another<br>\n<a href=\"https://csvkit.readthedocs.io/\" rel=\"nofollow\">CSV command line toolkit</a><br>\ntakes about 2 minutes to produce similar statistics on the same data set.</p>\n<p dir=\"auto\">Creating an index gives us more than just faster statistics gathering. It also<br>\nmakes slice operations extremely fast because <em>only the sliced portion</em> has to<br>\nbe parsed. For example, let's say you wanted to grab the last 10 records:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv count worldcitiespop.csv\n3173958\n$ xsv slice worldcitiespop.csv -s 3173948 | xsv table\nCountry  City               AccentCity         Region  Population  Latitude     Longitude\nzw       zibalonkwe         Zibalonkwe         06                  -19.8333333  27.4666667\nzw       zibunkululu        Zibunkululu        06                  -19.6666667  27.6166667\nzw       ziga               Ziga               06                  -19.2166667  27.4833333\nzw       zikamanas village  Zikamanas Village  00                  -18.2166667  27.95\nzw       zimbabwe           Zimbabwe           07                  -20.2666667  30.9166667\nzw       zimre park         Zimre Park         04                  -17.8661111  31.2136111\nzw       ziyakamanas        Ziyakamanas        00                  -18.2166667  27.95\nzw       zizalisari         Zizalisari         04                  -17.7588889  31.0105556\nzw       zuzumba            Zuzumba            06                  -20.0333333  27.9333333\nzw       zvishavane         Zvishavane         07      79876       -20.3333333  30.0333333\"><pre class=\"notranslate\">$ xsv count worldcitiespop.csv\n3173958\n$ xsv slice worldcitiespop.csv -s 3173948 <span class=\"pl-k\">|</span> xsv table\nCountry  City               AccentCity         Region  Population  Latitude     Longitude\nzw       zibalonkwe         Zibalonkwe         06                  -19.8333333  27.4666667\nzw       zibunkululu        Zibunkululu        06                  -19.6666667  27.6166667\nzw       ziga               Ziga               06                  -19.2166667  27.4833333\nzw       zikamanas village  Zikamanas Village  00                  -18.2166667  27.95\nzw       zimbabwe           Zimbabwe           07                  -20.2666667  30.9166667\nzw       zimre park         Zimre Park         04                  -17.8661111  31.2136111\nzw       ziyakamanas        Ziyakamanas        00                  -18.2166667  27.95\nzw       zizalisari         Zizalisari         04                  -17.7588889  31.0105556\nzw       zuzumba            Zuzumba            06                  -20.0333333  27.9333333\nzw       zvishavane         Zvishavane         07      79876       -20.3333333  30.0333333</pre></div>\n<p dir=\"auto\">These commands are <em>instantaneous</em> because they run in time and memory<br>\nproportional to the size of the slice (which means they will scale to<br>\narbitrarily large CSV data).</p>\n<p dir=\"auto\">Switching gears a little bit, you might not always want to see every column in<br>\nthe CSV data. In this case, maybe we only care about the country, city and<br>\npopulation. So let's take a look at 10 random rows:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv select Country,AccentCity,Population worldcitiespop.csv \\\n  | xsv sample 10 \\\n  | xsv table\nCountry  AccentCity       Population\ncn       Guankoushang\nza       Klipdrift\nma       Ouled Hammou\nfr       Les Gravues\nla       Ban Phadèng\nde       Lüdenscheid      80045\nqa       Umm ash Shubrum\nbd       Panditgoan\nus       Appleton\nua       Lukashenkivske\"><pre class=\"notranslate\">$ xsv <span class=\"pl-k\">select</span> <span class=\"pl-smi\">Country,AccentCity,Population</span> worldcitiespop.csv \\\n  <span class=\"pl-k\">|</span> xsv sample 10 \\\n  <span class=\"pl-k\">|</span> xsv table\nCountry  AccentCity       Population\ncn       Guankoushang\nza       Klipdrift\nma       Ouled Hammou\nfr       Les Gravues\nla       Ban Phadèng\nde       Lüdenscheid      80045\nqa       Umm ash Shubrum\nbd       Panditgoan\nus       Appleton\nua       Lukashenkivske</pre></div>\n<p dir=\"auto\">Whoops! It seems some cities don't have population counts. How pervasive is<br>\nthat?</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv frequency worldcitiespop.csv --limit 5\nfield,value,count\nCountry,cn,238985\nCountry,ru,215938\nCountry,id,176546\nCountry,us,141989\nCountry,ir,123872\nCity,san jose,328\nCity,san antonio,320\nCity,santa rosa,296\nCity,santa cruz,282\nCity,san juan,255\nAccentCity,San Antonio,317\nAccentCity,Santa Rosa,296\nAccentCity,Santa Cruz,281\nAccentCity,San Juan,254\nAccentCity,San Miguel,254\nRegion,04,159916\nRegion,02,142158\nRegion,07,126867\nRegion,03,122161\nRegion,05,118441\nPopulation,(NULL),3125978\nPopulation,2310,12\nPopulation,3097,11\nPopulation,983,11\nPopulation,2684,11\nLatitude,51.15,777\nLatitude,51.083333,772\nLatitude,50.933333,769\nLatitude,51.116667,769\nLatitude,51.133333,767\nLongitude,23.8,484\nLongitude,23.2,477\nLongitude,23.05,476\nLongitude,25.3,474\nLongitude,23.1,459\"><pre class=\"notranslate\">$ xsv frequency worldcitiespop.csv --limit 5\nfield,value,count\nCountry,cn,238985\nCountry,ru,215938\nCountry,id,176546\nCountry,us,141989\nCountry,ir,123872\nCity,san jose,328\nCity,san antonio,320\nCity,santa rosa,296\nCity,santa cruz,282\nCity,san juan,255\nAccentCity,San Antonio,317\nAccentCity,Santa Rosa,296\nAccentCity,Santa Cruz,281\nAccentCity,San Juan,254\nAccentCity,San Miguel,254\nRegion,04,159916\nRegion,02,142158\nRegion,07,126867\nRegion,03,122161\nRegion,05,118441\nPopulation,(NULL),3125978\nPopulation,2310,12\nPopulation,3097,11\nPopulation,983,11\nPopulation,2684,11\nLatitude,51.15,777\nLatitude,51.083333,772\nLatitude,50.933333,769\nLatitude,51.116667,769\nLatitude,51.133333,767\nLongitude,23.8,484\nLongitude,23.2,477\nLongitude,23.05,476\nLongitude,25.3,474\nLongitude,23.1,459</pre></div>\n<p dir=\"auto\">(The <code class=\"notranslate\">xsv frequency</code> command builds a frequency table for each column in the<br>\nCSV data. This one only took 5 seconds.)</p>\n<p dir=\"auto\">So it seems that most cities do not have a population count associated with<br>\nthem at all. No matter—we can adjust our previous command so that it only<br>\nshows rows with a population count:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv search -s Population '[0-9]' worldcitiespop.csv \\\n  | xsv select Country,AccentCity,Population \\\n  | xsv sample 10 \\\n  | xsv table\nCountry  AccentCity       Population\nes       Barañáin         22264\nes       Puerto Real      36946\nat       Moosburg         4602\nhu       Hejobaba         1949\nru       Polyarnyye Zori  15092\ngr       Kandíla          1245\nis       Ólafsvík         992\nhu       Decs             4210\nbg       Sliven           94252\ngb       Leatherhead      43544\"><pre class=\"notranslate\">$ xsv search -s Population <span class=\"pl-s\"><span class=\"pl-pds\">'</span>[0-9]<span class=\"pl-pds\">'</span></span> worldcitiespop.csv \\\n  <span class=\"pl-k\">|</span> xsv <span class=\"pl-k\">select</span> <span class=\"pl-smi\">Country,AccentCity,Population</span> \\\n  <span class=\"pl-k\">|</span> xsv sample 10 \\\n  <span class=\"pl-k\">|</span> xsv table\nCountry  AccentCity       Population\nes       Barañáin         22264\nes       Puerto Real      36946\nat       Moosburg         4602\nhu       Hejobaba         1949\nru       Polyarnyye Zori  15092\ngr       Kandíla          1245\nis       Ólafsvík         992\nhu       Decs             4210\n<span class=\"pl-c1\">bg</span>       Sliven           94252\ngb       Leatherhead      43544</pre></div>\n<p dir=\"auto\">Erk. Which country is <code class=\"notranslate\">at</code>? No clue, but the Data Science Toolkit has a CSV<br>\nfile called <code class=\"notranslate\">countrynames.csv</code>. Let's grab it and do a join so we can see which<br>\ncountries these are:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"curl -LO https://gist.githubusercontent.com/anonymous/063cb470e56e64e98cf1/raw/98e2589b801f6ca3ff900b01a87fbb7452eb35c7/countrynames.csv\n$ xsv headers countrynames.csv\n1   Abbrev\n2   Country\n$ xsv join --no-case  Country sample.csv Abbrev countrynames.csv | xsv table\nCountry  AccentCity       Population  Abbrev  Country\nes       Barañáin         22264       ES      Spain\nes       Puerto Real      36946       ES      Spain\nat       Moosburg         4602        AT      Austria\nhu       Hejobaba         1949        HU      Hungary\nru       Polyarnyye Zori  15092       RU      Russian Federation | Russia\ngr       Kandíla          1245        GR      Greece\nis       Ólafsvík         992         IS      Iceland\nhu       Decs             4210        HU      Hungary\nbg       Sliven           94252       BG      Bulgaria\ngb       Leatherhead      43544       GB      Great Britain | UK | England | Scotland | Wales | Northern Ireland | United Kingdom\"><pre class=\"notranslate\">curl -LO https://gist.githubusercontent.com/anonymous/063cb470e56e64e98cf1/raw/98e2589b801f6ca3ff900b01a87fbb7452eb35c7/countrynames.csv\n$ xsv headers countrynames.csv\n1   Abbrev\n2   Country\n$ xsv join --no-case  Country sample.csv Abbrev countrynames.csv <span class=\"pl-k\">|</span> xsv table\nCountry  AccentCity       Population  Abbrev  Country\nes       Barañáin         22264       ES      Spain\nes       Puerto Real      36946       ES      Spain\nat       Moosburg         4602        AT      Austria\nhu       Hejobaba         1949        HU      Hungary\nru       Polyarnyye Zori  15092       RU      Russian Federation <span class=\"pl-k\">|</span> Russia\ngr       Kandíla          1245        GR      Greece\nis       Ólafsvík         992         IS      Iceland\nhu       Decs             4210        HU      Hungary\n<span class=\"pl-c1\">bg</span>       Sliven           94252       BG      Bulgaria\ngb       Leatherhead      43544       GB      Great Britain <span class=\"pl-k\">|</span> UK <span class=\"pl-k\">|</span> England <span class=\"pl-k\">|</span> Scotland <span class=\"pl-k\">|</span> Wales <span class=\"pl-k\">|</span> Northern Ireland <span class=\"pl-k\">|</span> United Kingdom</pre></div>\n<p dir=\"auto\">Whoops, now we have two columns called <code class=\"notranslate\">Country</code> and an <code class=\"notranslate\">Abbrev</code> column that we<br>\nno longer need. This is easy to fix by re-ordering columns with the <code class=\"notranslate\">xsv select</code> command:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv join --no-case  Country sample.csv Abbrev countrynames.csv \\\n  | xsv select 'Country[1],AccentCity,Population' \\\n  | xsv table\nCountry                                                                              AccentCity       Population\nSpain                                                                                Barañáin         22264\nSpain                                                                                Puerto Real      36946\nAustria                                                                              Moosburg         4602\nHungary                                                                              Hejobaba         1949\nRussian Federation | Russia                                                          Polyarnyye Zori  15092\nGreece                                                                               Kandíla          1245\nIceland                                                                              Ólafsvík         992\nHungary                                                                              Decs             4210\nBulgaria                                                                             Sliven           94252\nGreat Britain | UK | England | Scotland | Wales | Northern Ireland | United Kingdom  Leatherhead      43544\"><pre class=\"notranslate\">$ xsv join --no-case  Country sample.csv Abbrev countrynames.csv \\\n  <span class=\"pl-k\">|</span> xsv <span class=\"pl-k\">select</span> <span class=\"pl-smi\">'Country[1],AccentCity,Population'</span> \\\n  <span class=\"pl-k\">|</span> xsv table\nCountry                                                                              AccentCity       Population\nSpain                                                                                Barañáin         22264\nSpain                                                                                Puerto Real      36946\nAustria                                                                              Moosburg         4602\nHungary                                                                              Hejobaba         1949\nRussian Federation <span class=\"pl-k\">|</span> Russia                                                          Polyarnyye Zori  15092\nGreece                                                                               Kandíla          1245\nIceland                                                                              Ólafsvík         992\nHungary                                                                              Decs             4210\nBulgaria                                                                             Sliven           94252\nGreat Britain <span class=\"pl-k\">|</span> UK <span class=\"pl-k\">|</span> England <span class=\"pl-k\">|</span> Scotland <span class=\"pl-k\">|</span> Wales <span class=\"pl-k\">|</span> Northern Ireland <span class=\"pl-k\">|</span> United Kingdom  Leatherhead      43544</pre></div>\n<p dir=\"auto\">Perhaps we can do this with the original CSV data? Indeed we can—because<br>\njoins in <code class=\"notranslate\">xsv</code> are fast.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ xsv join --no-case Abbrev countrynames.csv Country worldcitiespop.csv \\\n  | xsv select '!Abbrev,Country[1]' \\\n  &gt; worldcitiespop_countrynames.csv\n$ xsv sample 10 worldcitiespop_countrynames.csv | xsv table\nCountry                      City                   AccentCity             Region  Population  Latitude    Longitude\nSri Lanka                    miriswatte             Miriswatte             36                  7.2333333   79.9\nRomania                      livezile               Livezile               26      1985        44.512222   22.863333\nIndonesia                    tawainalu              Tawainalu              22                  -4.0225     121.9273\nRussian Federation | Russia  otar                   Otar                   45                  56.975278   48.305278\nFrance                       le breuil-bois robert  le Breuil-Bois Robert  A8                  48.945567   1.717026\nFrance                       lissac                 Lissac                 B1                  45.103094   1.464927\nAlbania                      lumalasi               Lumalasi               46                  40.6586111  20.7363889\nChina                        motzushih              Motzushih              11                  27.65       111.966667\nRussian Federation | Russia  svakino                Svakino                69                  55.60211    34.559785\nRomania                      tirgu pancesti         Tirgu Pancesti         38                  46.216667   27.1\"><pre class=\"notranslate\">$ xsv join --no-case Abbrev countrynames.csv Country worldcitiespop.csv \\\n  <span class=\"pl-k\">|</span> xsv <span class=\"pl-k\">select</span> <span class=\"pl-smi\">'!Abbrev,Country[1]'</span> \\\n  <span class=\"pl-k\">&gt;</span> worldcitiespop_countrynames.csv\n$ xsv sample 10 worldcitiespop_countrynames.csv <span class=\"pl-k\">|</span> xsv table\nCountry                      City                   AccentCity             Region  Population  Latitude    Longitude\nSri Lanka                    miriswatte             Miriswatte             36                  7.2333333   79.9\nRomania                      livezile               Livezile               26      1985        44.512222   22.863333\nIndonesia                    tawainalu              Tawainalu              22                  -4.0225     121.9273\nRussian Federation <span class=\"pl-k\">|</span> Russia  otar                   Otar                   45                  56.975278   48.305278\nFrance                       le breuil-bois robert  le Breuil-Bois Robert  A8                  48.945567   1.717026\nFrance                       lissac                 Lissac                 B1                  45.103094   1.464927\nAlbania                      lumalasi               Lumalasi               46                  40.6586111  20.7363889\nChina                        motzushih              Motzushih              11                  27.65       111.966667\nRussian Federation <span class=\"pl-k\">|</span> Russia  svakino                Svakino                69                  55.60211    34.559785\nRomania                      tirgu pancesti         Tirgu Pancesti         38                  46.216667   27.1</pre></div>\n<p dir=\"auto\">The <code class=\"notranslate\">!Abbrev,Country[1]</code> syntax means, \"remove the <code class=\"notranslate\">Abbrev</code> column and remove<br>\nthe second occurrence of the <code class=\"notranslate\">Country</code> column.\" Since we joined with<br>\n<code class=\"notranslate\">countrynames.csv</code> first, the first <code class=\"notranslate\">Country</code> name (fully expanded) is now<br>\nincluded in the CSV data.</p>\n<p dir=\"auto\">This <code class=\"notranslate\">xsv join</code> command takes about 7 seconds on my machine. The performance<br>\ncomes from constructing a very simple hash index of one of the CSV data files<br>\ngiven. The <code class=\"notranslate\">join</code> command does an inner join by default, but it also has left,<br>\nright and full outer join support too.</p>\n<h3 dir=\"auto\">Installation</h3>\n<p dir=\"auto\">Binaries for Windows, Linux and macOS are available <a href=\"https://github.com/BurntSushi/xsv/releases/latest\">from Github</a>.</p>\n<p dir=\"auto\">If you're a <strong>macOS Homebrew</strong> user, then you can install xsv<br>\nfrom homebrew-core:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ brew install xsv\"><pre class=\"notranslate\"><code class=\"notranslate\">$ brew install xsv\n</code></pre></div>\n<p dir=\"auto\">If you're a <strong>macOS MacPorts</strong> user, then you can install xsv<br>\nfrom the <a href=\"https://www.macports.org/ports.php?by=name&amp;substr=xsv\" rel=\"nofollow\">official ports</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ sudo port install xsv\"><pre class=\"notranslate\"><code class=\"notranslate\">$ sudo port install xsv\n</code></pre></div>\n<p dir=\"auto\">If you're a <strong>Nix/NixOS</strong> user, you can install xsv from nixpkgs:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ nix-env -i xsv\"><pre class=\"notranslate\"><code class=\"notranslate\">$ nix-env -i xsv\n</code></pre></div>\n<p dir=\"auto\">Alternatively, you can compile from source by<br>\n<a href=\"https://crates.io/install\" rel=\"nofollow\">installing Cargo</a><br>\n(<a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">Rust's</a> package manager)<br>\nand installing <code class=\"notranslate\">xsv</code> using Cargo:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"cargo install xsv\"><pre class=\"notranslate\">cargo install xsv</pre></div>\n<p dir=\"auto\">Compiling from this repository also works similarly:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"git clone git://github.com/BurntSushi/xsv\ncd xsv\ncargo build --release\"><pre class=\"notranslate\">git clone git://github.com/BurntSushi/xsv\n<span class=\"pl-c1\">cd</span> xsv\ncargo build --release</pre></div>\n<p dir=\"auto\">Compilation will probably take a few minutes depending on your machine. The<br>\nbinary will end up in <code class=\"notranslate\">./target/release/xsv</code>.</p>\n<h3 dir=\"auto\">Benchmarks</h3>\n<p dir=\"auto\">I've compiled some <a href=\"https://github.com/BurntSushi/xsv/blob/master/BENCHMARKS.md\">very rough<br>\nbenchmarks</a> of<br>\nvarious <code class=\"notranslate\">xsv</code> commands.</p>\n<h3 dir=\"auto\">Motivation</h3>\n<p dir=\"auto\">Here are several valid criticisms of this project:</p>\n<ol dir=\"auto\">\n<li>You shouldn't be working with CSV data because CSV is a terrible format.</li>\n<li>If your data is gigabytes in size, then CSV is the wrong storage type.</li>\n<li>Various SQL databases provide all of the operations available in <code class=\"notranslate\">xsv</code> with<br>\nmore sophisticated indexing support. And the performance is a zillion times<br>\nbetter.</li>\n</ol>\n<p dir=\"auto\">I'm sure there are more criticisms, but the impetus for this project was a 40GB<br>\nCSV file that was handed to me. I was tasked with figuring out the shape of the<br>\ndata inside of it and coming up with a way to integrate it into our existing<br>\nsystem. It was then that I realized that every single CSV tool I knew about was<br>\nwoefully inadequate. They were just too slow or didn't provide enough<br>\nflexibility. (Another project I had comprised of a few dozen CSV files. They<br>\nwere smaller than 40GB, but they were each supposed to represent the same kind<br>\nof data. But they all had different column and unintuitive column names. Useful<br>\nCSV inspection tools were critical here—and they had to be reasonably fast.)</p>\n<p dir=\"auto\">The key ingredients for helping me with my task were indexing, random sampling,<br>\nsearching, slicing and selecting columns. All of these things made dealing with<br>\n40GB of CSV data a bit more manageable (or dozens of CSV files).</p>\n<p dir=\"auto\">Getting handed a large CSV file <em>once</em> was enough to launch me on this quest.<br>\nFrom conversations I've had with others, CSV data files this large don't seem<br>\nto be a rare event. Therefore, I believe there is room for a tool that has a<br>\nhope of dealing with data that large.</p>\n<h3 dir=\"auto\">Naming collision</h3>\n<p dir=\"auto\">This project is unrelated to another similar project with the same name:<br>\n<a href=\"https://mj.ucw.cz/sw/xsv/\" rel=\"nofollow\">https://mj.ucw.cz/sw/xsv/</a></p>","updatedAt":"2025-05-22T01:53:42Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"命令行工具","color":"e05879"}},{"node":{"name":"BurntSushi","color":"f7e2a8"}}]},"comments":{"edges":[]}}},"pageContext":{"number":617,"previous":{"title":"x-cmd/x-cmd: 一句命令使用 500+ 语言/工具。众多常用命令工具合集。","number":616},"next":{"title":"mountain-loop/yaak: 一个桌面 API 客户端，用于与 REST、GraphQL、服务器发送事件 (SSE)、WebSocket 和 gRPC API 进行交互。","number":618}}},
    "staticQueryHashes": ["151096407","2861350382"]}