{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/491",
    "result": {"data":{"issuesJson":{"id":"68db0a51-f872-5540-8bcf-0aadd5ee8930","title":"lavie/runlike: 能够查看在运行容器的启动命令的工具","number":491,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/lavie/runlike\">lavie/runlike</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/e9a37584f70e4a3baf484c2b96d8cfde339d710840623fc1dc644f4fbc89726c/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f6c617669652f72756e6c696b652e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/lavie/runlike.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/a0df0105e69161f657d490962ea738861ec6f5d7a95498aced79fd39f372b121/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6c617669652f72756e6c696b653f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/lavie/runlike?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/e2bf7c7d9dbb088d4a19d062a0ddd23feb720058e4900cf0d805968519d5f501/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6c617669652f72756e6c696b653f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/lavie/runlike?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/0c93ca71e73bb599dbfbd81eb5bbb82f63a427dc55ced5d8a7de2d4025f1f1c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c2d4e4f4e452d626c75653f6c6f676f3d756e6c6963656e7365\" alt=\"license\" data-canonical-src=\"https://img.shields.io/badge/L-NONE-blue?logo=unlicense\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/a565d753e8295af71aba1fc664c43ed1abe3bcb4ae8e59006168da516baf829a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6c617669652f72756e6c696b653f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/lavie/runlike?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/da03775ae94415d819154097b46c227cc8638809e8efcc5989a2ce9608ac767b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f6c617669652f72756e6c696b653f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/lavie/runlike?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;See this docker container? I wish I could run another one just like it,\nbut I'll be damned if I'm going to type all those command-line switches manually!&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">\"See this docker container? I wish I could run another one just like it,\nbut I'll be damned if I'm going to type all those command-line switches manually!\"\n</code></pre></div>\n<p dir=\"auto\">This is what <code class=\"notranslate\">runlike</code> does. You give it a docker container, it outputs the command line necessary to run another one just like it, along with all those pesky options (ports, links, volumes, ...). It's a real time saver for those that normally deploy their docker containers via some CM tool like Ansible/Chef and then find themselves needing to manually re-run some container.</p>\n<h1 dir=\"auto\">Usage</h1>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"runlike &lt;container-name&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">runlike &lt;container-name&gt;\n</code></pre></div>\n<p dir=\"auto\">This prints out what you need to run to get a similar container. You can do <code class=\"notranslate\">$(runlike container-name)</code> to simply execute its output in one step.</p>\n<p dir=\"auto\"><code class=\"notranslate\">-p</code> breaks the command line down to nice, pretty lines. For example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ runlike -p redis\n\ndocker run \\\n    --name=redis \\\n    -e &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot; \\\n    -e &quot;REDIS_VERSION=2.8.9&quot; \\\n    -e &quot;REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-2.8.9.tar.gz&quot; \\\n    -e &quot;REDIS_DOWNLOAD_SHA1=003ccdc175816e0a751919cf508f1318e54aac1e&quot; \\\n    -p 0.0.0.0:6379:6379/tcp \\\n    --detach=true \\\n    myrepo/redis:7860c450dbee9878d5215595b390b9be8fa94c89 \\\n    redis-server --slaveof 172.31.17.84 6379\"><pre class=\"notranslate\"><code class=\"notranslate\">$ runlike -p redis\n\ndocker run \\\n    --name=redis \\\n    -e \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    -e \"REDIS_VERSION=2.8.9\" \\\n    -e \"REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-2.8.9.tar.gz\" \\\n    -e \"REDIS_DOWNLOAD_SHA1=003ccdc175816e0a751919cf508f1318e54aac1e\" \\\n    -p 0.0.0.0:6379:6379/tcp \\\n    --detach=true \\\n    myrepo/redis:7860c450dbee9878d5215595b390b9be8fa94c89 \\\n    redis-server --slaveof 172.31.17.84 6379\n</code></pre></div>\n<p dir=\"auto\">Feeding it the output of <code class=\"notranslate\">docker inspect</code> also works:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker inspect &lt;container-name&gt; | runlike --stdin\"><pre class=\"notranslate\"><code class=\"notranslate\">docker inspect &lt;container-name&gt; | runlike --stdin\n</code></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">--no-name</code> will omit the container name from the output (to avoid collisions).</p>\n<h2 dir=\"auto\">Run without installing</h2>\n<p dir=\"auto\"><code class=\"notranslate\">runlike</code> is packaged as a Docker image: <a href=\"https://hub.docker.com/r/assaflavie/runlike/\" rel=\"nofollow\">assaflavie/runlike</a>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\\n    assaflavie/runlike YOUR-CONTAINER\"><pre class=\"notranslate\"><code class=\"notranslate\">docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\\n    assaflavie/runlike YOUR-CONTAINER\n</code></pre></div>\n<p dir=\"auto\">You can also run it with an alias by adding the following to your <code class=\"notranslate\">~/.profile</code> or <code class=\"notranslate\">~/.bashrc</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"alias runlike=&quot;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock assaflavie/runlike&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">alias runlike=\"docker run --rm -v /var/run/docker.sock:/var/run/docker.sock assaflavie/runlike\"\n</code></pre></div>\n<p dir=\"auto\">Now runlike should be available as a local command:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"runlike YOUR-CONTAINER\"><pre class=\"notranslate\"><code class=\"notranslate\">runlike YOUR-CONTAINER\n</code></pre></div>\n<h1 dir=\"auto\">Install</h1>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ pip install runlike\"><pre class=\"notranslate\"><code class=\"notranslate\">$ pip install runlike\n</code></pre></div>\n<h1 dir=\"auto\">Status</h1>\n<p dir=\"auto\">This is very much a work in progress. Many <code class=\"notranslate\">docker run</code> options aren't yet supported, but the most commonly used ones are. Feel free to send pull requests if you add any or if you happen to fix any (of the many) bugs this package undoubtedly has.</p>\n<p dir=\"auto\">Probably <strong>shouldn't use this in production</strong> yet. If you do, double check that it's actually running what you want it to run.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/lavie/runlike/actions/workflows/ci.yaml/badge.svg\"><img src=\"https://github.com/lavie/runlike/actions/workflows/ci.yaml/badge.svg\" alt=\"Build Status\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Supported Run Options</h2>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      --add-host list                  Add a custom host-to-IP mapping\n                                       (host:ip)\n      --cap-add list                   Add Linux capabilities\n      --cap-drop list                  Drop Linux capabilities\n                                       (0-3, 0,1)\n      --cpuset-cpus string             CPUs in which to allow execution\n                                       (0-3, 0,1)\n      --cpuset-mems string             MEMs in which to allow execution\n  -d, --detach                         Run container in background and\n                                       print container ID\n      --device list                    Add a host device to the container\n      --dns list                       Set custom DNS servers\n      --entrypoint string              Overwrite the default ENTRYPOINT\n                                       of the image\n  -e, --env list                       Set environment variables\n      --expose list                    Expose a port or a range of ports\n  -h, --hostname string                Container host name\n      --mac-address string             Container MAC address (e.g.,\n                                       92:d0:c6:0a:29:33)\n  -l, --label list                     Set meta data on a container\n      --log-driver string              Logging driver for the container\n      --log-opt list                   Log driver options\n      --link list                      Add link to another container\n  -m, --memory bytes                   Memory limit\n      --memory-reservation bytes       Memory soft limit\n      --name string                    Assign a name to the container\n      --network string                 Connect a container to a network\n                                       (default &quot;default&quot;)\n      --pid string                     PID namespace to use\n      --privileged                     Give extended privileges to this\n                                       container\n  -p, --publish list                   Publish a container's port(s) to\n                                       the host\n      --restart string                 Restart policy to apply when a\n                                       container exits (default &quot;no&quot;)\n      --rm                             Automatically remove the container\n                                       when it exits\n      --runtime string                 Runtime to use for this container\n      --shm-size bytes                 Size of /dev/shm\n  -t, --tty                            Allocate a pseudo-TTY\n  -u, --user string                    Username or UID (format:\n                                       &lt;name|uid&gt;[:&lt;group|gid&gt;])\n  -v, --volume list                    Bind mount a volume\n      --volumes-from list              Mount volumes from the specified\n                                       container(s)\n  -w, --workdir string                 Working directory inside the container\n\"><pre class=\"notranslate\"><code class=\"notranslate\">      --add-host list                  Add a custom host-to-IP mapping\n                                       (host:ip)\n      --cap-add list                   Add Linux capabilities\n      --cap-drop list                  Drop Linux capabilities\n                                       (0-3, 0,1)\n      --cpuset-cpus string             CPUs in which to allow execution\n                                       (0-3, 0,1)\n      --cpuset-mems string             MEMs in which to allow execution\n  -d, --detach                         Run container in background and\n                                       print container ID\n      --device list                    Add a host device to the container\n      --dns list                       Set custom DNS servers\n      --entrypoint string              Overwrite the default ENTRYPOINT\n                                       of the image\n  -e, --env list                       Set environment variables\n      --expose list                    Expose a port or a range of ports\n  -h, --hostname string                Container host name\n      --mac-address string             Container MAC address (e.g.,\n                                       92:d0:c6:0a:29:33)\n  -l, --label list                     Set meta data on a container\n      --log-driver string              Logging driver for the container\n      --log-opt list                   Log driver options\n      --link list                      Add link to another container\n  -m, --memory bytes                   Memory limit\n      --memory-reservation bytes       Memory soft limit\n      --name string                    Assign a name to the container\n      --network string                 Connect a container to a network\n                                       (default \"default\")\n      --pid string                     PID namespace to use\n      --privileged                     Give extended privileges to this\n                                       container\n  -p, --publish list                   Publish a container's port(s) to\n                                       the host\n      --restart string                 Restart policy to apply when a\n                                       container exits (default \"no\")\n      --rm                             Automatically remove the container\n                                       when it exits\n      --runtime string                 Runtime to use for this container\n      --shm-size bytes                 Size of /dev/shm\n  -t, --tty                            Allocate a pseudo-TTY\n  -u, --user string                    Username or UID (format:\n                                       &lt;name|uid&gt;[:&lt;group|gid&gt;])\n  -v, --volume list                    Bind mount a volume\n      --volumes-from list              Mount volumes from the specified\n                                       container(s)\n  -w, --workdir string                 Working directory inside the container\n\n</code></pre></div>\n<h2 dir=\"auto\">Not Yet Supported Run Options (PRs are most welcome!)</h2>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n  -a, --attach list                    Attach to STDIN, STDOUT or STDERR\n      --blkio-weight uint16            Block IO (relative weight),\n                                       between 10 and 1000, or 0 to\n                                       disable (default 0)\n      --blkio-weight-device list       Block IO weight (relative device\n                                       weight) (default [])\n\n      --cgroup-parent string           Optional parent cgroup for the\n                                       container\n      --cidfile string                 Write the container ID to the file\n      --cpu-count int                  CPU count (Windows only)\n      --cpu-percent int                CPU percent (Windows only)\n      --cpu-period int                 Limit CPU CFS (Completely Fair\n                                       Scheduler) period\n      --cpu-quota int                  Limit CPU CFS (Completely Fair\n                                       Scheduler) quota\n      --cpu-rt-period int              Limit CPU real-time period in\n                                       microseconds\n      --cpu-rt-runtime int             Limit CPU real-time runtime in\n                                       microseconds\n  -c, --cpu-shares int                 CPU shares (relative weight)\n      --cpus decimal                   Number of CPUs\n      --detach-keys string             Override the key sequence for\n                                       detaching a container\n      --device-cgroup-rule list        Add a rule to the cgroup allowed\n                                       devices list\n      --device-read-bps list           Limit read rate (bytes per second)\n                                       from a device (default [])\n      --device-read-iops list          Limit read rate (IO per second)\n                                       from a device (default [])\n      --device-write-bps list          Limit write rate (bytes per\n                                       second) to a device (default [])\n      --device-write-iops list         Limit write rate (IO per second)\n                                       to a device (default [])\n      --disable-content-trust          Skip image verification (default true)\n      --dns-option list                Set DNS options\n      --dns-search list                Set custom DNS search domains\n      --env-file list                  Read in a file of environment variables\n      --group-add list                 Add additional groups to join\n      --health-cmd string              Command to run to check health\n      --health-interval duration       Time between running the check\n                                       (ms|s|m|h) (default 0s)\n      --health-retries int             Consecutive failures needed to\n                                       report unhealthy\n      --health-start-period duration   Start period for the container to\n                                       initialize before starting\n                                       health-retries countdown\n                                       (ms|s|m|h) (default 0s)\n      --health-timeout duration        Maximum time to allow one check to\n                                       run (ms|s|m|h) (default 0s)\n      --help                           Print usage\n      --init                           Run an init inside the container\n                                       that forwards signals and reaps\n                                       processes\n  -i, --interactive                    Keep STDIN open even if not attached\n      --io-maxbandwidth bytes          Maximum IO bandwidth limit for the\n                                       system drive (Windows only)\n      --io-maxiops uint                Maximum IOps limit for the system\n                                       drive (Windows only)\n      --ip string                      IPv4 address (e.g., 172.30.100.104)\n      --ip6 string                     IPv6 address (e.g., 2001:db8::33)\n      --ipc string                     IPC mode to use\n      --isolation string               Container isolation technology\n      --kernel-memory bytes            Kernel memory limit\n      --label-file list                Read in a line delimited file of labels\n      --link-local-ip list             Container IPv4/IPv6 link-local\n                                       addresses\n\n      --memory-swap bytes              Swap limit equal to memory plus\n                                       swap: '-1' to enable unlimited swap\n      --memory-swappiness int          Tune container memory swappiness\n                                       (0 to 100) (default -1)\n      --mount mount                    Attach a filesystem mount to the\n                                       container\n\n      --network-alias list             Add network-scoped alias for the\n                                       container\n      --no-healthcheck                 Disable any container-specified\n                                       HEALTHCHECK\n      --oom-kill-disable               Disable OOM Killer\n      --oom-score-adj int              Tune host's OOM preferences (-1000\n                                       to 1000)\n      --pids-limit int                 Tune container pids limit (set -1\n                                       for unlimited)\n      --platform string                Set platform if server is\n                                       multi-platform capable\n\n  -P, --publish-all                    Publish all exposed ports to\n                                       random ports\n      --read-only                      Mount the container's root\n                                       filesystem as read only\n\n      --security-opt list              Security Options\n      --sig-proxy                      Proxy received signals to the\n                                       process (default true)\n      --stop-signal string             Signal to stop a container\n                                       (default &quot;SIGTERM&quot;)\n      --stop-timeout int               Timeout (in seconds) to stop a\n                                       container\n      --storage-opt list               Storage driver options for the\n                                       container\n      --sysctl map                     Sysctl options (default map[])\n      --tmpfs list                     Mount a tmpfs directory\n      --ulimit ulimit                  Ulimit options (default [])\n\n      --userns string                  User namespace to use\n      --uts string                     UTS namespace to use\n      --volume-driver string           Optional volume driver for the\n                                       container\"><pre class=\"notranslate\"><code class=\"notranslate\">\n  -a, --attach list                    Attach to STDIN, STDOUT or STDERR\n      --blkio-weight uint16            Block IO (relative weight),\n                                       between 10 and 1000, or 0 to\n                                       disable (default 0)\n      --blkio-weight-device list       Block IO weight (relative device\n                                       weight) (default [])\n\n      --cgroup-parent string           Optional parent cgroup for the\n                                       container\n      --cidfile string                 Write the container ID to the file\n      --cpu-count int                  CPU count (Windows only)\n      --cpu-percent int                CPU percent (Windows only)\n      --cpu-period int                 Limit CPU CFS (Completely Fair\n                                       Scheduler) period\n      --cpu-quota int                  Limit CPU CFS (Completely Fair\n                                       Scheduler) quota\n      --cpu-rt-period int              Limit CPU real-time period in\n                                       microseconds\n      --cpu-rt-runtime int             Limit CPU real-time runtime in\n                                       microseconds\n  -c, --cpu-shares int                 CPU shares (relative weight)\n      --cpus decimal                   Number of CPUs\n      --detach-keys string             Override the key sequence for\n                                       detaching a container\n      --device-cgroup-rule list        Add a rule to the cgroup allowed\n                                       devices list\n      --device-read-bps list           Limit read rate (bytes per second)\n                                       from a device (default [])\n      --device-read-iops list          Limit read rate (IO per second)\n                                       from a device (default [])\n      --device-write-bps list          Limit write rate (bytes per\n                                       second) to a device (default [])\n      --device-write-iops list         Limit write rate (IO per second)\n                                       to a device (default [])\n      --disable-content-trust          Skip image verification (default true)\n      --dns-option list                Set DNS options\n      --dns-search list                Set custom DNS search domains\n      --env-file list                  Read in a file of environment variables\n      --group-add list                 Add additional groups to join\n      --health-cmd string              Command to run to check health\n      --health-interval duration       Time between running the check\n                                       (ms|s|m|h) (default 0s)\n      --health-retries int             Consecutive failures needed to\n                                       report unhealthy\n      --health-start-period duration   Start period for the container to\n                                       initialize before starting\n                                       health-retries countdown\n                                       (ms|s|m|h) (default 0s)\n      --health-timeout duration        Maximum time to allow one check to\n                                       run (ms|s|m|h) (default 0s)\n      --help                           Print usage\n      --init                           Run an init inside the container\n                                       that forwards signals and reaps\n                                       processes\n  -i, --interactive                    Keep STDIN open even if not attached\n      --io-maxbandwidth bytes          Maximum IO bandwidth limit for the\n                                       system drive (Windows only)\n      --io-maxiops uint                Maximum IOps limit for the system\n                                       drive (Windows only)\n      --ip string                      IPv4 address (e.g., 172.30.100.104)\n      --ip6 string                     IPv6 address (e.g., 2001:db8::33)\n      --ipc string                     IPC mode to use\n      --isolation string               Container isolation technology\n      --kernel-memory bytes            Kernel memory limit\n      --label-file list                Read in a line delimited file of labels\n      --link-local-ip list             Container IPv4/IPv6 link-local\n                                       addresses\n\n      --memory-swap bytes              Swap limit equal to memory plus\n                                       swap: '-1' to enable unlimited swap\n      --memory-swappiness int          Tune container memory swappiness\n                                       (0 to 100) (default -1)\n      --mount mount                    Attach a filesystem mount to the\n                                       container\n\n      --network-alias list             Add network-scoped alias for the\n                                       container\n      --no-healthcheck                 Disable any container-specified\n                                       HEALTHCHECK\n      --oom-kill-disable               Disable OOM Killer\n      --oom-score-adj int              Tune host's OOM preferences (-1000\n                                       to 1000)\n      --pids-limit int                 Tune container pids limit (set -1\n                                       for unlimited)\n      --platform string                Set platform if server is\n                                       multi-platform capable\n\n  -P, --publish-all                    Publish all exposed ports to\n                                       random ports\n      --read-only                      Mount the container's root\n                                       filesystem as read only\n\n      --security-opt list              Security Options\n      --sig-proxy                      Proxy received signals to the\n                                       process (default true)\n      --stop-signal string             Signal to stop a container\n                                       (default \"SIGTERM\")\n      --stop-timeout int               Timeout (in seconds) to stop a\n                                       container\n      --storage-opt list               Storage driver options for the\n                                       container\n      --sysctl map                     Sysctl options (default map[])\n      --tmpfs list                     Mount a tmpfs directory\n      --ulimit ulimit                  Ulimit options (default [])\n\n      --userns string                  User namespace to use\n      --uts string                     UTS namespace to use\n      --volume-driver string           Optional volume driver for the\n                                       container\n</code></pre></div>","updatedAt":"2025-05-21T16:19:38Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"Docker-Tools","color":"abbcfb"}},{"node":{"name":"lavie","color":"7e35b0"}}]},"comments":{"edges":[]}}},"pageContext":{"number":491,"previous":{"title":"xjq7/runcode: 在线编辑器,  支持在线编写, 运行代码，支持 C、C++、Golang、Nodejs、Rust、Java、Python、C#、PHP 多种语言","number":490},"next":{"title":"Runner-Go-Team/runnerGo: 一款全栈式测试平台，可以进行接口测试、场景自动化测试、性能压测等一系列功能","number":492}}},
    "staticQueryHashes": ["151096407","2861350382"]}