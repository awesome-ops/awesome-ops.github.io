{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/341",
    "result": {"data":{"issuesJson":{"id":"0e1374dc-a8ad-5b68-bb95-93f656fe3795","title":"robusta-dev/kubewatch: 监控 k8s 事件并触发相应的处理器","number":341,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/robusta-dev/kubewatch\">robusta-dev/kubewatch</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/25f06e6594f603969df11386ce9b4dbd5c8f2104ecb4131a1d1b07cc0b126a61/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f726f62757374612d6465762f6b75626577617463682e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/robusta-dev/kubewatch.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/dbe79e1450e2027df9f2b0a94f8c132bae2dddf4961e0241b6f124674f57ba10/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f726f62757374612d6465762f6b75626577617463683f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/robusta-dev/kubewatch?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/8a6c1cda4810aa5eed14b5389dd1c4be89c33e6bb39c247c5d944bfec47d9f92/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f726f62757374612d6465762f6b75626577617463683f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/robusta-dev/kubewatch?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/86967540f0a20cdba5cf50f7cccf1ded0dc6e73fe7ffa9148e0dbb727d30399d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f726f62757374612d6465762f6b75626577617463683f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/robusta-dev/kubewatch?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/7659401d5ce7c89ceea796153a6ddc97823445aca736c810aa78193f2b304be3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f726f62757374612d6465762f6b75626577617463683f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/robusta-dev/kubewatch?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/d662747ba81aa2d00c6904b35860809a6c00396f7f5f1d3c28768b05237395cf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f726f62757374612d6465762f6b75626577617463683f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/robusta-dev/kubewatch?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><strong>This is the official Kubewatch project, <a href=\"https://github.com/bitnami-labs/kubewatch/\">originally by Bitnami</a>, now maintained by <a href=\"https://home.robusta.dev/\" rel=\"nofollow\">Robusta.dev</a>.</strong></p>\n<p dir=\"auto\"><strong>Feel free to open issues, raise PRs or talk with us on <a href=\"https://bit.ly/robusta-slack\" rel=\"nofollow\">Slack</a>!</strong></p>\n<p dir=\"auto\"><strong>kubewatch</strong> is a Kubernetes watcher that publishes notification to available collaboration hubs/notification channels. Run it in your k8s cluster, and you will get event notifications through webhooks.</p>\n<p dir=\"auto\"><a href=\"https://home.robusta.dev/blog/kubewatch-2-0-released\" rel=\"nofollow\">See the blog post on KubeWatch 2.0 to learn more about how KubeWatch is used.</a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"./docs/kubewatch-logo.jpeg\"><img src=\"./docs/kubewatch-logo.jpeg\" style=\"max-width: 100%;\"></a>\n<p dir=\"auto\"><a href=\"https://godoc.org/github.com/bitnami-labs/kubewatch\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/c13a7991dccc48389e6603dc05703a260588330df9642941a4a355a6caa3ec23/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f6269746e616d692d6c6162732f6b75626577617463683f7374617475732e737667\" alt=\"GoDoc\" data-canonical-src=\"https://godoc.org/github.com/bitnami-labs/kubewatch?status.svg\" style=\"max-width: 100%;\"></a> <a href=\"https://github.com/bitnami-labs/kubewatch/blob/master/LICENSE\"><img src=\"https://camo.githubusercontent.com/859a1a0bc85ce8bbd7a730a274fec5c9e77c4726ffdf6aa762a78685e26033a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\" alt=\"License\" data-canonical-src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://bit.ly/robusta-slack\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/d17c378b322abd5e719f7526b3ec017177de85899e9d88fd249eaf1515b1661b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d4a6f696e2d3441313534423f7374796c653d666c61742d737175617265266c6f676f3d736c61636b266c6f676f436f6c6f723d7768697465\" alt=\"slack robusta\" data-canonical-src=\"https://img.shields.io/badge/Slack-Join-4A154B?style=flat-square&amp;logo=slack&amp;logoColor=white\" style=\"max-width: 100%;\"></a></p>\n</div>\n<h1 dir=\"auto\">Fine-Grained Resource Tracking</h1>\n<p dir=\"auto\">KubeWatch tracks all changes to Kubernetes resources of given types.</p>\n<p dir=\"auto\">If you need fine-grained filtering of which changes are forwarded, you can use KubeWatch in conjunction with Robusta.</p>\n<p dir=\"auto\">For more details, refer to the <a href=\"https://docs.robusta.dev/master/playbook-reference/kubernetes-examples/index.html\" rel=\"nofollow\">Robusta docs on change-tracking</a>.</p>\n<p dir=\"auto\">A diagram showing the two options is shown below. The flow that only uses KubeWatch is purple and the flow that adds Robusta is green.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/494087/416753912-b271e635-70d6-4bc8-9f61-4c8ae4771be4.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTMwNjc1OTAsIm5iZiI6MTc1MzA2NzI5MCwicGF0aCI6Ii80OTQwODcvNDE2NzUzOTEyLWIyNzFlNjM1LTcwZDYtNGJjOC05ZjYxLTRjOGFlNDc3MWJlNC5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwNzIxJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDcyMVQwMzA4MTBaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT04NzdhOWQ5OWUwNDhlMjM5NzE0MzU5M2IwZDdlMmFkOGY0OWQ2NjExYjdjZDA1Yzc4MmU4MGE2MzQ2MWQxYzBhJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.D402E1pk_Fgz9sWGPmGrf2mlXkbm7_-MMEnggT7Mh58\"><img src=\"https://private-user-images.githubusercontent.com/494087/416753912-b271e635-70d6-4bc8-9f61-4c8ae4771be4.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTMwNjc1OTAsIm5iZiI6MTc1MzA2NzI5MCwicGF0aCI6Ii80OTQwODcvNDE2NzUzOTEyLWIyNzFlNjM1LTcwZDYtNGJjOC05ZjYxLTRjOGFlNDc3MWJlNC5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwNzIxJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDcyMVQwMzA4MTBaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT04NzdhOWQ5OWUwNDhlMjM5NzE0MzU5M2IwZDdlMmFkOGY0OWQ2NjExYjdjZDA1Yzc4MmU4MGE2MzQ2MWQxYzBhJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.D402E1pk_Fgz9sWGPmGrf2mlXkbm7_-MMEnggT7Mh58\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h1 dir=\"auto\">Latest image</h1>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"robustadev/kubewatch:v2.9.0\"><pre class=\"notranslate\"><code class=\"notranslate\">robustadev/kubewatch:v2.9.0\n</code></pre></div>\n<h1 dir=\"auto\">Usage</h1>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubewatch -h\n\nKubewatch: A watcher for Kubernetes\n\nkubewatch is a Kubernetes watcher that publishes notifications\nto Slack/hipchat/mattermost/flock channels. It watches the cluster\nfor resource changes and notifies them through webhooks.\n\nsupported webhooks:\n - slack\n - slackwebhook\n - msteams\n - hipchat\n - mattermost\n - flock\n - webhook\n - cloudevent\n - smtp\n\nUsage:\n  kubewatch [flags]\n  kubewatch [command]\n\nAvailable Commands:\n  config      modify kubewatch configuration\n  resource    manage resources to be watched\n  version     print version\n\nFlags:\n  -h, --help   help for kubewatch\n\nUse &quot;kubewatch [command] --help&quot; for more information about a command.\n\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubewatch -h\n\nKubewatch: A watcher for Kubernetes\n\nkubewatch is a Kubernetes watcher that publishes notifications\nto Slack/hipchat/mattermost/flock channels. It watches the cluster\nfor resource changes and notifies them through webhooks.\n\nsupported webhooks:\n - slack\n - slackwebhook\n - msteams\n - hipchat\n - mattermost\n - flock\n - webhook\n - cloudevent\n - smtp\n\nUsage:\n  kubewatch [flags]\n  kubewatch [command]\n\nAvailable Commands:\n  config      modify kubewatch configuration\n  resource    manage resources to be watched\n  version     print version\n\nFlags:\n  -h, --help   help for kubewatch\n\nUse \"kubewatch [command] --help\" for more information about a command.\n\n</code></pre></div>\n<h1 dir=\"auto\">Install</h1>\n<h3 dir=\"auto\">Cluster Installation</h3>\n<h4 dir=\"auto\">Using helm:</h4>\n<p dir=\"auto\">When you have helm installed in your cluster, use the following setup:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"helm repo add robusta https://robusta-charts.storage.googleapis.com &amp;&amp; helm repo update\nhelm install kubewatch robusta/kubewatch --set='rbac.create=true,slack.channel=#YOUR_CHANNEL,slack.token=xoxb-YOUR_TOKEN,resourcesToWatch.pod=true,resourcesToWatch.daemonset=true'\"><pre class=\"notranslate\"><span class=\"pl-c1\">helm repo add robusta https://robusta-charts.storage.googleapis.com &amp;&amp; helm repo update</span>\n<span class=\"pl-c1\">helm install kubewatch robusta/kubewatch --set='rbac.create=true,slack.channel=#YOUR_CHANNEL,slack.token=xoxb-YOUR_TOKEN,resourcesToWatch.pod=true,resourcesToWatch.daemonset=true'</span></pre></div>\n<p dir=\"auto\">You may also provide a values file instead:</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"rbac:\n  create: true\n  customRoles:\n    - apiGroups: [&quot;monitoring.coreos.com&quot;]\n      resources: [&quot;prometheusrules&quot;]\n      verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]\nresourcesToWatch:\n  deployment: false\n  replicationcontroller: false\n  replicaset: false\n  daemonset: false\n  services: true\n  pod: true\n  job: false\n  node: false\n  clusterrole: true\n  clusterrolebinding: true\n  serviceaccount: true\n  persistentvolume: false\n  namespace: false\n  secret: false\n  configmap: false\n  ingress: false\n  coreevent: false\n  event: true\ncustomresources:\n  - group: monitoring.coreos.com\n    version: v1\n    resource: prometheusrules\nslack:\n  channel: '#YOUR_CHANNEL'\n  token: 'xoxb-YOUR_TOKEN'\"><pre class=\"notranslate\"><span class=\"pl-ent\">rbac</span>:\n  <span class=\"pl-ent\">create</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-ent\">customRoles</span>:\n    - <span class=\"pl-ent\">apiGroups</span>: <span class=\"pl-s\">[\"monitoring.coreos.com\"]</span>\n      <span class=\"pl-ent\">resources</span>: <span class=\"pl-s\">[\"prometheusrules\"]</span>\n      <span class=\"pl-ent\">verbs</span>: <span class=\"pl-s\">[\"get\", \"list\", \"watch\"]</span>\n<span class=\"pl-ent\">resourcesToWatch</span>:\n  <span class=\"pl-ent\">deployment</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">replicationcontroller</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">replicaset</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">daemonset</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">services</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-ent\">pod</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-ent\">job</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">node</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">clusterrole</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-ent\">clusterrolebinding</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-ent\">serviceaccount</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-ent\">persistentvolume</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">namespace</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">secret</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">configmap</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">ingress</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">coreevent</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">event</span>: <span class=\"pl-c1\">true</span>\n<span class=\"pl-ent\">customresources</span>:\n  - <span class=\"pl-ent\">group</span>: <span class=\"pl-s\">monitoring.coreos.com</span>\n    <span class=\"pl-ent\">version</span>: <span class=\"pl-c1\">v1</span>\n    <span class=\"pl-ent\">resource</span>: <span class=\"pl-s\">prometheusrules</span>\n<span class=\"pl-ent\">slack</span>:\n  <span class=\"pl-ent\">channel</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#YOUR_CHANNEL<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-ent\">token</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>xoxb-YOUR_TOKEN<span class=\"pl-pds\">'</span></span></pre></div>\n<p dir=\"auto\">And use that:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ helm upgrade --install kubewatch robusta/kubewatch --values=values-file.yml\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">helm upgrade --install kubewatch robusta/kubewatch --values=values-file.yml</span></pre></div>\n<h4 dir=\"auto\">Using kubectl:</h4>\n<p dir=\"auto\">In order to run kubewatch in a Kubernetes cluster quickly, the easiest way is for you to create a <a href=\"https://github.com/robusta-dev/kubewatch/blob/master/kubewatch-configmap.yaml\">ConfigMap</a> to hold kubewatch configuration.</p>\n<p dir=\"auto\">An example is provided at <a href=\"https://github.com/robusta-dev/kubewatch/blob/master/kubewatch-configmap.yaml\"><code class=\"notranslate\">kubewatch-configmap.yaml</code></a>, do not forget to update your own slack channel and token parameters. Alternatively, you could use secrets.</p>\n<p dir=\"auto\">Create k8s configmap:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ kubectl create -f kubewatch-configmap.yaml\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">kubectl create -f kubewatch-configmap.yaml</span></pre></div>\n<p dir=\"auto\">Create the <a href=\"https://github.com/robusta-dev/kubewatch/blob/master/kubewatch.yaml\">Pod</a> directly, or create your own deployment:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ kubectl create -f kubewatch.yaml\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">kubectl create -f kubewatch.yaml</span></pre></div>\n<p dir=\"auto\">A <code class=\"notranslate\">kubewatch</code> container will be created along with <code class=\"notranslate\">kubectl</code> sidecar container in order to reach the API server.</p>\n<p dir=\"auto\">Once the Pod is running, you will start seeing Kubernetes events in your configured Slack channel. Here is a screenshot:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"./docs/slack.png\"><img src=\"./docs/slack.png\" alt=\"slack\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">To modify what notifications you get, update the <code class=\"notranslate\">kubewatch</code> ConfigMap and turn on and off (true/false) resources or configure any resource of your choosing with customresources (CRDs):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"resource:\n  deployment: false\n  replicationcontroller: false\n  replicaset: false\n  daemonset: false\n  services: true\n  pod: true\n  job: false\n  node: false\n  clusterrole: false\n  clusterrolebinding: false\n  serviceaccount: false\n  persistentvolume: false\n  namespace: false\n  secret: false\n  configmap: false\n  ingress: false\n  coreevent: false\n  event: true\ncustomresources:\n  - group: monitoring.coreos.com\n    version: v1\n    resource: prometheusrules\"><pre class=\"notranslate\"><code class=\"notranslate\">resource:\n  deployment: false\n  replicationcontroller: false\n  replicaset: false\n  daemonset: false\n  services: true\n  pod: true\n  job: false\n  node: false\n  clusterrole: false\n  clusterrolebinding: false\n  serviceaccount: false\n  persistentvolume: false\n  namespace: false\n  secret: false\n  configmap: false\n  ingress: false\n  coreevent: false\n  event: true\ncustomresources:\n  - group: monitoring.coreos.com\n    version: v1\n    resource: prometheusrules\n</code></pre></div>\n<h4 dir=\"auto\">Working with RBAC</h4>\n<p dir=\"auto\">Kubernetes Engine clusters running versions 1.6 or higher introduced Role-Based Access Control (RBAC). We can create <code class=\"notranslate\">ServiceAccount</code> for it to work with RBAC.</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ kubectl create -f kubewatch-service-account.yaml\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">kubectl create -f kubewatch-service-account.yaml</span></pre></div>\n<p dir=\"auto\">If you do not have permission to create it, you need to become an admin first. For example, in GKE you would run:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=REPLACE_EMAIL_HERE\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=REPLACE_EMAIL_HERE\n</code></pre></div>\n<p dir=\"auto\">Edit <code class=\"notranslate\">kubewatch.yaml</code>, and create a new field under <code class=\"notranslate\">spec</code> with <code class=\"notranslate\">serviceAccountName: kubewatch</code>, you can achieve this by running:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ sed -i '/spec:/a\\ \\ serviceAccountName: kubewatch' kubewatch.yaml\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">sed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/spec:/a\\ \\ serviceAccountName: kubewatch<span class=\"pl-pds\">'</span></span> kubewatch.yaml</span></pre></div>\n<p dir=\"auto\">Then just create <code class=\"notranslate\">pod</code> as usual with:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ kubectl create -f kubewatch.yaml\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">kubectl create -f kubewatch.yaml</span></pre></div>\n<h4 dir=\"auto\">Working with CRDs</h4>\n<p dir=\"auto\"><code class=\"notranslate\">kubewatch</code> can be configured to monitor Kubernetes Custom Resource Definitions (CRDs), allowing you to receive notifications when changes occur.<br>\nTo configure kubewatch to watch custom resources, you need to define the <code class=\"notranslate\">customresources</code> section either in your values file or by using the <code class=\"notranslate\">--set</code> flag with Helm commands.</p>\n<p dir=\"auto\">Include the custom resource configuration in your values file:</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"customresources:\n  - group: monitoring.coreos.com\n    version: v1\n    resource: prometheusrules\"><pre class=\"notranslate\"><span class=\"pl-ent\">customresources</span>:\n  - <span class=\"pl-ent\">group</span>: <span class=\"pl-s\">monitoring.coreos.com</span>\n    <span class=\"pl-ent\">version</span>: <span class=\"pl-c1\">v1</span>\n    <span class=\"pl-ent\">resource</span>: <span class=\"pl-s\">prometheusrules</span></pre></div>\n<p dir=\"auto\">Then deploy or upgrade <code class=\"notranslate\">kubwatch</code> with <code class=\"notranslate\">helm upgrade</code> or <code class=\"notranslate\">helm install</code></p>\n<p dir=\"auto\">Alternatively, you can pass this configuration directly using the <code class=\"notranslate\">--set</code> flag:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"helm install kubewatch robusta/kubewatch --set='rbac.create=true,slack.channel=#YOUR_CHANNEL,slack.token=xoxb-YOUR_TOKEN,resourcesToWatch.pod=true,resourcesToWatch.daemonset=true,customresources[0].group=monitoring.coreos.com,customresources[0].version=v1,customresources[0].resource=prometheusrules'\"><pre class=\"notranslate\"><span class=\"pl-c1\">helm install kubewatch robusta/kubewatch --set='rbac.create=true,slack.channel=#YOUR_CHANNEL,slack.token=xoxb-YOUR_TOKEN,resourcesToWatch.pod=true,resourcesToWatch.daemonset=true,customresources[0].group=monitoring.coreos.com,customresources[0].version=v1,customresources[0].resource=prometheusrules'</span></pre></div>\n<h4 dir=\"auto\">Custom RBAC roles</h4>\n<p dir=\"auto\">After defining custom resources, make sure that kubewatch has the necessary RBAC permissions to access the custom resources you've configured. Without the appropriate permissions, <code class=\"notranslate\">kubewatch</code> will not be able to monitor your custom resources, and you won't receive notifications for changes.</p>\n<p dir=\"auto\">To grant these permissions, you can define custom RBAC roles using <code class=\"notranslate\">customRoles</code> within the <code class=\"notranslate\">rbac</code> section of your values file or by using the <code class=\"notranslate\">--set</code> flag with Helm commands. This allows you to specify exactly which API groups, resources, and actions kubewatch should have access to.</p>\n<p dir=\"auto\">Here’s how you can configure the necessary permissions to monitor your resources:</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"rbac:\n  create: true \n  customRoles:\n    - apiGroups: [&quot;monitoring.coreos.com&quot;]\n      resources: [&quot;prometheusrules&quot;]\n      verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]\"><pre class=\"notranslate\"><span class=\"pl-ent\">rbac</span>:\n  <span class=\"pl-ent\">create</span>: <span class=\"pl-c1\">true</span> \n  <span class=\"pl-ent\">customRoles</span>:\n    - <span class=\"pl-ent\">apiGroups</span>: <span class=\"pl-s\">[\"monitoring.coreos.com\"]</span>\n      <span class=\"pl-ent\">resources</span>: <span class=\"pl-s\">[\"prometheusrules\"]</span>\n      <span class=\"pl-ent\">verbs</span>: <span class=\"pl-s\">[\"get\", \"list\", \"watch\"]</span></pre></div>\n<p dir=\"auto\">Then deploy or upgrade <code class=\"notranslate\">kubwatch</code> with <code class=\"notranslate\">helm upgrade</code> or <code class=\"notranslate\">helm install</code></p>\n<p dir=\"auto\">Alternatively, you can pass this configuration directly using the <code class=\"notranslate\">--set</code> flag:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"helm install kubewatch robusta/kubewatch --set='rbac.create=true,slack.channel=#YOUR_CHANNEL,slack.token=xoxb-YOUR_TOKEN,customRoles[0].apiGroups={monitoring.coreos.com},customRoles[0].resources={prometheusrules},customRoles[0].verbs={get,list,watch}'\"><pre class=\"notranslate\"><span class=\"pl-c1\">helm install kubewatch robusta/kubewatch --set='rbac.create=true,slack.channel=#YOUR_CHANNEL,slack.token=xoxb-YOUR_TOKEN,customRoles[0].apiGroups={monitoring.coreos.com},customRoles[0].resources={prometheusrules},customRoles[0].verbs={get,list,watch}'</span></pre></div>\n<h4 dir=\"auto\">Metrics</h4>\n<p dir=\"auto\"><code class=\"notranslate\">kubewatch</code> runs a Prometheus metrics endpoint at <code class=\"notranslate\">/metrics</code> on port <code class=\"notranslate\">2112</code> by default. This endpoint can be used to monitor health and the performance of <code class=\"notranslate\">kubewatch</code>.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">kubewatch_events_total</code> metric can help track the total number of Kubernetes events, categorized by resource type (e.g., <code class=\"notranslate\">Pods</code>, <code class=\"notranslate\">Deployments</code>) and event type (e.g., <code class=\"notranslate\">Create</code>, <code class=\"notranslate\">Delete</code>).</p>\n<p dir=\"auto\">You can change the default port (<code class=\"notranslate\">2112</code>) on which the metrics server listens by setting the <code class=\"notranslate\">LISTEN_ADDRESS</code> environment variable.<br>\nFormat is <code class=\"notranslate\">host:port</code>. <code class=\"notranslate\">:5454</code> means any host, and port <code class=\"notranslate\">5454</code></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"extraEnvVars:\n  - name: LISTEN_ADDRESS\n    value: &quot;:5454&quot;\"><pre class=\"notranslate\"><span class=\"pl-ent\">extraEnvVars</span>:\n  - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">LISTEN_ADDRESS</span>\n    <span class=\"pl-ent\">value</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:5454<span class=\"pl-pds\">\"</span></span></pre></div>\n<h3 dir=\"auto\">Local Installation</h3>\n<h4 dir=\"auto\">Using go package installer:</h4>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Download and install kubewatch\n$ go get -u github.com/robusta-dev/kubewatch\n\n# Configure the notification channel\n$ kubewatch config add slack --channel &lt;slack_channel&gt; --token &lt;slack_token&gt;\n\n# Add resources to be watched\n$ kubewatch resource add --po --svc\nINFO[0000] resource svc configured\nINFO[0000] resource po configured\n\n# start kubewatch server\n$ kubewatch\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-service\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-pod\nINFO[0000] Processing add to service: default/kubernetes  pkg=kubewatch-service\nINFO[0000] Processing add to service: kube-system/tiller-deploy  pkg=kubewatch-service\nINFO[0000] Processing add to pod: kube-system/tiller-deploy-69ffbf64bc-h8zxm  pkg=kubewatch-pod\nINFO[0000] Kubewatch controller synced and ready         pkg=kubewatch-service\nINFO[0000] Kubewatch controller synced and ready         pkg=kubewatch-pod\n\"><pre class=\"notranslate\"># <span class=\"pl-s1\">Download and install kubewatch</span>\n$ <span class=\"pl-s1\">go get -u github.com/robusta-dev/kubewatch</span>\n\n# <span class=\"pl-s1\">Configure the notification channel</span>\n$ <span class=\"pl-s1\">kubewatch config add slack --channel <span class=\"pl-k\">&lt;</span>slack_channel<span class=\"pl-k\">&gt;</span> --token <span class=\"pl-k\">&lt;</span>slack_token<span class=\"pl-k\">&gt;</span></span>\n\n# <span class=\"pl-s1\">Add resources to be watched</span>\n$ <span class=\"pl-s1\">kubewatch resource add --po --svc</span>\n<span class=\"pl-c1\">INFO[0000] resource svc configured</span>\n<span class=\"pl-c1\">INFO[0000] resource po configured</span>\n\n# <span class=\"pl-s1\">start kubewatch server</span>\n$ <span class=\"pl-s1\">kubewatch</span>\n<span class=\"pl-c1\">INFO[0000] Starting kubewatch controller                 pkg=kubewatch-service</span>\n<span class=\"pl-c1\">INFO[0000] Starting kubewatch controller                 pkg=kubewatch-pod</span>\n<span class=\"pl-c1\">INFO[0000] Processing add to service: default/kubernetes  pkg=kubewatch-service</span>\n<span class=\"pl-c1\">INFO[0000] Processing add to service: kube-system/tiller-deploy  pkg=kubewatch-service</span>\n<span class=\"pl-c1\">INFO[0000] Processing add to pod: kube-system/tiller-deploy-69ffbf64bc-h8zxm  pkg=kubewatch-pod</span>\n<span class=\"pl-c1\">INFO[0000] Kubewatch controller synced and ready         pkg=kubewatch-service</span>\n<span class=\"pl-c1\">INFO[0000] Kubewatch controller synced and ready         pkg=kubewatch-pod</span>\n</pre></div>\n<h4 dir=\"auto\">Using Docker:</h4>\n<p dir=\"auto\">To Run Kubewatch Container interactively, place the config file in <code class=\"notranslate\">$HOME/.kubewatch.yaml</code> location and use the following command.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run --rm -it --network host -v $HOME/.kubewatch.yaml:/root/.kubewatch.yaml -v $HOME/.kube/config:/opt/bitnami/kubewatch/.kube/config --name &lt;container-name&gt; robustadev/kubewatch\"><pre class=\"notranslate\"><code class=\"notranslate\">docker run --rm -it --network host -v $HOME/.kubewatch.yaml:/root/.kubewatch.yaml -v $HOME/.kube/config:/opt/bitnami/kubewatch/.kube/config --name &lt;container-name&gt; robustadev/kubewatch\n</code></pre></div>\n<p dir=\"auto\">Example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ docker run --rm -it --network host -v $HOME/.kubewatch.yaml:/root/.kubewatch.yaml -v $HOME/.kube/config:/opt/bitnami/kubewatch/.kube/config --name kubewatch-app robustadev/kubewatch\n\n==&gt; Writing config file...\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-service\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-pod\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-deployment\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: kube-node-lease  pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: kube-public      pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: kube-system      pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: default          pkg=kubewatch-namespace\n....\"><pre class=\"notranslate\"><code class=\"notranslate\">$ docker run --rm -it --network host -v $HOME/.kubewatch.yaml:/root/.kubewatch.yaml -v $HOME/.kube/config:/opt/bitnami/kubewatch/.kube/config --name kubewatch-app robustadev/kubewatch\n\n==&gt; Writing config file...\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-service\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-pod\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-deployment\nINFO[0000] Starting kubewatch controller                 pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: kube-node-lease  pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: kube-public      pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: kube-system      pkg=kubewatch-namespace\nINFO[0000] Processing add to namespace: default          pkg=kubewatch-namespace\n....\n</code></pre></div>\n<p dir=\"auto\">To Demonise Kubewatch container use</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ docker run --rm -d --network host -v $HOME/.kubewatch.yaml:/root/.kubewatch.yaml -v $HOME/.kube/config:/opt/bitnami/kubewatch/.kube/config --name kubewatch-app robustadev/kubewatch\"><pre class=\"notranslate\"><code class=\"notranslate\">$ docker run --rm -d --network host -v $HOME/.kubewatch.yaml:/root/.kubewatch.yaml -v $HOME/.kube/config:/opt/bitnami/kubewatch/.kube/config --name kubewatch-app robustadev/kubewatch\n</code></pre></div>\n<h1 dir=\"auto\">Configure</h1>\n<p dir=\"auto\">Kubewatch supports <code class=\"notranslate\">config</code> command for configuration. Config file will be saved at <code class=\"notranslate\">$HOME/.kubewatch.yaml</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubewatch config -h\n\nconfig command allows admin setup his own configuration for running kubewatch\n\nUsage:\n  kubewatch config [flags]\n  kubewatch config [command]\n\nAvailable Commands:\n  add         add webhook config to .kubewatch.yaml\n  test        test handler config present in .kubewatch.yaml\n  view        view .kubewatch.yaml\n\nFlags:\n  -h, --help   help for config\n\nUse &quot;kubewatch config [command] --help&quot; for more information about a command.\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubewatch config -h\n\nconfig command allows admin setup his own configuration for running kubewatch\n\nUsage:\n  kubewatch config [flags]\n  kubewatch config [command]\n\nAvailable Commands:\n  add         add webhook config to .kubewatch.yaml\n  test        test handler config present in .kubewatch.yaml\n  view        view .kubewatch.yaml\n\nFlags:\n  -h, --help   help for config\n\nUse \"kubewatch config [command] --help\" for more information about a command.\n</code></pre></div>\n<h3 dir=\"auto\">Example:</h3>\n<h3 dir=\"auto\">slack:</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Create a <a href=\"https://my.slack.com/services/new/bot\" rel=\"nofollow\">slack Bot</a></p>\n</li>\n<li>\n<p dir=\"auto\">Edit the Bot to customize its name, icon and retrieve the API token (it starts with <code class=\"notranslate\">xoxb-</code>).</p>\n</li>\n<li>\n<p dir=\"auto\">Invite the Bot into your channel by typing: <code class=\"notranslate\">/invite @name_of_your_bot</code> in the Slack message area.</p>\n</li>\n<li>\n<p dir=\"auto\">Add Api token to kubewatch config using the following steps</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ kubewatch config add slack --channel &lt;slack_channel&gt; --token &lt;slack_token&gt;\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">kubewatch config add slack --channel <span class=\"pl-k\">&lt;</span>slack_channel<span class=\"pl-k\">&gt;</span> --token <span class=\"pl-k\">&lt;</span>slack_token<span class=\"pl-k\">&gt;</span></span></pre></div>\n<p dir=\"auto\">You have an altenative choice to set your SLACK token, channel via environment variables:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ export KW_SLACK_TOKEN='XXXXXXXXXXXXXXXX'\n$ export KW_SLACK_CHANNEL='#channel_name'\"><pre class=\"notranslate\">$ <span class=\"pl-s1\"><span class=\"pl-k\">export</span> KW_SLACK_TOKEN=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>XXXXXXXXXXXXXXXX<span class=\"pl-pds\">'</span></span></span>\n$ <span class=\"pl-s1\"><span class=\"pl-k\">export</span> KW_SLACK_CHANNEL=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#channel_name<span class=\"pl-pds\">'</span></span></span></pre></div>\n</li>\n</ul>\n<h3 dir=\"auto\">slackwebhookurl:</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Create a <a href=\"https://api.slack.com/apps/new\" rel=\"nofollow\">slack app</a></p>\n</li>\n<li>\n<p dir=\"auto\">Enable <a href=\"https://api.slack.com/messaging/webhooks#enable_webhooks\" rel=\"nofollow\">Incoming Webhooks</a>. (On \"Settings\" page.)</p>\n</li>\n<li>\n<p dir=\"auto\">Create an incoming webhook URL (Add New Webhook to Workspace on \"Settings\" page.)</p>\n</li>\n<li>\n<p dir=\"auto\">Pick a channel that the app will post to, and then click to Authorize your app. You will get back your webhook URL.<br>\nThe Slack Webhook URL will look like: <a href=\"https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX\" rel=\"nofollow\">https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX</a></p>\n</li>\n<li>\n<p dir=\"auto\">Add slack webhook url to kubewatch config using the following steps</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ kubewatch config add slackwebhookurl --username &lt;slack_username&gt; --emoji &lt;slack_emoji&gt; --channel &lt;slack_channel&gt; --slackwebhookurl &lt;slack_webhook_url&gt;\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">kubewatch config add slackwebhookurl --username <span class=\"pl-k\">&lt;</span>slack_username<span class=\"pl-k\">&gt;</span> --emoji <span class=\"pl-k\">&lt;</span>slack_emoji<span class=\"pl-k\">&gt;</span> --channel <span class=\"pl-k\">&lt;</span>slack_channel<span class=\"pl-k\">&gt;</span> --slackwebhookurl <span class=\"pl-k\">&lt;</span>slack_webhook_url<span class=\"pl-k\">&gt;</span></span></pre></div>\n<p dir=\"auto\">Or, you have an altenative choice to set your SLACK channel, username, emoji and webhook URL via environment variables:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ export KW_SLACK_CHANNEL=slack_channel\n$ export KW_SLACK_USERNAME=slack_username\n$ export KW_SLACK_EMOJI=slack_emoji\n$ export KW_SLACK_WEBHOOK_URL=slack_webhook_url\"><pre class=\"notranslate\">$ <span class=\"pl-s1\"><span class=\"pl-k\">export</span> KW_SLACK_CHANNEL=slack_channel</span>\n$ <span class=\"pl-s1\"><span class=\"pl-k\">export</span> KW_SLACK_USERNAME=slack_username</span>\n$ <span class=\"pl-s1\"><span class=\"pl-k\">export</span> KW_SLACK_EMOJI=slack_emoji</span>\n$ <span class=\"pl-s1\"><span class=\"pl-k\">export</span> KW_SLACK_WEBHOOK_URL=slack_webhook_url</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Example apply done in a bash script:</p>\n</li>\n</ul>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ cat kubewatch-configmap-slackwebhook.yaml | sed &quot;s|&lt;slackchannel&gt;|&quot;\\&quot;$SlackChannel&quot;\\&quot;|g;s|&lt;slackusername&gt;|&quot;\\&quot;$SlackUsesrName&quot;\\&quot;|g;s|&lt;slackemoji&gt;|&quot;\\&quot;$SlackEmoji&quot;\\&quot;|g;s|&lt;SlackWebhookUrl&gt;|&quot;\\&quot;$WebhookUrl&quot;\\&quot;|g&quot; | kubectl create -f -\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">cat kubewatch-configmap-slackwebhook.yaml <span class=\"pl-k\">|</span> sed <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s|&lt;slackchannel&gt;|<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\\"</span><span class=\"pl-smi\">$SlackChannel</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\"</span>|g;s|&lt;slackusername&gt;|<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\\"</span><span class=\"pl-smi\">$SlackUsesrName</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\"</span>|g;s|&lt;slackemoji&gt;|<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\\"</span><span class=\"pl-smi\">$SlackEmoji</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\"</span>|g;s|&lt;SlackWebhookUrl&gt;|<span class=\"pl-pds\">\"</span></span><span class=\"pl-cce\">\\\"</span><span class=\"pl-smi\">$WebhookUrl</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\"</span>|g<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">|</span> kubectl create -f -</span></pre></div>\n<ul dir=\"auto\">\n<li>An example kubewatch-configmap-slackwebhook.yaml YAML File:</li>\n</ul>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"apiVersion: v1\nkind: ConfigMap\nmetadata:\n name: kubewatch\ndata:\n .kubewatch.yaml: |\n   namespace: &quot;&quot;\n   handler:\n     slackwebhook:\n       enabled: true\n       channel: &lt;slackchannel&gt;\n       username: &lt;slackusername&gt;\n       emoji: &lt;slackemoji&gt;\n       slackwebhookurl: &lt;SlackWebhookUrl&gt;\n   resource:\n     clusterrole: false\n     configmap: false\n     daemonset: false\n     deployment: true\n     ingress: false\n     job: false\n     namespace: false\n     node: false\n     persistentvolume: false\n     pod: true\n     replicaset: false\n     replicationcontroller: false\n     secret: false\n     serviceaccount: false\n     services: true\n     event: true\n     coreevent: false\n   ```\n\n### flock:\n\n- Create a [flock bot](https://docs.flock.com/display/flockos/Bots).\n\n- Add flock webhook url to config using the following command.\n ```console\n $ kubewatch config add flock --url &lt;flock_webhook_url&gt;\"><pre class=\"notranslate\"><span class=\"pl-ent\">apiVersion</span>: <span class=\"pl-c1\">v1</span>\n<span class=\"pl-ent\">kind</span>: <span class=\"pl-s\">ConfigMap</span>\n<span class=\"pl-ent\">metadata</span>:\n <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">kubewatch</span>\n<span class=\"pl-ent\">data</span>:\n <span class=\"pl-ent\">.kubewatch.yaml</span>: <span class=\"pl-s\">|</span>\n<span class=\"pl-s\">   namespace: \"\"</span>\n<span class=\"pl-s\">   handler:</span>\n<span class=\"pl-s\">     slackwebhook:</span>\n<span class=\"pl-s\">       enabled: <span class=\"pl-c1\">true</span></span>\n<span class=\"pl-s\">       channel: &lt;slackchannel&gt;</span>\n<span class=\"pl-s\">       username: &lt;slackusername&gt;</span>\n<span class=\"pl-s\">       emoji: &lt;slackemoji&gt;</span>\n<span class=\"pl-s\">       slackwebhookurl: &lt;SlackWebhookUrl&gt;</span>\n<span class=\"pl-s\">   resource:</span>\n<span class=\"pl-s\">     clusterrole: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     configmap: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     daemonset: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     deployment: <span class=\"pl-c1\">true</span></span>\n<span class=\"pl-s\">     ingress: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     job: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     namespace: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     node: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     persistentvolume: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     pod: <span class=\"pl-c1\">true</span></span>\n<span class=\"pl-s\">     replicaset: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     replicationcontroller: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     secret: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     serviceaccount: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">     services: <span class=\"pl-c1\">true</span></span>\n<span class=\"pl-s\">     event: <span class=\"pl-c1\">true</span></span>\n<span class=\"pl-s\">     coreevent: <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s\">   ```</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span><span class=\"pl-c\"><span class=\"pl-c\">#</span>## flock:</span>\n\n- <span class=\"pl-s\">Create a [flock bot](https://docs.flock.com/display/flockos/Bots).</span>\n\n- <span class=\"pl-s\">Add flock webhook url to config using the following command.</span>\n <span class=\"pl-s\"><span class=\"pl-pds\">`</span><span class=\"pl-pds\">`</span><span class=\"pl-pds\">`</span>console</span>\n<span class=\"pl-s\"> $ kubewatch config add flock --url &lt;flock_webhook_url&gt;</span></pre></div>\n<p dir=\"auto\">You have an altenative choice to set your FLOCK URL</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ export KW_FLOCK_URL='https://api.flock.com/hooks/sendMessage/XXXXXXXX'\"><pre class=\"notranslate\">$ <span class=\"pl-s1\"><span class=\"pl-k\">export</span> KW_FLOCK_URL=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://api.flock.com/hooks/sendMessage/XXXXXXXX<span class=\"pl-pds\">'</span></span></span></pre></div>\n<h2 dir=\"auto\">Testing Config</h2>\n<p dir=\"auto\">To test the handler config by send test messages use the following command.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubewatch config test -h\n\nTests handler configs present in .kubewatch.yaml by sending test messages\n\nUsage:\n  kubewatch config test [flags]\n\nFlags:\n  -h, --help   help for test\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubewatch config test -h\n\nTests handler configs present in .kubewatch.yaml by sending test messages\n\nUsage:\n  kubewatch config test [flags]\n\nFlags:\n  -h, --help   help for test\n</code></pre></div>\n<h4 dir=\"auto\">Example:</h4>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubewatch config test\n\nTesting Handler configs from .kubewatch.yaml\n2019/06/03 12:29:23 Message successfully sent to channel ABCD at 1559545162.000100\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubewatch config test\n\nTesting Handler configs from .kubewatch.yaml\n2019/06/03 12:29:23 Message successfully sent to channel ABCD at 1559545162.000100\n</code></pre></div>\n<h2 dir=\"auto\">Viewing config</h2>\n<p dir=\"auto\">To view the entire config file <code class=\"notranslate\">$HOME/.kubewatch.yaml</code> use the following command.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubewatch config view\nContents of .kubewatch.yaml\n\nhandler:\n  slack:\n    token: xoxb-xxxxx-yyyy-zzz\n    channel: kube-watch\n  hipchat:\n    token: &quot;&quot;\n    room: &quot;&quot;\n    url: &quot;&quot;\n  mattermost:\n    channel: &quot;&quot;\n    url: &quot;&quot;\n    username: &quot;&quot;\n  flock:\n    url: &quot;&quot;\n  webhook:\n    url: &quot;&quot;\n  cloudevent:\n    url: &quot;&quot;\nresource:\n  deployment: false\n  replicationcontroller: false\n  replicaset: false\n  daemonset: false\n  services: false\n  pod: true\n  job: false\n  node: false\n  clusterrole: false\n  clusterrolebinding: false\n  serviceaccount: false\n  persistentvolume: false\n  namespace: false\n  secret: false\n  configmap: false\n  ingress: false\n  event: true\n  coreevent: false\nnamespace: &quot;&quot;\n\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubewatch config view\nContents of .kubewatch.yaml\n\nhandler:\n  slack:\n    token: xoxb-xxxxx-yyyy-zzz\n    channel: kube-watch\n  hipchat:\n    token: \"\"\n    room: \"\"\n    url: \"\"\n  mattermost:\n    channel: \"\"\n    url: \"\"\n    username: \"\"\n  flock:\n    url: \"\"\n  webhook:\n    url: \"\"\n  cloudevent:\n    url: \"\"\nresource:\n  deployment: false\n  replicationcontroller: false\n  replicaset: false\n  daemonset: false\n  services: false\n  pod: true\n  job: false\n  node: false\n  clusterrole: false\n  clusterrolebinding: false\n  serviceaccount: false\n  persistentvolume: false\n  namespace: false\n  secret: false\n  configmap: false\n  ingress: false\n  event: true\n  coreevent: false\nnamespace: \"\"\n\n</code></pre></div>\n<h2 dir=\"auto\">Resources</h2>\n<p dir=\"auto\">To manage the resources being watched, use the following command, changes will be saved to <code class=\"notranslate\">$HOME/.kubewatch.yaml</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubewatch resource -h\n\nmanage resources to be watched\n\nUsage:\n  kubewatch resource [flags]\n  kubewatch resource [command]\n\nAvailable Commands:\n  add         adds specific resources to be watched\n  remove      remove specific resources being watched\n\nFlags:\n      \n      --clusterrolebinding      watch for cluster role bindings\n      --clusterrole             watch for cluster roles\n      --cm                      watch for plain configmaps\n      --deploy                  watch for deployments\n      --ds                      watch for daemonsets\n  -h, --help                    help for resource\n      --ing                     watch for ingresses\n      --job                     watch for jobs\n      --node                    watch for Nodes\n      --ns                      watch for namespaces\n      --po                      watch for pods\n      --pv                      watch for persistent volumes\n      --rc                      watch for replication controllers\n      --rs                      watch for replicasets\n      --sa                      watch for service accounts\n      --secret                  watch for plain secrets\n      --svc                     watch for services\n      --coreevent               watch for events from the kubernetes core api. (Old events api, replaced in kubernetes 1.19)\n\nUse &quot;kubewatch resource [command] --help&quot; for more information about a command.\n\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubewatch resource -h\n\nmanage resources to be watched\n\nUsage:\n  kubewatch resource [flags]\n  kubewatch resource [command]\n\nAvailable Commands:\n  add         adds specific resources to be watched\n  remove      remove specific resources being watched\n\nFlags:\n      \n      --clusterrolebinding      watch for cluster role bindings\n      --clusterrole             watch for cluster roles\n      --cm                      watch for plain configmaps\n      --deploy                  watch for deployments\n      --ds                      watch for daemonsets\n  -h, --help                    help for resource\n      --ing                     watch for ingresses\n      --job                     watch for jobs\n      --node                    watch for Nodes\n      --ns                      watch for namespaces\n      --po                      watch for pods\n      --pv                      watch for persistent volumes\n      --rc                      watch for replication controllers\n      --rs                      watch for replicasets\n      --sa                      watch for service accounts\n      --secret                  watch for plain secrets\n      --svc                     watch for services\n      --coreevent               watch for events from the kubernetes core api. (Old events api, replaced in kubernetes 1.19)\n\nUse \"kubewatch resource [command] --help\" for more information about a command.\n\n</code></pre></div>\n<h3 dir=\"auto\">Add/Remove resource:</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ kubewatch resource add -h\n\nadds specific resources to be watched\n\nUsage:\n  kubewatch resource add [flags]\n\nFlags:\n  -h, --help   help for add\n\nGlobal Flags:\n      --clusterrole             watch for cluster roles\n      --clusterrolebinding      watch for cluster role bindings\n      --cm                      watch for plain configmaps\n      --deploy                  watch for deployments\n      --ds                      watch for daemonsets\n      --ing                     watch for ingresses\n      --job                     watch for jobs\n      --node                    watch for Nodes\n      --ns                      watch for namespaces\n      --po                      watch for pods\n      --pv                      watch for persistent volumes\n      --rc                      watch for replication controllers\n      --rs                      watch for replicasets\n      --sa                      watch for service accounts\n      --secret                  watch for plain secrets\n      --svc                     watch for services\n      --coreevent               watch for events from the kubernetes core api. (Old events api, replaced in kubernetes 1.19)\n\"><pre class=\"notranslate\"><code class=\"notranslate\">$ kubewatch resource add -h\n\nadds specific resources to be watched\n\nUsage:\n  kubewatch resource add [flags]\n\nFlags:\n  -h, --help   help for add\n\nGlobal Flags:\n      --clusterrole             watch for cluster roles\n      --clusterrolebinding      watch for cluster role bindings\n      --cm                      watch for plain configmaps\n      --deploy                  watch for deployments\n      --ds                      watch for daemonsets\n      --ing                     watch for ingresses\n      --job                     watch for jobs\n      --node                    watch for Nodes\n      --ns                      watch for namespaces\n      --po                      watch for pods\n      --pv                      watch for persistent volumes\n      --rc                      watch for replication controllers\n      --rs                      watch for replicasets\n      --sa                      watch for service accounts\n      --secret                  watch for plain secrets\n      --svc                     watch for services\n      --coreevent               watch for events from the kubernetes core api. (Old events api, replaced in kubernetes 1.19)\n\n</code></pre></div>\n<h3 dir=\"auto\">Example:</h3>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# rc, po and svc will be watched\n$ kubewatch resource add --rc --po --svc\n\n# rc, po and svc will be stopped from being watched\n$ kubewatch resource remove --rc --po --svc\"><pre class=\"notranslate\"># <span class=\"pl-s1\">rc, po and svc will be watched</span>\n$ <span class=\"pl-s1\">kubewatch resource add --rc --po --svc</span>\n\n# <span class=\"pl-s1\">rc, po and svc will be stopped from being watched</span>\n$ <span class=\"pl-s1\">kubewatch resource remove --rc --po --svc</span></pre></div>\n<h3 dir=\"auto\">Changing log level</h3>\n<p dir=\"auto\">In case you want to change the default log level, add an environment variable named <code class=\"notranslate\">LOG_LEVEL</code> with value from <code class=\"notranslate\">trace/debug/info/warning/error</code></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"env:\n- name: LOG_LEVEL\n  value: debug\"><pre class=\"notranslate\"><span class=\"pl-ent\">env</span>:\n- <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">LOG_LEVEL</span>\n  <span class=\"pl-ent\">value</span>: <span class=\"pl-s\">debug</span></pre></div>\n<h3 dir=\"auto\">Changing log format</h3>\n<p dir=\"auto\">In case you want to change the log format to <code class=\"notranslate\">json</code>, add an environment variable named <code class=\"notranslate\">LOG_FORMATTER</code> with value <code class=\"notranslate\">json</code></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"env:\n- name: LOG_FORMATTER\n  value: json\"><pre class=\"notranslate\"><span class=\"pl-ent\">env</span>:\n- <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">LOG_FORMATTER</span>\n  <span class=\"pl-ent\">value</span>: <span class=\"pl-s\">json</span></pre></div>\n<h1 dir=\"auto\">Build</h1>\n<h3 dir=\"auto\">Using go</h3>\n<p dir=\"auto\">Clone the repository anywhere:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ git clone https://github.com/bitnami-labs/kubewatch.git\n$ cd kubewatch\n$ go build\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">git clone https://github.com/bitnami-labs/kubewatch.git</span>\n$ <span class=\"pl-s1\"><span class=\"pl-c1\">cd</span> kubewatch</span>\n$ <span class=\"pl-s1\">go build</span></pre></div>\n<p dir=\"auto\">or</p>\n<p dir=\"auto\">You can also use the Makefile directly:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ make build\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">make build</span></pre></div>\n<h4 dir=\"auto\">Prerequisites</h4>\n<ul dir=\"auto\">\n<li>You need to have <a href=\"http://golang.org\" rel=\"nofollow\">Go</a> (v1.5 or later)  installed. Make sure to set <code class=\"notranslate\">$GOPATH</code></li>\n</ul>\n<h3 dir=\"auto\">Using Docker</h3>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ make docker-image\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED              SIZE\nkubewatch           latest              919896d3cd90        3 minutes ago       27.9MB\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">make docker-image</span>\n$ <span class=\"pl-s1\">docker images</span>\n<span class=\"pl-c1\">REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE</span>\n<span class=\"pl-c1\">kubewatch           latest              919896d3cd90        3 minutes ago       27.9MB</span></pre></div>\n<h4 dir=\"auto\">Prerequisites</h4>\n<ul dir=\"auto\">\n<li>you need to have <a href=\"https://docs.docker.com/\" rel=\"nofollow\">docker</a> installed.</li>\n</ul>\n<h1 dir=\"auto\">Contribution</h1>\n<p dir=\"auto\">Refer to the <a href=\"docs/CONTRIBUTION.md\">contribution guidelines</a> to get started.</p>","updatedAt":"2025-05-21T16:09:36Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"K8S-Tools","color":"2d411a"}},{"node":{"name":"robusta-dev","color":"48cd61"}}]},"comments":{"edges":[]}}},"pageContext":{"number":341,"previous":{"title":"kubewall/kubewall: 一个轻量的 k8s 集群控制面板，一个二进制即可部署，用在本地使用还是不错的。","number":340},"next":{"title":"eip-work/kuboard-press: K8s 多集群管理平台，开源免费版本仅支持3个以内的集群","number":342}}},
    "staticQueryHashes": ["151096407","2861350382"]}