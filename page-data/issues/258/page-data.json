{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/258",
    "result": {"data":{"issuesJson":{"id":"4182e586-ef43-5416-900f-cec8b3baf15e","title":"alibaba/jvm-sandbox-repeater: 基于 JVM-Sandbox 的录制/回放通用解决方案","number":258,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/alibaba/jvm-sandbox-repeater\">alibaba/jvm-sandbox-repeater</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/30bbd3a4218f9a7f7ddfdbec7d29e45ce1d8f72a685a9634d718a700a4805d12/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f616c69626162612f6a766d2d73616e64626f782d72657065617465722e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/alibaba/jvm-sandbox-repeater.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/9d36ea54325724520e26488afc5a2e182ab0bb24883210e1283ff98b4d6228db/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f616c69626162612f6a766d2d73616e64626f782d72657065617465723f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/alibaba/jvm-sandbox-repeater?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/78025e0f431f366a7d1151ceb60911b546fb6f32ee33519f2d1d751a17344499/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f616c69626162612f6a766d2d73616e64626f782d72657065617465723f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/alibaba/jvm-sandbox-repeater?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/355b57ba03819d272f71829b76040c7a3f9b21c2bb89dad0662aef90db269766/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f616c69626162612f6a766d2d73616e64626f782d72657065617465723f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/alibaba/jvm-sandbox-repeater?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/75e27c41c6fe9645eb4f9cd89bc62451e44998ff58ade22cfa079ff2c7e1ee5b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f616c69626162612f6a766d2d73616e64626f782d72657065617465723f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/alibaba/jvm-sandbox-repeater?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/c793bd136acc7e17ac70d83c8148872c5d61ab9943fcd9c67d5c8b3a2a8691c9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f616c69626162612f6a766d2d73616e64626f782d72657065617465723f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/alibaba/jvm-sandbox-repeater?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/alibaba/jvm-sandbox-repeater/releases/download/v1.0.0/repeater-logo.png\"><img src=\"https://github.com/alibaba/jvm-sandbox-repeater/releases/download/v1.0.0/repeater-logo.png\" alt=\"logo\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://travis-ci.org/alibaba/jvm-sandbox-repeater\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/c61e897192725f94b2d7827246e58e4c39de9396fce3a06299e0fc18de09729b/68747470733a2f2f7472617669732d63692e6f72672f616c69626162612f6a766d2d73616e64626f782d72657065617465722e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/alibaba/jvm-sandbox-repeater.svg?branch=master\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/9ac7b34c6dcab13f731853c75d396b3b425c37cd2e5096a7610fd84f2105e42d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d3445423142412e737667\" alt=\"License\" data-canonical-src=\"https://img.shields.io/badge/license-Apache%202-4EB1BA.svg\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://github.com/alibaba/jvm-sandbox-repeater/issues\"><img src=\"https://camo.githubusercontent.com/e57fb2999e48f7722554e3e5548ced22fe0ca55e33e8e365018a38b900e82294/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f616c69626162612f6a766d2d73616e64626f782d72657065617465722e737667\" alt=\"GitHub issues\" data-canonical-src=\"https://img.shields.io/github/issues/alibaba/jvm-sandbox-repeater.svg\" style=\"max-width: 100%;\"></a></p>\n<h1 dir=\"auto\">基于<a href=\"https://github.com/alibaba/JVM-Sandbox\">JVM-Sandbox</a>的录制/回放通用解决方案</h1>\n<blockquote>\n<p dir=\"auto\"><a href=\"https://github.com/alibaba/jvm-sandbox-repeater\">jvm-sandbox-repeater</a>是<a href=\"https://github.com/alibaba/JVM-Sandbox\">JVM-Sandbox</a>生态体系下的重要模块，它具备了JVM-Sandbox的所有特点，插件式设计便于快速适配各种中间件，封装请求录制/回放基础协议，也提供了通用可扩展的各种丰富API。</p>\n</blockquote>\n<h2 dir=\"auto\">目标人群 - 面向测试开发工程师</h2>\n<ul dir=\"auto\">\n<li>线上有个用户请求一直不成功，我想在测试环境Debug一下，能帮我复现一下吗？</li>\n<li>压测流量不知道怎么构造，数据结构太复杂，压测模型也难以评估，有什么好的办法吗？</li>\n<li>不想写接口测试脚本了，我想做一个流量录制系统，把线上用户场景做业务回归，可能会接入很多服务系统，不想让每个系统都进行改造，有好的框架选择吗？</li>\n<li>我想做一个业务监控系统，对线上核心接口采样之后做一些业务校验，实时监控业务正确性。</li>\n</ul>\n<p dir=\"auto\">如果你有以上的想法或需求，<a href=\"https://github.com/alibaba/jvm-sandbox-repeater\">jvm-sandbox-repeater</a> 都将是你的不二选择方案；框架基于JVM-Sandbox，拥有JVM-Sandbox的一切特性，同时封装了以下能力：</p>\n<ul dir=\"auto\">\n<li>录制/回放基础协议，可快速配置/编码实现一类中间件的录制/回放</li>\n<li>开放数据上报，对于录制结果可上报到自己的服务端，进行监控、回归、问题排查等上层平台搭建</li>\n</ul>\n<h2 dir=\"auto\">项目简介</h2>\n<h3 dir=\"auto\">repeater的核心能力是什么？</h3>\n<h4 dir=\"auto\">1. 通用录制/回放能力</h4>\n<ul dir=\"auto\">\n<li>无侵入式录制HTTP/Java/Dubbo入参/返回值录制能力（业务系统无感知）</li>\n<li>基于<a href=\"https://github.com/alibaba/transmittable-thread-local\">TTL</a>提供多线程子调用追踪，完整追踪一次请求的调用路径</li>\n<li>入口请求（HTTP/Dubbo/Java）流量回放、子调用（Java/Dubbo）返回值Mock能力</li>\n</ul>\n<h4 dir=\"auto\">2. 快速可扩展API实现</h4>\n<ul dir=\"auto\">\n<li>录制/回放插件式架构</li>\n<li>提供标准接口，可通过配置/简单编码实现一类通用插件</li>\n</ul>\n<h4 dir=\"auto\">3. standalone工作模式</h4>\n<ul dir=\"auto\">\n<li>无需依赖任何服务端/存储，可以单机工作，提供录制/回放能力</li>\n</ul>\n<h3 dir=\"auto\">repeater的可以应用到哪些场景？</h3>\n<h4 dir=\"auto\">1. 业务快速回归</h4>\n<ul dir=\"auto\">\n<li>基于线上流量的录制/回放，无需人肉准备自动化测试脚本、准备测试数据</li>\n</ul>\n<h4 dir=\"auto\">2. 线上问题排查</h4>\n<ul dir=\"auto\">\n<li>录制回放提供\"昨日重现\"能力，还原线上真实场景到线下做问题排查和Debug</li>\n<li>动态方法入参/返回值录制，提供线上快速问题定位</li>\n</ul>\n<h4 dir=\"auto\">3. 压测流量准备</h4>\n<ul dir=\"auto\">\n<li>0成本录制HTTP/Dubbo等入口流量，作为压测流量模型进行压测</li>\n</ul>\n<h4 dir=\"auto\">4. 实时业务监控</h4>\n<ul dir=\"auto\">\n<li>动态业务监控，基于核心接口数据录制回流到平台，对接口返回数据正确性进行校验和监控</li>\n</ul>\n<h2 dir=\"auto\">核心原理</h2>\n<h3 dir=\"auto\">流量录制</h3>\n<p dir=\"auto\">对于Java调用，一次流量录制包括一次入口调用(<code class=\"notranslate\">entranceInvocation</code>)（eg：HTTP/Dubbo/Java）和若干次子调用(<code class=\"notranslate\">subInvocations</code>)。流量的录制过程就是把入口调用和子调用绑定成一次完整的记录，框架抽象了基础录制协议，调用的组装由调用插件(<a href=\"/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/spi/InvokePlugin.java\">InvokePlugin</a>)来完成，需要考虑解决的核心问题：</p>\n<ul dir=\"auto\">\n<li>快速开发和适配新插件</li>\n<li>绑定入口调用和子调用（解决多线程上下文传递问题）</li>\n<li><code class=\"notranslate\">invocation</code>唯一定位，保障回放时精确匹配</li>\n<li>自定义流量采样、过滤、发送、存储</li>\n</ul>\n<p dir=\"auto\">框架的核心逻辑录制协议基于JVM-Sandbox的<code class=\"notranslate\">BEFORE</code>、<code class=\"notranslate\">RETRUN</code>、<code class=\"notranslate\">THROW</code>事件机制进行录制流程控制，详见<a href=\"/repeater-plugin-core/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/core/impl/api/DefaultEventListener.java\">DefaultEventListener</a>：</p>\n<blockquote>\n<p dir=\"auto\">基于<a href=\"https://github.com/alibaba/transmittable-thread-local\">TTL</a>解决跨线程上下文传递问题，开启<code class=\"notranslate\">RepeaterConfig.useTtl</code>之后支持多线程子调用录制</p>\n<p dir=\"auto\">开放插件定义enhance埋点/自定义调用组装方式快速实现插件适配</p>\n<p dir=\"auto\"><a href=\"/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/domain/Invocation.java\">Invocation</a>抽象<a href=\"/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/domain/Identity.java\">Identity</a>统一定位由插件自己扩展实现</p>\n<p dir=\"auto\">基于<a href=\"/repeater-plugin-core/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/core/trace/Tracer.java\">Tracer</a>实现应用内链路追踪、采样；同时支持多种过滤方式，插件可自由扩展；</p>\n</blockquote>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public void onEvent(Event event) throws Throwable {\n    try {\n        /*\n         * event过滤；针对单个listener，只处理top的事件\n         */\n        /** -------- **/\n        /*\n         * 初始化Tracer开启上下文追踪[基于TTL，支持多线程上下文传递]\n         */\n        /** -------- **/\n        /*\n         * 执行基础过滤\n         */\n        /** -------- **/\n        /*\n         * 执行采样计算\n         */\n        /** -------- **/\n        /*\n         * processor filter\n         */\n        /** -------- **/\n        /*\n         * 分发事件处理\n         */\n    } catch (ProcessControlException pe) {\n        /*\n         * sandbox流程干预\n         */\n    } catch (Throwable throwable) {\n    \t /*\n    \t  * 统计异常\n    \t  */\n    } finally {\n        /*\n         * 清理上下文\n         */\n    }\n}\n\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">onEvent</span>(<span class=\"pl-smi\">Event</span> <span class=\"pl-s1\">event</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Throwable</span> {\n    <span class=\"pl-k\">try</span> {\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * event过滤；针对单个listener，只处理top的事件</span>\n<span class=\"pl-c\">         */</span>\n        <span class=\"pl-c\">/** -------- **/</span>\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * 初始化Tracer开启上下文追踪[基于TTL，支持多线程上下文传递]</span>\n<span class=\"pl-c\">         */</span>\n        <span class=\"pl-c\">/** -------- **/</span>\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * 执行基础过滤</span>\n<span class=\"pl-c\">         */</span>\n        <span class=\"pl-c\">/** -------- **/</span>\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * 执行采样计算</span>\n<span class=\"pl-c\">         */</span>\n        <span class=\"pl-c\">/** -------- **/</span>\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * processor filter</span>\n<span class=\"pl-c\">         */</span>\n        <span class=\"pl-c\">/** -------- **/</span>\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * 分发事件处理</span>\n<span class=\"pl-c\">         */</span>\n    } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">ProcessControlException</span> <span class=\"pl-s1\">pe</span>) {\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * sandbox流程干预</span>\n<span class=\"pl-c\">         */</span>\n    } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Throwable</span> <span class=\"pl-s1\">throwable</span>) {\n    \t <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">    \t  * 统计异常</span>\n<span class=\"pl-c\">    \t  */</span>\n    } <span class=\"pl-k\">finally</span> {\n        <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">         * 清理上下文</span>\n<span class=\"pl-c\">         */</span>\n    }\n}</pre></div>\n<h3 dir=\"auto\">流量回放</h3>\n<p dir=\"auto\">流量回放，获取录制流量的入口调用入参，再次发起调用。注意：<strong>读接口或者幂等写接口可以直接回放，否则在生产环境请谨慎使用，可能会造成脏数据</strong>；用户可自行选择mock回放或者非mock，回放过程要解决的核心问题：</p>\n<ul dir=\"auto\">\n<li>多种入口(HTTP/Dubbo/Java)的回放发起</li>\n<li>自定义回放流量数据来源、回放结果的上报</li>\n<li>自定义mock/非mock回放、回放策略</li>\n<li>开放回放流程关键节点hook</li>\n</ul>\n<p dir=\"auto\">回放过程通过异步EventBus方式订阅回放请求；基于<a href=\"/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/api/FlowDispatcher.java\">FlowDispather</a>进行回放流量分发，每个类型回放插件实现<a href=\"/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/spi/Repeater.java\">Repeater</a>SPI完成回放请求发起；每次回放请求可决定本地回放是否mock，插件也自由实现mock逻辑，mock流程代码</p>\n<blockquote>\n<p dir=\"auto\">mock回放：回放流量子调用（eg:mybatis/dubbo)不发生真实调用，从录制子调用中根据 <a href=\"/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/spi/MockStrategy.java\">MockStrategy</a> 搜索匹配的子调用，利用JVM-Sandbox的流程干预能力，有匹配结果，进行<code class=\"notranslate\">throwReturnImmediately</code>返回，没有匹配结果则抛出异常阻断流程，避免重复调用污染数据</p>\n</blockquote>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public void doMock(BeforeEvent event, Boolean entrance, InvokeType type) throws ProcessControlException {\n    /*\n     * 获取回放上下文\n     */\n    RepeatContext context = RepeatCache.getRepeatContext(Tracer.getTraceId());\n    /*\n     * mock执行条件\n     */\n    if (!skipMock(event, entrance, context) &amp;&amp; context != null &amp;&amp; context.getMeta().isMock()) {\n        try {\n            /*\n             * 构建mock请求\n             */\n            final MockRequest request = MockRequest.builder()\n                    ...\n                    .build();\n            /*\n             * 执行mock动作\n             */\n            final MockResponse mr = StrategyProvider.instance().provide(context.getMeta().getStrategyType()).execute(request);\n            /*\n             * 处理策略推荐结果\n             */\n            switch (mr.action) {\n  \t\t\t\t\t...\n            }\n        } catch (ProcessControlException pce) {\n            throw pce;\n        } catch (Throwable throwable) {\n            ProcessControlException.throwThrowsImmediately(new RepeatException(&quot;unexpected code snippet here.&quot;, throwable));\n        }\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">doMock</span>(<span class=\"pl-smi\">BeforeEvent</span> <span class=\"pl-s1\">event</span>, <span class=\"pl-smi\">Boolean</span> <span class=\"pl-s1\">entrance</span>, <span class=\"pl-smi\">InvokeType</span> <span class=\"pl-s1\">type</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">ProcessControlException</span> {\n    <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">     * 获取回放上下文</span>\n<span class=\"pl-c\">     */</span>\n    <span class=\"pl-smi\">RepeatContext</span> <span class=\"pl-s1\">context</span> = <span class=\"pl-smi\">RepeatCache</span>.<span class=\"pl-en\">getRepeatContext</span>(<span class=\"pl-smi\">Tracer</span>.<span class=\"pl-en\">getTraceId</span>());\n    <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">     * mock执行条件</span>\n<span class=\"pl-c\">     */</span>\n    <span class=\"pl-k\">if</span> (!<span class=\"pl-en\">skipMock</span>(<span class=\"pl-s1\">event</span>, <span class=\"pl-s1\">entrance</span>, <span class=\"pl-s1\">context</span>) &amp;&amp; <span class=\"pl-s1\">context</span> != <span class=\"pl-c1\">null</span> &amp;&amp; <span class=\"pl-s1\">context</span>.<span class=\"pl-en\">getMeta</span>().<span class=\"pl-en\">isMock</span>()) {\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">             * 构建mock请求</span>\n<span class=\"pl-c\">             */</span>\n            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">MockRequest</span> <span class=\"pl-s1\">request</span> = <span class=\"pl-smi\">MockRequest</span>.<span class=\"pl-en\">builder</span>()\n                    ...\n                    .<span class=\"pl-en\">build</span>();\n            <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">             * 执行mock动作</span>\n<span class=\"pl-c\">             */</span>\n            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">MockResponse</span> <span class=\"pl-s1\">mr</span> = <span class=\"pl-smi\">StrategyProvider</span>.<span class=\"pl-en\">instance</span>().<span class=\"pl-en\">provide</span>(<span class=\"pl-s1\">context</span>.<span class=\"pl-en\">getMeta</span>().<span class=\"pl-en\">getStrategyType</span>()).<span class=\"pl-en\">execute</span>(<span class=\"pl-s1\">request</span>);\n            <span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">             * 处理策略推荐结果</span>\n<span class=\"pl-c\">             */</span>\n            <span class=\"pl-k\">switch</span> (<span class=\"pl-s1\">mr</span>.<span class=\"pl-s1\">action</span>) {\n  \t\t\t\t\t...\n            }\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">ProcessControlException</span> <span class=\"pl-s1\">pce</span>) {\n            <span class=\"pl-k\">throw</span> <span class=\"pl-s1\">pce</span>;\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Throwable</span> <span class=\"pl-s1\">throwable</span>) {\n            <span class=\"pl-smi\">ProcessControlException</span>.<span class=\"pl-en\">throwThrowsImmediately</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RepeatException</span>(<span class=\"pl-s\">\"unexpected code snippet here.\"</span>, <span class=\"pl-s1\">throwable</span>));\n        }\n    }\n}</pre></div>\n<h2 dir=\"auto\">合作共建的公司团队</h2>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://raw.githubusercontent.com/lemon-simple/jvm-sandbox-repeater/master/vLogo.png\"><img src=\"https://raw.githubusercontent.com/lemon-simple/jvm-sandbox-repeater/master/vLogo.png\" alt=\"v\" style=\"max-width: 100%;\"></a></p>\n<br><br>\n<h2 dir=\"auto\">已支持的插件列表</h2>\n<blockquote>\n<p dir=\"auto\">Java生态中间件及各种框架众多，各公司技术选型差异较大没办法统一适配，目前适配了几款常用插件作为示例，如有需求可以通过issue方式提交，同时也欢迎大家来贡献开发插件</p>\n</blockquote>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th>插件类型</th>\n<th>录制</th>\n<th align=\"center\">回放</th>\n<th align=\"center\">Mock</th>\n<th align=\"center\">支持时间</th>\n<th align=\"center\">贡献者</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/repeater-plugins/http-plugin\">http-plugin</a></td>\n<td>√</td>\n<td align=\"center\">√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">201906</td>\n<td align=\"center\"><a href=\"https://github.com/zhaoyb1990\">zhaoyb1990</a></td>\n</tr>\n<tr>\n<td><a href=\"/repeater-plugins/dubbo-plugin\">dubbo-plugin</a></td>\n<td>√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">√</td>\n<td align=\"center\">201906</td>\n<td align=\"center\"><a href=\"https://github.com/zhaoyb1990\">zhaoyb1990</a></td>\n</tr>\n<tr>\n<td><a href=\"/repeater-plugins/ibatis-plugin\">ibatis-plugin</a></td>\n<td>√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">√</td>\n<td align=\"center\">201906</td>\n<td align=\"center\"><a href=\"https://github.com/zhaoyb1990\">zhaoyb1990</a></td>\n</tr>\n<tr>\n<td><a href=\"/repeater-plugins/mybatis-plugin\">mybatis-plugin</a></td>\n<td>√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">√</td>\n<td align=\"center\">201906</td>\n<td align=\"center\"><a href=\"https://github.com/ztbsuper\">ztbsuper</a></td>\n</tr>\n<tr>\n<td><a href=\"/repeater-plugins/java-plugin\">java-plugin</a></td>\n<td>√</td>\n<td align=\"center\">√</td>\n<td align=\"center\">√</td>\n<td align=\"center\">201906</td>\n<td align=\"center\"><a href=\"https://github.com/zhaoyb1990\">zhaoyb1990</a></td>\n</tr>\n<tr>\n<td><a href=\"/repeater-plugins/redis-plugin\">redis-plugin</a></td>\n<td>√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">√</td>\n<td align=\"center\">201910</td>\n<td align=\"center\"><a href=\"https://github.com/ElesG\">ElesG</a></td>\n</tr>\n<tr>\n<td><a href=\"/repeater-plugins/hibernate-plugin\">hibernate</a></td>\n<td>√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">√</td>\n<td align=\"center\">201910</td>\n<td align=\"center\"><a href=\"https://github.com/zhaoyb1990\">zhaoyb1990</a></td>\n</tr>\n<tr>\n<td><a href=\"/repeater-plugins/spring-data-jpa-plugin\">spring-data-jpa</a></td>\n<td>√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">√</td>\n<td align=\"center\">201910</td>\n<td align=\"center\"><a href=\"https://github.com/zhaoyb1990\">zhaoyb1990</a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<h2 dir=\"auto\">相关文档</h2>\n<ul dir=\"auto\">\n<li><a href=\"/docs/user-guide-cn.md\">用户使用手册</a></li>\n<li><a href=\"/docs/plugin-development.md\">插件开发手册</a></li>\n</ul>\n<h2 dir=\"auto\">钉钉交流群</h2>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/alibaba/jvm-sandbox-repeater/releases/download/v1.0.0/DingTalkGroup.jpeg\"><img src=\"https://github.com/alibaba/jvm-sandbox-repeater/releases/download/v1.0.0/DingTalkGroup.jpeg\" alt=\"pic\" style=\"max-width: 100%;\"></a></p>","updatedAt":"2025-05-21T16:04:03Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"alibaba","color":"1d8651"}},{"node":{"name":"流量回放","color":"853a1d"}}]},"comments":{"edges":[]}}},"pageContext":{"number":258,"previous":{"title":"jwma/jump-jump: 开箱即用，Golang 开发的一个功能完善的短链接系统","number":257},"next":{"title":"grafana/k6: 一款现代化的负载测试工具，使用 Go 和 JavaScript 实现","number":259}}},
    "staticQueryHashes": ["151096407","2861350382"]}