{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/610",
    "result": {"data":{"issuesJson":{"id":"4d845fcd-9358-5066-a780-cc54f1a7dd32","title":"mylxsw/wizard: 一款开源的文档管理工具，支持 Markdown/Swagger/Table 类型的文档","number":610,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/mylxsw/wizard\">mylxsw/wizard</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/baedb46f557c1c8e7bf5ad87934fb441814ba616e0eb40fcc7929f7c87f8081e/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f6d796c7873772f77697a6172642e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/mylxsw/wizard.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/972fbfd42e23b34aded645a992300a298b7f7ea3fbe243fc15be7af10e2e7f10/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d796c7873772f77697a6172643f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/mylxsw/wizard?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/f24bf0c134c3690103ab71866295c4deba7ed475974792415481e8336b35374c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6d796c7873772f77697a6172643f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/mylxsw/wizard?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/1aa93a4224b60f70ef39cf9c91a97f2293ee6c8344ca7bebed9eeaff54bf01f0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d796c7873772f77697a6172643f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/mylxsw/wizard?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/23e28b75a89fc418952e69b971cea96cd30275afb41767aa87d3edb745e83708/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6d796c7873772f77697a6172643f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/mylxsw/wizard?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/17edfbc2fd29e8fe627ae6e3bf4c5331480cda52bd753330582cc8d9c4130f86/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f6d796c7873772f77697a6172643f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/mylxsw/wizard?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<h1 dir=\"auto\">Wizard 开源文档管理系统</h1>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/ff37c9051f40685081722373b5b1ba6d0b06aab1e21c050765adf532b1075c21/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6d796c7873772f77697a6172642f746f74616c\"><img src=\"https://camo.githubusercontent.com/ff37c9051f40685081722373b5b1ba6d0b06aab1e21c050765adf532b1075c21/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6d796c7873772f77697a6172642f746f74616c\" alt=\"GitHub All Releases\" data-canonical-src=\"https://img.shields.io/github/downloads/mylxsw/wizard/total\" style=\"max-width: 100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/fbb6d13141d946880f8e18072a8e49f636dc13f08628c89a74a338a0b24ceed2/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6d796c7873772f77697a617264\"><img src=\"https://camo.githubusercontent.com/fbb6d13141d946880f8e18072a8e49f636dc13f08628c89a74a338a0b24ceed2/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6d796c7873772f77697a617264\" alt=\"Docker Pulls\" data-canonical-src=\"https://img.shields.io/docker/pulls/mylxsw/wizard\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">概述</h2>\n<p dir=\"auto\">Wizard是一款开源文档管理系统，目前支持三种类型的文档管理</p>\n<ul dir=\"auto\">\n<li><strong>Markdown</strong>：也是Wizard最主要的文档类型，研发团队日常工作中交流所采用的最常用文档类型，在 Wizard 中，对 <a href=\"https://pandao.github.io/editor.md/\" rel=\"nofollow\">Editor.md</a> 项目进行了功能扩展，增加了文档模板，Json 转表格，图片粘贴上传等功能</li>\n<li><strong>Swagger</strong>：支持 <a href=\"https://swagger.io/specification/\" rel=\"nofollow\">OpenAPI 3.0</a> 规范，集成了 Swagger 官方的编辑器，支持文档模板，全屏编辑，文档自动同步功能</li>\n<li><strong>Table</strong>：这种文档类型是类似于 Excel 电子表格，集成了 <a href=\"https://github.com/myliang/x-spreadsheet\">x-spreadsheet</a> 项目</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">在Wizard中，正在编辑的文档会定时自动保存到本地的 Local Storage 中，避免错误关闭页面而造成编辑内容丢失。</p>\n</blockquote>\n<p dir=\"auto\">目前主要包含以下功能</p>\n<ul dir=\"auto\">\n<li>Swagger，Markdown，<a href=\"https://github.com/mylxsw/wizard/wiki/%E8%A1%A8%E6%A0%BC%E7%B1%BB%E5%9E%8B%E6%96%87%E6%A1%A3%E6%94%AF%E6%8C%81\">Table</a> 类型的文档管理</li>\n<li><a href=\"https://github.com/mylxsw/wizard/wiki/%E6%96%87%E6%A1%A3%E5%B7%AE%E5%BC%82%E5%AF%B9%E6%AF%94%E4%BB%A5%E5%8F%8A%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3\">文档修改历史管理</a></li>\n<li><a href=\"https://github.com/mylxsw/wizard/wiki/%E6%96%87%E6%A1%A3%E5%B7%AE%E5%BC%82%E5%AF%B9%E6%AF%94%E4%BB%A5%E5%8F%8A%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3\">文档修改差异对比</a></li>\n<li>用户权限管理</li>\n<li>项目分组管理</li>\n<li>LDAP 统一身份认证</li>\n<li>文档搜索，标签搜索</li>\n<li>阅读模式</li>\n<li>文档评论</li>\n<li>消息通知</li>\n<li>文档分享</li>\n<li>统计功能</li>\n<li><a href=\"https://github.com/mylxsw/wizard/wiki/%E6%B5%81%E7%A8%8B%E5%9B%BE%EF%BC%8C%E5%BA%8F%E5%88%97%E5%9B%BE%EF%BC%8C%E9%A5%BC%E5%9B%BE%EF%BC%8CTex-LaTex-%E7%A7%91%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%94%AF%E6%8C%81\">流程图，序列图，饼图，Tex LaTex 科学公式支持</a></li>\n<li><a href=\"https://github.com/mylxsw/wizard/wiki/%E9%BB%91%E6%9A%97%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2\">多主题切换</a></li>\n</ul>\n<p dir=\"auto\">如果想快速体验一下Wizard的功能，可以使用Docker来创建一个完整的Wizard服务</p>\n<blockquote>\n<p dir=\"auto\">进入项目的根目录，执行 <code class=\"notranslate\">docker-compose up</code>，就可以快速创建一个Wizard服务了，访问地址 <a href=\"http://localhost:8080\" rel=\"nofollow\">http://localhost:8080</a> 。</p>\n</blockquote>\n<h2 dir=\"auto\">起源</h2>\n<p dir=\"auto\">为了鼓励大家在开发过程中写开发文档，最开始我们选择了 <a href=\"https://www.showdoc.cc/\" rel=\"nofollow\">ShowDoc</a> 项目来作为文档管理工具，当时团队规模也非常的小，大家都是直接用 Markdown 写一些简单的开发文档。后来随着团队的壮大，前后端分离，团队分工的细化，仅仅采用 Markdown 开始变得捉襟见肘，这时候，我们首先想到了使用开源界比较流行的 <a href=\"https://swagger.io/\" rel=\"nofollow\">Swagger</a> 来创建开发文档。但是 Swagger 文档多了，总得有个地方维护起来吧？</p>\n<p dir=\"auto\">项目中的文档仅仅用Swagger也是不够的，它只适应于API文档的管理，还有很多其它文档，比如设计构想，流程图，架构文档，技术方案，数据库变更等各种文档需要一起维护起来。因此，我决定利用业余时间开发一款 <strong>集成 Markdown 和 Swagger 文档的管理工具</strong>，也就是 <strong>Wizard</strong> 项目了。</p>\n<p dir=\"auto\">起初Wizard项目的想法比较简单，只是用来将 Markdown 文档和 Swagger 文档放在一起，提供一个简单的管理界面就足够了，但是随着在团队中展开使用后，发现在企业中作为一款文档管理工具来说，只提供简单的文档管理功能是不够的，比如说权限控制，文档修改历史，文档搜索，文档分类等功能需求不断的被提出来，因此也促成了 Wizard 项目的功能越来越完善。</p>\n<ul dir=\"auto\">\n<li><strong>用户权限管理</strong> 参考了 Gitlab 的权限管理方式，在用户的身份上只区分了 <strong>管理员</strong> 和 <strong>普通用户</strong>，通过创建<strong>用户组</strong>来对用户的权限进行细致的管理，同时每个项目都支持单独的为用户赋予读写权限。</li>\n<li><strong>项目分组</strong> 在 Wizard 中，文档是以项目为单位进行组织的，刚开始的时候发现这样是OK的，后来项目越来越多，项目分组功能应运而生，以目录的形式来组织项目结构。</li>\n<li><strong>文档修改历史</strong> 每次对文档的修改，Wizard 都会记录一个快照，避免错误的修改了文档而造成损失，可以通过文档历史快速的恢复文档，对文档的修改，新增，删除等关键操作都会记录审计日志，以最近活动的形式展示出来。</li>\n<li><strong>文档差异对比</strong> 在团队协助中，经常会出现很多人修改同一份文档，为了避免冲突，文档修改后，其它人在提交旧的历史版本时，系统会提示用户文档内容发生了变更，用户可以通过文档比对功能找出文档中有哪些内容发生了修改。</li>\n<li><strong>阅读模式</strong> 当使用投影仪展示文档来过技术方案的时候，为了减少不必要的干扰，使用阅读模式，只展示文档内容部分，提供更好的展示体验。</li>\n<li><strong>文档搜索</strong> 通过搜索功能快速查找需要的文档，目前支持通过文档标题来搜素文档，后续会增加全文检索功能。</li>\n<li><strong>LDAP支持</strong> 很多公司都会使用 LDAP 来统一的管理公司员工的账号，员工的在公司内部的所有系统中都是用同一套帐号来登录各种系统比如 Jira，Wiki，Gitlab 等，Wizard 也提供了对 LDAP 的支持，只需要简单的几个配置，就可以快速的接入公司的统一帐号体系。</li>\n<li><strong>文档附件</strong>，<strong>文档分享</strong>，<strong>统计</strong>，<strong>文档排序</strong>，<strong>模板管理</strong>，<strong>文档评论</strong> ...</li>\n</ul>\n<h2 dir=\"auto\">功能演示</h2>\n<p dir=\"auto\">请查看项目的 <a href=\"https://github.com/mylxsw/wizard/wiki\">Wiki</a> 文档。</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/dc9945e0a96ebf9b21899ba6ed3c6410cd2a387ee2615670597c25a7b14849f8/68747470733a2f2f73736c2e6169636f64652e63632f6d7765622f57697a6172642d2545352538412539462545382538332542442545392541322538342545382541372538382545352539422542452e676966\"><img src=\"https://camo.githubusercontent.com/dc9945e0a96ebf9b21899ba6ed3c6410cd2a387ee2615670597c25a7b14849f8/68747470733a2f2f73736c2e6169636f64652e63632f6d7765622f57697a6172642d2545352538412539462545382538332542442545392541322538342545382541372538382545352539422542452e676966\" alt=\"Wizard-功能预览图\" data-animated-image=\"\" data-canonical-src=\"https://ssl.aicode.cc/mweb/Wizard-%E5%8A%9F%E8%83%BD%E9%A2%84%E8%A7%88%E5%9B%BE.gif\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">关于代码</h2>\n<p dir=\"auto\">项目采用了 Laravel 开发框架开发，目前框架的版本已经升级到最新的 5.8（最开始为5.4，一路升级过来）。为了提高开发效率，保持架构的简洁，在开发过程中，一直避免引入过多的外部组件，尽可能的利用 Laravel 提供的各种组件，比如 <strong>Authentication</strong>，<strong>Authorization</strong>，<strong>Events</strong>，<strong>Mail</strong>，<strong>Notifications</strong> 等，非常适合Laravel新手利用该项目来学习Laravel开发框架。</p>\n<h2 dir=\"auto\">安装</h2>\n<p dir=\"auto\">目前支持两种安装方式，如果你熟悉Docker，可以直接使用Docker容器的方式来运行该项目，这也是最简单的方式了。如果你没有使用Docker或者不知道什么是Docker，那么请直接参考手动安装部分。</p>\n<h3 dir=\"auto\">通过 Docker 安装</h3>\n<p dir=\"auto\">详细安装方法参考 Docker Hub <a href=\"https://hub.docker.com/r/mylxsw/wizard\" rel=\"nofollow\">mylxsw/wizard</a>。</p>\n<h4 dir=\"auto\">方法一</h4>\n<p dir=\"auto\">首先对于新安装用户，需要执行数据库的初始化</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run -it --rm --name wizard \\\n    -e DB_HOST=host.docker.internal \\\n    -e DB_PORT=3306  \\\n    -e DB_DATABASE=wizard  \\\n    -e DB_USERNAME=wizard  \\\n    -e DB_PASSWORD=wizard  \\\n    mylxsw/wizard 初始化命令\"><pre class=\"notranslate\"><code class=\"notranslate\">docker run -it --rm --name wizard \\\n    -e DB_HOST=host.docker.internal \\\n    -e DB_PORT=3306  \\\n    -e DB_DATABASE=wizard  \\\n    -e DB_USERNAME=wizard  \\\n    -e DB_PASSWORD=wizard  \\\n    mylxsw/wizard 初始化命令\n</code></pre></div>\n<p dir=\"auto\">这里的 <strong>初始化命令</strong> 包含两个，依次执行即可</p>\n<ul dir=\"auto\">\n<li>php artisan migrate:install</li>\n<li>php artisan migrate</li>\n</ul>\n<p dir=\"auto\">最后，直接运行下面的 Docker 命令即可</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run -d --name wizard \\\n    -e DB_HOST=host.docker.internal \\\n    -e DB_PORT=3306  \\\n    -e DB_DATABASE=wizard  \\\n    -e DB_USERNAME=wizard  \\\n    -e DB_PASSWORD=wizard  \\\n    -p 8080:80 \\\n    -v /Users/mylxsw/Downloads:/webroot/storage/app/public   \\\n    mylxsw/wizard\"><pre class=\"notranslate\"><code class=\"notranslate\">docker run -d --name wizard \\\n    -e DB_HOST=host.docker.internal \\\n    -e DB_PORT=3306  \\\n    -e DB_DATABASE=wizard  \\\n    -e DB_USERNAME=wizard  \\\n    -e DB_PASSWORD=wizard  \\\n    -p 8080:80 \\\n    -v /Users/mylxsw/Downloads:/webroot/storage/app/public   \\\n    mylxsw/wizard\n</code></pre></div>\n<p dir=\"auto\">简要说明：</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">-e</code> 指定配置，用环境变量的形式覆盖 <code class=\"notranslate\">.env</code> 中的配置</li>\n<li><code class=\"notranslate\">-d</code> 后台模式运行</li>\n<li><code class=\"notranslate\">-p</code> 指定映射容器内的80端口为宿主机的 8080 端口，这样就可以在宿主机上以 <a href=\"http://localhost:8080\" rel=\"nofollow\">http://localhost:8080</a> 的形式访问了</li>\n<li><code class=\"notranslate\">-v</code> 映射数据目录位置，将本地目录映射到文件上传存储目录，避免重启服务时图片等数据丢失</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">在使用 Docker 模式启动后，如果启动后访问页面报错 500，可以在启动命令中添加 <code class=\"notranslate\">-e APP_DEBUG=true</code> 来启用 DEBUG 模式，在访问的时候就可以看到详细的报错信息了。具体参考 <a href=\"https://github.com/mylxsw/wizard/wiki/Docker-%E6%A8%A1%E5%BC%8F%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99-500-%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5\">这里</a></p>\n</blockquote>\n<h4 dir=\"auto\">方法二</h4>\n<p dir=\"auto\">我们需要创建一个Dockerfile，在Dockerfile中添加环境配置，比如我采用了宿主机上安装的MySQL服务器，就有了下面的这段Dockerfile配置</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"FROM mylxsw/wizard:latest\n\n# 数据库连接配置\n# 这里可以根据需要添加其它的Env配置，可用选项参考项目的.env.example文件\nENV DB_CONNECTION=mysql\nENV DB_HOST=host.docker.internal\nENV DB_PORT=3306\nENV DB_DATABASE=wizard_2\nENV DB_USERNAME=wizard\nENV DB_PASSWORD=wizard\nENV WIZARD_NEED_ACTIVATE=false\n# 访问地址，只有正确配置后，导出的 markdown 文档图片才能正常展示\nENV APP_URL=http://localhost:8080\n\n# 文件上传存储目录\nVOLUME /webroot/storage/app/public\n\nRUN php artisan config:cache\"><pre class=\"notranslate\"><code class=\"notranslate\">FROM mylxsw/wizard:latest\n\n# 数据库连接配置\n# 这里可以根据需要添加其它的Env配置，可用选项参考项目的.env.example文件\nENV DB_CONNECTION=mysql\nENV DB_HOST=host.docker.internal\nENV DB_PORT=3306\nENV DB_DATABASE=wizard_2\nENV DB_USERNAME=wizard\nENV DB_PASSWORD=wizard\nENV WIZARD_NEED_ACTIVATE=false\n# 访问地址，只有正确配置后，导出的 markdown 文档图片才能正常展示\nENV APP_URL=http://localhost:8080\n\n# 文件上传存储目录\nVOLUME /webroot/storage/app/public\n\nRUN php artisan config:cache\n</code></pre></div>\n<p dir=\"auto\">执行构建</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker build -t my-wizard .\"><pre class=\"notranslate\"><code class=\"notranslate\">docker build -t my-wizard .\n</code></pre></div>\n<p dir=\"auto\">数据库初始化</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run -it --rm --name my-wizard my-wizard php artisan migrate:install\ndocker run -it --rm --name my-wizard my-wizard php artisan migrate\"><pre class=\"notranslate\"><code class=\"notranslate\">docker run -it --rm --name my-wizard my-wizard php artisan migrate:install\ndocker run -it --rm --name my-wizard my-wizard php artisan migrate\n</code></pre></div>\n<p dir=\"auto\">运行</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run -d --name my-wizard -p 8080:80  my-wizard\"><pre class=\"notranslate\"><code class=\"notranslate\">docker run -d --name my-wizard -p 8080:80  my-wizard\n</code></pre></div>\n<p dir=\"auto\">然后就可以通过 <a href=\"http://localhost:8080\" rel=\"nofollow\">http://localhost:8080</a> 访问 Wizard 了。</p>\n<h3 dir=\"auto\">手动安装</h3>\n<p dir=\"auto\">手动安装方式需要先安装配置好PHP环境，建议采用 PHP-FPM/Nginx 的方式来运行，具体配置参考 环境依赖 部分。</p>\n<h4 dir=\"auto\">环境依赖</h4>\n<p dir=\"auto\">以下组件的安装配置这里就不做详细展开，可以自行 百度/Google 安装方法。</p>\n<ul dir=\"auto\">\n<li>PHP 7.2 + (需要启用以下扩展)\n<ul dir=\"auto\">\n<li>OpenSSL PHP Extension</li>\n<li>PDO PHP Extension</li>\n<li>Mbstring PHP Extension</li>\n<li>Tokenizer PHP Extension</li>\n<li>XML PHP Extension</li>\n<li>Ctype PHP Extension</li>\n<li>JSON PHP Extension</li>\n<li>BCMath PHP Extension</li>\n<li>LDAP PHP Extension</li>\n<li>Zlib PHP Extension （PDF 导出功能需要用到）</li>\n</ul>\n</li>\n<li>composer.phar</li>\n<li>MySQL 5.7 + / MariaDB （需要支持ARCHIVE存储引擎，MariaDB 10.0+ 默认没有启用参考 <strong>FAQ 3</strong>）</li>\n<li>Nginx</li>\n<li>Git</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">PHP 运行环境的创建，可以参考这里 <a href=\"https://gist.github.com/mylxsw/4b7bbe81fb7f59714423f3284c867149\">https://gist.github.com/mylxsw/4b7bbe81fb7f59714423f3284c867149</a></p>\n</blockquote>\n<h4 dir=\"auto\">下载代码</h4>\n<p dir=\"auto\">推荐使用 git 来下载项目代码到服务器，我们假定将该项目放在服务器的 <code class=\"notranslate\">/data/webroot</code> 目录</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cd /data/webroot\ngit clone https://github.com/mylxsw/wizard.git\ncd wizard\"><pre class=\"notranslate\"><code class=\"notranslate\">cd /data/webroot\ngit clone https://github.com/mylxsw/wizard.git\ncd wizard\n</code></pre></div>\n<p dir=\"auto\">下载代码之后，使用 <strong>composer</strong> 安装项目依赖</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"composer install --prefer-dist --ignore-platform-reqs\"><pre class=\"notranslate\"><code class=\"notranslate\">composer install --prefer-dist --ignore-platform-reqs\n</code></pre></div>\n<p dir=\"auto\">composer 会在在项目目录中创建 <strong>vender</strong> 目录，其中包含了项目所依赖的所有第三方代码库。</p>\n<blockquote>\n<p dir=\"auto\">你也可以直接到项目的 <a href=\"https://github.com/mylxsw/wizard/releases\">release</a> 页面直接下载包含依赖的软件包。</p>\n</blockquote>\n<h4 dir=\"auto\">配置</h4>\n<p dir=\"auto\">复制一份配置文件</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cp .env.example .env\"><pre class=\"notranslate\"><code class=\"notranslate\">cp .env.example .env\n</code></pre></div>\n<p dir=\"auto\">修改 <code class=\"notranslate\">.env</code> 中的配置信息，比如 MySQL 连接信息，文件存储目录，项目网址等。</p>\n<p dir=\"auto\">接下来创建数据库，提前在MySQL中创建好项目的数据库，然后在项目目录执行下面的命令</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"php artisan migrate:install\nphp artisan migrate\"><pre class=\"notranslate\"><code class=\"notranslate\">php artisan migrate:install\nphp artisan migrate\n</code></pre></div>\n<p dir=\"auto\">接下来配置文件上传目录</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"php artisan storage:link\"><pre class=\"notranslate\"><code class=\"notranslate\">php artisan storage:link\n</code></pre></div>\n<p dir=\"auto\">执行该命令后会在 public 目录下创建 <code class=\"notranslate\">storage/app/public</code> 目录的符号链接。</p>\n<p dir=\"auto\">在Nginx中配置项目的访问地址</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"server {\n    listen       80;\n    server_name  wizard.example.com;\n    root         /data/webroot/wizard/public;\n    index        index.php;\n\n    location / {\n        index index.php index.html index.htm;\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n    \n    location ~ .*\\.(gif|jpg|png|bmp|swf|js|css)$ {\n        try_files $uri  =302;\n    }\n    \n    location ~ .*\\.php$ {\n        # php-fpm 监听地址，这里用了socket方式\n        fastcgi_pass  unix:/usr/local/php/var/run/php-cgi.sock;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_index index.php;\n        include fastcgi_params;\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">server {\n    listen       80;\n    server_name  wizard.example.com;\n    root         /data/webroot/wizard/public;\n    index        index.php;\n\n    location / {\n        index index.php index.html index.htm;\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n    \n    location ~ .*\\.(gif|jpg|png|bmp|swf|js|css)$ {\n        try_files $uri  =302;\n    }\n    \n    location ~ .*\\.php$ {\n        # php-fpm 监听地址，这里用了socket方式\n        fastcgi_pass  unix:/usr/local/php/var/run/php-cgi.sock;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_index index.php;\n        include fastcgi_params;\n    }\n}\n</code></pre></div>\n<h4 dir=\"auto\">升级</h4>\n<p dir=\"auto\">项目升级过程非常简单，只需要使用git拉取最新代码（git pull），然后执行下面的命令完成数据库迁移和依赖更新就OK了。</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"composer install --prefer-dist --ignore-platform-reqs\nphp artisan migrate\"><pre class=\"notranslate\"><code class=\"notranslate\">composer install --prefer-dist --ignore-platform-reqs\nphp artisan migrate\n</code></pre></div>\n<p dir=\"auto\">如果是用 Docker 部署的话，在重新拉取最新镜像之后，执行下面的命令就可以了</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run -it --rm my-wizard php artisan migrate\"><pre class=\"notranslate\"><code class=\"notranslate\">docker run -it --rm my-wizard php artisan migrate\n</code></pre></div>\n<h3 dir=\"auto\">初始化</h3>\n<p dir=\"auto\">安装完成后，Wizard项目就可以通过浏览器访问了，接下来需要访问注册页面创建初始用户</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"http://项目地址/register\"><pre class=\"notranslate\"><code class=\"notranslate\">http://项目地址/register\n</code></pre></div>\n<p dir=\"auto\">在系统中注册的第一个用户为默认管理员角色。</p>\n<h2 dir=\"auto\">FAQ</h2>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">如果在执行数据库迁移（<code class=\"notranslate\">php artisan migrate</code>）的时候，报错 <code class=\"notranslate\">SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes</code></p>\n<p dir=\"auto\">该错误是因为 MySQL 版本低于 5.7，在低版本的 MySQL 中会出现该问题。解决方案如下，二选一即可</p>\n<ul dir=\"auto\">\n<li>在 <code class=\"notranslate\">.env</code> 文件中添加配置项 <code class=\"notranslate\">DB_CHARSET=utf8</code> 和 <code class=\"notranslate\">DB_COLLATION=utf8_unicode_ci</code>，添加之后再执行 <code class=\"notranslate\">php artisan migrate</code> 命令（缺点是这样就不支持Emoji了）</li>\n<li>升级MySQL到 5.7</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">报错 <code class=\"notranslate\">SQLSTATE[HY000] [2054] The server requested authentication method unknown to the client</code> 和 <code class=\"notranslate\">The server requested authentication method unknown to the client [caching_sha2_password]</code></p>\n<p dir=\"auto\">因为Mariadb版本比较新，对应的MySQL版本在8.0之后也可能会有问题（默认认证方式修改为了<code class=\"notranslate\">caching_sha2_password</code>），解决办法连接到数据库，修改一下密码的认证方式为 <code class=\"notranslate\">mysql_native_password</code>：</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" ALTER USER 'USERNAME'@'HOSTNAME' IDENTIFIED WITH mysql_native_password BY 'PASSWORD';\"><pre class=\"notranslate\"><code class=\"notranslate\"> ALTER USER 'USERNAME'@'HOSTNAME' IDENTIFIED WITH mysql_native_password BY 'PASSWORD';\n</code></pre></div>\n<blockquote>\n<p dir=\"auto\">参考 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html\" rel=\"nofollow\">Caching SHA-2 Pluggable Authentication</a></p>\n</blockquote>\n</li>\n<li>\n<p dir=\"auto\">数据库使用 Mariadb 10.0+ 版本时，执行数据库迁移报错 <code class=\"notranslate\">Unknown storage engine 'ARCHIVE'</code></p>\n<p dir=\"auto\">操作日志存储用到了 <strong>ARCHIVE</strong> 存储引擎，Mariadb 10.0 版本之后默认是没有安装这个存储引擎的</p>\n<blockquote>\n<p dir=\"auto\">The ARCHIVE storage engine was installed by default until MariaDB 10.0. In MariaDB 10.1 and later, the storage engine's plugin will have to be installed.</p>\n</blockquote>\n<p dir=\"auto\">所以解决方案有下面这两种（<strong>推荐第一种</strong>）</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">最简单的方式时在Mariadb中安装这个插件，只需要连接到Mariadb之后执行 <code class=\"notranslate\">INSTALL SONAME 'ha_archive';</code> 命令就可以了，<strong>不需要</strong> 重启数据库</p>\n</li>\n<li>\n<p dir=\"auto\">第二种办法时不安装 <strong>ARCHIVE</strong> 存储引擎，修改 <code class=\"notranslate\">$WIZARD_HOME/database/migrations/2017_08_03_232417_create_operation_logs_table.php</code> 文件的第 17 行，将<code class=\"notranslate\">$table-&gt;engine = 'ARCHIVE';</code> 注释掉（完成迁移之后记得改回去，避免以后使用 <code class=\"notranslate\">git pull</code> 来升级系统产生冲突）</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" Schema::create('wz_operation_logs', function (Blueprint $table) {\n-$table-&gt;engine = 'ARCHIVE';\n+// $table-&gt;engine = 'ARCHIVE';\n \n $table-&gt;increments('id');\"><pre class=\"notranslate\"> Schema::create('wz_operation_logs', function (Blueprint $table) {\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>$table-&gt;engine = 'ARCHIVE';</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>// $table-&gt;engine = 'ARCHIVE';</span>\n \n $table-&gt;increments('id');</pre></div>\n</li>\n</ol>\n</li>\n<li>\n<p dir=\"auto\">默认上传文件大小限制为 2M，这个限制并不是 Wizard 自身的限制，而是运行环境的限制，如何提高上传文件大小限制呢？</p>\n<p dir=\"auto\">首先需要修改 PHP 的配置文件 <code class=\"notranslate\">php.ini</code>，修改以下两行</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"; 上传文件大小限制\nupload_max_filesize = 100M\n; 表单提交大小限制，必须大于 upload_max_filesize，或者可以设置为 0，不做任何限制\npost_max_size = 0\"><pre class=\"notranslate\"><code class=\"notranslate\">; 上传文件大小限制\nupload_max_filesize = 100M\n; 表单提交大小限制，必须大于 upload_max_filesize，或者可以设置为 0，不做任何限制\npost_max_size = 0\n</code></pre></div>\n<p dir=\"auto\">然后，根据 web 服务器的不同进行修改</p>\n<ul dir=\"auto\">\n<li><strong>nginx</strong>： 在 nginx 配置中添加 <code class=\"notranslate\">client_max_body_size 120M;</code> 来指定最大 body 大小，可以参考 <code class=\"notranslate\">docker-compose/nginx.conf</code> 的配置</li>\n<li><strong>apache</strong>：修改 Wizard 目录 <code class=\"notranslate\">public/.htaccess</code> 文件中 <code class=\"notranslate\">LimitRequestBody 0</code> 选项的值即可，默认为0表示不限制（默认已经修改过）</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">导出 Markdown 文档后，图片地址错误，无法显示图片</p>\n<p dir=\"auto\">需要配置 <code class=\"notranslate\">APP_URL</code> 环境变量参数，在 <code class=\"notranslate\">.env</code> 文件中，修改 <code class=\"notranslate\">APP_URL</code> 地址为当前访问 URL 地址即可。</p>\n</li>\n<li>\n<p dir=\"auto\">服务启动后，访问页面报错 500，没有具体错误信息，无法顺利排查问题</p>\n<p dir=\"auto\">最简单的办法是可以通过查看错误日志来排查问题，日志文件在 <code class=\"notranslate\">storage/logs/</code> 目录。如果不够直观，可以在 <code class=\"notranslate\">.env</code> 配置文件中修改 <code class=\"notranslate\">APP_DEBUG=true</code> 来启用调试模式，在访问页面就会展示具体报错信息了。在 Docker 环境中，可以在启动命令中添加 <code class=\"notranslate\">-e APP_DEBUG=true</code> 来启用 DEBUG 模式。</p>\n</li>\n</ol>\n<h2 dir=\"auto\">Stargazers over time</h2>\n<p dir=\"auto\"><a href=\"https://starchart.cc/mylxsw/wizard\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/083f2da254e3e57afc4ccfa015a0741cd52555856961b1f7dea9e1dbcbd992f6/68747470733a2f2f7374617263686172742e63632f6d796c7873772f77697a6172642e737667\" alt=\"Stargazers over time\" data-canonical-src=\"https://starchart.cc/mylxsw/wizard.svg\" style=\"max-width: 100%;\"></a></p>","updatedAt":"2025-05-22T01:53:21Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"Wiki-Server","color":"e525f8"}},{"node":{"name":"mylxsw","color":"673ad9"}}]},"comments":{"edges":[]}}},"pageContext":{"number":610,"previous":{"title":"kingToolbox/WindTerm: 免费的终端工具，SSH、Telnet、TCP、Shell、串行，支持多平台","number":609},"next":{"title":"woodpecker-ci/woodpecker: 一个简单而强大具有很强的可扩展性的 CI/CD 引擎","number":611}}},
    "staticQueryHashes": ["151096407","2861350382"]}