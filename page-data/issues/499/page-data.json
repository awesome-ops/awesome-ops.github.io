{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/499",
    "result": {"data":{"issuesJson":{"id":"fbee3b2a-2071-5e0f-b563-1a2ee2c736cd","title":"sqshq/sampler: Sampler 是一个用于 shell 命令执行、可视化和警报的工具。使用简单的 YAML 文件进行配置。","number":499,"bodyHTML":"<div align=\"center\" dir=\"auto\">\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a><br><br></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th align=\"right\">Repos</th>\n<th align=\"left\"><a href=\"https://github.com/sqshq/sampler\">sqshq/sampler</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Views</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/4606d7771f5c450f308d03001e8a98bebc740e0265688dabbda4fdf38c04dd66/68747470733a2f2f76696577732e77686174696c656172656e65642e746f6461792f76696577732f6769746875622f73717368712f73616d706c65722e737667\" alt=\"views\" data-canonical-src=\"https://views.whatilearened.today/views/github/sqshq/sampler.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Stars</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/ba88b11f6f6c48523dda370ce3ef83e720d22b079a28f12b48c5c0167b2d779a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73717368712f73616d706c65723f636f6c6f723d663266303864266c6f676f3d556e64657274616c65266c6f676f436f6c6f723d656234363330\" alt=\"stars\" data-canonical-src=\"https://img.shields.io/github/stars/sqshq/sampler?color=f2f08d&amp;logo=Undertale&amp;logoColor=eb4630\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>Forks</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/2b445821bfe278af55260c3c6402bc867a02272c05a18d9bced9de1ec7229a6a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73717368712f73616d706c65723f636f6c6f723d626138366562266c6f676f3d48616e647368616b65266c6f676f436f6c6f723d656136616136\" alt=\"forks\" data-canonical-src=\"https://img.shields.io/github/forks/sqshq/sampler?color=ba86eb&amp;logo=Handshake&amp;logoColor=ea6aa6\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>License</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b2ba8e1fd5e4ef40fd98a687aa4d9e1a72258e98f28a3950115d6347d6827a27/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f73717368712f73616d706c65723f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e53556845556741414144414141414177434159414141425841766d48414141414358424957584d41414173544141414c457745416d70775941414144336b6c45515652346e4f335953557a5555426748384a726f57567255474a66456d3773584e63534446784d544c327069347348456778654e526f77586770455742445552522532424e414e4f4b4f4b36366f6f4b4a4742586545475263574163455646475152484677516d483525324630774861655748493944554455354c356b6e6568644f62377a66652532423139636e434a47495243516945596c514237594a4979474c38616f73756c565a36695246516a69474b6b7564576735614c6c704f70704e586e665071773555304459524a6d56786a4367464633424c755a476d416f5655694b4541726d583744375553677351706f72674761336748664b34483663754262435644334771683141352532424c6745253242467749656e514d306a6f446f66714c6f48564e7742796d384370546e416d327a51713073676478624964515a556c416b7150415a3664676a303541446f59526f6f66792532466f5869726f376b3551586a4c6f70677a4b69514e6c4c4461716f4967754577426a7a7150355066446a45394479495879493633464d547751464d43567271774e61763451666f52673538514625324266724d485172454b3844546f434d714e4179574e4866786d54526f4c4f726d5352566747744466714345715a4f4851727a6f34706243557341333431365169364551394b476a6345465267484f724f4b6e5536574162396247455459656b4b7843766a546167394534706a653534446b3551503862624d4859762532464333756541654a6b50304f4778422532424a70426e4172595238455951516e6f4e31414e4661426e5050356c385372736559514c303641646b30464a5938484f5761424d6c6541486a683068506f73497a6c6f3876304125324633345a694f6548726130714b52504d5653493774762532423932747725324676687855654252713456454c674d376642714b354770526d6f514c584e7075625475367a6f4e52706754386e5051627138347764253246494375767978694b4871694e41664933774d367549684271476b4c696977414f734b44714f68743749747239567938536a52424557667941627225324668523142667056514664484a42253246423268683778376a36517077435665655951326b72554235436c636a3641326d3067576a25324244306d4c34397a573563517943484c4e37726a6c6d6d6174457958582532464372547a412532466f51785a6b576c39474a5443566f25324279546a3837253242346769504b6376307149486f344156344430565a727251493334706e70524d36357875652532467a417265453425324654253246536f676c664542794d7369517441546c4c3352414a355948725378365a44665337307337754d486842705225324659423573305057366f455270316236253246667252684b3353444c35546965364f515548516c5133735644752532427a50636b397657453973747225324236496a533967486d5750616861444a25324277434b364e494242587348423948796b587378774470686c436d416476706c6162554a4e6e5a504239342532464e7436784f6538587a4562503257684d335741673147756236744825324233513150673337365239713475716c6e6f36676448476a444f5139306562303141484d3672596975554a314f713472344656756a35765239427a4d3957674e764f7977446869495951467667626366774166774d764863615067425041253246447948476a50624e394138616d6562636477416444354e6633373574787165774e5552656f797677424958594c645170576c6877465771745061435044334173467541535636717171496c62304a766b564331464c39576b4c55556c55574b337a585a4c46432532423125324642726f46746f364f7358497545594a5034447a7a5732594656316f4a614141414141456c46546b5375516d4343\" alt=\"license\" data-canonical-src=\"https://img.shields.io/github/license/sqshq/sampler?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAD3klEQVR4nO3YSUzUUBgH8JroWVrUGJfEm7sXNcSDFxMTL2pi4sHEgxeNRowXgpEWBDURR%2BNANOKOK66ooKJGBXeEGRcWAcEVFGQRHFwQmH5%2F0wHaeWHI9DUDU5L5knehdOb7zfe%2B19cnCJGIRCQiEYlQB7YJIyGL8aosulVZ6iRFQjiGKkudWg5aLlpOppNXnfPqw5U0DYRJmVxjCgFF3BLuZGmAoVUiKEArmX7D7USgsQporgGa3gHfK4H6cuBbCVD3Gqh1A5%2BLgE%2BFwIenQM0joDofqLoHVNwBym8CpTnAm2zQq0sgdxbIdQZUlAkqPAZ6dgj05ADoYRoofy%2FoXiro7k5QXjLopgzKiQNlLDaqoIguEwBjzqP5PfDjE9DyIXyI63FMTwQFMCVrqwNav4QfoRg58QF%2BfrMHQrEK8DToCMqNAyWNHfxmTRoLOrmSRVgGtDfqCEqZOHQrzo4pbCUsA3416Qi6EQ9KGjcEFRgHOrOKnU6WAb9bGETYekKxCvjTag9E4pje54Dk5QP8bbMHYv%2FC3ueAeJkP0OGxB%2BJpBnArYR8EYQQnoN1ANFaBnPP5l8SrseYQL06Adk0FJY8HOWaBMleAHjh0hPosIzlo8v0A%2F34ZiOeHra0qKRPMVSI7tv%2B92tw%2FvhxUeBRq4VELgM7fBqK5GpRmoQLXNpubTu6zoNRpgT8nPQbq84wd%2FICuvyxiKHqiNAfI3wM6uIhBqGkLiiwAOsKDqOht7Itr9Vy8SjRBEWfyAbr%2FhR1BfpVQFdHJB%2FB2hh7x7j6QpwCVeeYQ2krUB5Clcj6A2m0gWj%2BD0mL49zW5cQyCHLN7rjlmmatEyXX%2FCrTzA%2FoQxZkWl9GJTCVo%2ByTj87%2B4giPKcv0qIHo4AV4D0VZrrQI34pnpRM65xue%2FzAreE4%2FT%2FSoglfEByMsiQtATlL3RAJ5YHrSx6ZDfS70s7uMHhBpR%2FYB5s0PW6oERp1b6%2FfrRhK3SDL5Tie6OQUHQlQ3sVDu%2BzPck9vWE9str%2B6IjS9gHmWPahaDJ%2BwCK6NIBBXsHB9HykXsxwDphlCmAdvplabUJNnZPB94%2FNt6xOe8XzEbP2WhM3WAg1Gub6tH%2B3Q1Pg376R9q4uqlno6gdHGjDOQ90eb01AHM6rYiuUJ1Oq4r4FVuj5vR9BzM9WgNvOywDhiIYQFvgbcfwAfwMvHcaPgBPA%2FDyHGjPbN9A8amebcdwAdD5Nf375txqewNUReoyvwBIXYLdQpWlhwFWqtPaCPD3AsFuASV6qqqIlb0JvkVC1FL9WkLUUlUWK3zXZLFC%2B1%2FBroFto6OsXIuEYJP4DzzW2YFV1oJaAAAAAElFTkSuQmCC\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>UpdatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/97cae5df2ef5eae69f2c37c0d80d69991a627bf327e34ae3c25e178b29eedbb1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f73717368712f73616d706c65723f646973706c61795f74696d657374616d703d636f6d6d6974746572266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d557064617465644174\" alt=\"last-commit\" data-canonical-src=\"https://img.shields.io/github/last-commit/sqshq/sampler?display_timestamp=committer&amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=UpdatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td align=\"right\"><strong>CreatedAt</strong></td>\n<td align=\"left\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/a50ed2b81ade543bd1d30f12a2f0697d2e70eadf34174cf9d6c9c5c202a2e040/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f637265617465642d61742f73717368712f73616d706c65723f6c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414234414141416543415941414141374d4b3669414141414358424957584d41414173544141414c457745416d7077594141414648556c45515652346e4c5658375539615678776d3236646c582532466468627825324232253246516e626b7655627264554151674a4a496655444e574454546d4f76314651554661504a346b7573725630314a7431734e70637453327533626f745a746d786439744a5346536f714b71494635625944464c436f76436c656673747a4a387758524c445a4c7a6e6b634f343535376e3364332532466e655a3472454f515a74315771462532423858467234253242664f4c4565326a6f59307a776638546f795a50766a45676b4c592532426b306d6d72584f36644b696e787a476b30666a5430782532425279723055716e6359637a4d317263347451253242497270324c4758646f344e4334567657715453373277716c632532427231334f527269364b6458646e624f484c6c776c7a4a70524b6e3657342532424b36706f4f434e6e494166486a253246253242776168495a4234764b6e715a6630714a704e49716c2532467638545530634e6c3572627963337730516e54703379324c54614a374d314e617844723266526e315370504736476961323174664533345463614f617931694d55564f5146624659714957536f31573854694156616e43306576584f4542375770313448466232327a453566714c4f433545524c515769644e614e49347545636339693768634a6c644868324e57725135674464624f6c7061756d49754c62326174415144506e7a3062384e6257636d785656524a33486d7870536377777a4f4a6d4b44524765384c6c435a444c4739673754496e5631516c376462586256316533675430574b697243466f6d6b5079767758466c5a474a4f6a563625324253743634757564445a4f55354555636f782532464d455144567674364d62634e3237593341797a687633737061557242365a3971724a534f3139657a6a387032704c426b4a792532426343484a7857493567573574636652527a31645531394766476b6f7539505a4f34736d52396a4746777065783444793362766e6d4b79706f74625531335669646a71595a68726a343972764d457425324625324659714c7a396430304e6a57253246637a67796f394f35317a7336614e6c6f354644747530445a675146686c47584a30644241446f4e6864367576703657686f617967374e394c564748386d443462253246486e667455516f4e4734764c51306769784d716c5725324234714f6a744e48446733723166365969525347785279375576714c62395534716b716e78504f4e7661356c447048723125324279794b524e4b57425a793565644d554842326d3572792532422532424551772532427a6766347a6f39253246306f634e3357527a4c4277344a2532424a7950574372716d4967475974554f735744346f785a46516f50556a4770564871493425324661666b51504336665a5165654d31253242764c7549516e6a754257514444437363726d485039656f4e5041744271664f6e5875614b25324268364a45624772732532427076764d6d78654962683836336162565065597953456f39464a48704e4d464a59253242503563575a6b6667374f3174537759436553514c54593345385130392532464256504a556c78516a7368543142736343593032723955445542667643484236367063665041336c794165336e6772332532463437584467614a7a736c7937787741364e5a746c555550437541487161536a5549502532427375653842525741432532464e6651374a5a505a35397330476a3756747049537a34685125324243706658474d4b685a63764c70554b7866574d386f68766637702532464f446a4842666356463849736b383267314648796b63564645253242555a414158343761452532464d6c34504f3530506e75683025324678346e6d637957507364774468427836436d6b4c562532466746446a594b784f4a4f4674623077517949684c39527943774b33414f664947703159464542686e4d4a634c525745624b644b516f55366e63545a6b494544696341792532463831645675454d3552775066657934784f7830496b25324649324e6e466b692532425761664f6f464959466367595a43797864376543556a626334416d46363566742532466b4d686b336f25324235686337734d4a79716a4a45477659466151464972375930775077384246415925324236253242766d6b3377367a7a5275444d6d5a5652736668385274413075455453443775434254364459514e36697665553066706b594c6a453671725672744f78654e4b553954484c5a4a396b4255324a427342685635416976422532466f4b61514e4b675043427744596149665a4334616454684f71463457454e56694c4a77566f586f62664c424b56773637414f6154734c6336355461564b32317651344c613939654b6359673576627873624f627a5451394e37554b4467554f3177446a6944494942736868357a746733396e514d4c535a4248344f7a424f55444551586d323036643366634c67737762585141345068634b336e6873775531427a3877765130395248472532466f597933656a6677424e6d746f59714c4130586741414141424a52553545726b4a676767253344253344266c6162656c3d437265617465644174\" alt=\"create-at\" data-canonical-src=\"https://img.shields.io/github/created-at/sqshq/sampler?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFHUlEQVR4nLVX7U9aVxwm26dlX%2Fdhbx%2B2%2FQnbkvUbrdUAQgJJIfUDNWDTTmOv1FQUFaPJ4kusrV01Jt1sNpctS2u3botZtmxd9tJSFSoqKqIF5bYDFLCovClefstzJ8wXRLDZLznkcO4557n3d3%2FneZ4rEOQZt1WqF%2B8XFr4%2BfOLEe2joY0zwf8ToyZPvjEgkLY%2Bk0mmrXO6dKinxzGk0fjT0x%2BRyr0UqncYczM1rc4tQ%2BIrp2LGXdo4NC4VvWqTS72wqlc%2Br13ORri6KdXdnbOHLlwlzJpRKn6W4%2BK6poOCNnIAfHj%2F%2BwahIZB4vKnqZf0qJpNIql%2Fv8TU0cNl5rbyc3w0QnTp3y2LTaJ7M1NaxDr2fRn1SpPG6Gia21tfE34TcaOay1iMUVOQFbFYqIWSo1W8TiAVanC0evXOEB7Wp14HFb22zE5fqLOC5ERLQWidNaNI4uEcc9i7hcJldHh2NWrQ5gDdbOlpaumIuLb2atAQDPnz0b8NbWcmxVVRJ3HmxpScwwzOJmKDRGe8LlCZDLG9g7TInV1Ql7dbXbV1e3gT0WKirCFomkPyvwXFlZGJOjV6%2BSt64uudDZOU5EUcox%2FMEQDVvt6MbcN27Y3Ayzhv3spaUrB6Z9qrJSO19ezj8p2pLBkJy%2BcCHJxWI5gW5tcfRRz1dU19GfGkou9PZO4smR9jGFwpex4Dy3bvnmKypotbU13VidjqYZhrj49rvMEt%2F%2FYqLz9d00NjW%2Fczgyo9O51zs6aNlo5FDtu0DZgQFhlGXJ0dBADoNhd6uvp6Whoayg7N9LVGH8mD4b%2FHnftUQoNG4vLQ0gixMqlW%2B4qOjtNHDg3r1f6YiRSGxRy7UvqLb9U4qkqnxPONva5lDpHr1%2ByyKRNKWBZy5edMUHB2m5ry%2B%2BEQw%2Bzgf4zo9%2F0ocN3WRzLBw4J%2BJyPWCrqmIgGYtUOsWD4oxZFQoPUjGpVHqI4%2FafkQPC6fZQeeM1%2BvLuIQnjuBWQDDCscrmHP9eoNPAtBqfOnXuaK%2Bh6JEbGrs%2BpvvMmxeIbh863abVPeYySEo9FJHpNMFJY%2BP5cWZkfg7O1tSwYCeSQLTY3E8Q09%2FBVPJUlxQjshT1BscCY02r9UDUBfvCHB66pcfPA3lyAe3ngr3%2F47XDgaJzsly7xwA6NZtlUUPCuAHqaSjUIP%2Bsue8BRWAC%2FNfQ7JZPZ59s0Gj7VtpISz4hQ%2BCpfXGMKhZcvLpUKxfWM8ohvf7p%2FODjHBfcVF8Isk82g1FHykcVFE%2BUZAAX47aE%2FMl4PO50Pnuh0%2Fx4nmcyWPsdwDhBx6CmkLV%2FgFDjYKxOJOFtb0wQyIhL9RyCwK3AOfIGp1YFEBhnMJcLRWEbKdKQoU6ncTZkIEDicAy%2F81dVuEM5RwPfey4xOx0Ik%2FI2NnFki%2BWafOoFIYFcgYZCyxd7eCUjbc4AmF65ft%2FkMhk3o%2B5hc7sMJyqjJEGvYFaQFIr7Y0wPw8BFAY%2B6%2Bvmk3w6zzRuDMmZVRsfh8RtA0uETSD7uCBT6DYQN6iveU0fpkYLjE6qrVrtOxeNKU9THLZJ9kBU2JBsBhV5AivB%2FoKaQNKgPCBwDYaIfZC4adThOqF4WENViLJwVoXobfLBKVw67AOaTsLc65TaVK21vQ4La99eKcYg5vbxsbObzTQ9N7UKDgUO1wDjiDIIBshh5ztg39nQMLSZBH4OzBOUDEQXm206d3fcLgswbXQA4PhcK3nhswU1Bz8wvQ09RHG%2FoYy3ejfwBNmtoYqLA0XgAAAABJRU5ErkJggg%3D%3D&amp;label=CreatedAt\" style=\"max-width: 100%;\"></a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<a href=\"https://github.com/opsre/awesome-ops\">\n</a><p dir=\"auto\"><a href=\"https://github.com/opsre/awesome-ops\"><img src=\"https://camo.githubusercontent.com/b964a36ea4078c39f603d46a29436371c7541a2f26e0228d7b21b9d9805b43d3/68747470733a2f2f736f6369616c6966792e6769742e63692f6f707372652f617765736f6d652d6f70732f696d6167653f6465736372697074696f6e3d3126666f6e743d42697474657226666f726b733d31266973737565733d31266c616e67756167653d31266c6f676f3d6874747073253341253246253246617661746172732e67697468756275736572636f6e74656e742e636f6d25324675253246313838353638303230266e616d653d31266f776e65723d31267061747465726e3d436972637569742b426f6172642670756c6c733d31267374617267617a6572733d31267468656d653d4c69676874\" alt=\"\" data-canonical-src=\"https://socialify.git.ci/opsre/awesome-ops/image?description=1&amp;font=Bitter&amp;forks=1&amp;issues=1&amp;language=1&amp;logo=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F188568020&amp;name=1&amp;owner=1&amp;pattern=Circuit+Board&amp;pulls=1&amp;stargazers=1&amp;theme=Light\" style=\"max-width: 100%;\"></a></p>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\"><img src=\"https://camo.githubusercontent.com/a15b413168923d02e21292705ceaf86b92675f98e250c5c896a02ba7504a6eae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f657279616a662f7475406d61696e2f696d672f696d6167655f32303234303432305f3231343430382e676966\" width=\"100%\" height=\"3\" data-animated-image=\"\" data-canonical-src=\"https://cdn.jsdelivr.net/gh/eryajf/tu@main/img/image_20240420_214408.gif\" style=\"max-width: 100%; height: auto; max-height: 3px;\"></a>\n</div>\n<h1 dir=\"auto\">Sampler. Visualization for any shell command.</h1>\n<p dir=\"auto\"><a href=\"https://travis-ci.com/sqshq/sampler\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/14b1dfff4a05395338f4d743631693c88a1af072d86c16238631ac41c5db6e78/68747470733a2f2f7472617669732d63692e636f6d2f73717368712f73616d706c65722e7376673f746f6b656e3d4c6479526878786a44466e417a31624a67386671266272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.com/sqshq/sampler.svg?token=LdyRhxxjDFnAz1bJg8fq&amp;branch=master\" style=\"max-width: 100%;\"></a> <a href=\"https://goreportcard.com/report/github.com/sqshq/sampler\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/6f8cadc449d81842401c6c8c875ff16347f423cb131d079960e40d4705a3b34a/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f73717368712f73616d706c6572\" alt=\"Go Report Card\" data-canonical-src=\"https://goreportcard.com/badge/github.com/sqshq/sampler\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Sampler is a tool for shell commands execution, visualization and alerting. Configured with a simple YAML file.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/56404396-70b14d00-6234-11e9-93cd-54461bf40c96.gif\"><img src=\"https://user-images.githubusercontent.com/6069066/56404396-70b14d00-6234-11e9-93cd-54461bf40c96.gif\" alt=\"sampler\" data-animated-image=\"\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Why do I need it?</h2>\n<p dir=\"auto\">One can sample any dynamic process right from the terminal — observe changes in the database, monitor MQ in-flight messages,  trigger a deployment script and get notification when it's done.</p>\n<p dir=\"auto\">If there is a way to get a metric using a shell command, then it can be visualized with Sampler momentarily.</p>\n<h2 dir=\"auto\">Installation</h2>\n<h3 dir=\"auto\">macOS</h3>\n<p dir=\"auto\"><a href=\"https://brew.sh\" rel=\"nofollow\">HomeBrew</a>:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"brew install sampler\"><pre class=\"notranslate\">brew install sampler</pre></div>\n<p dir=\"auto\"><a href=\"https://www.macports.org\" rel=\"nofollow\">MacPorts</a>:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sudo port install sampler\"><pre class=\"notranslate\">sudo port install sampler</pre></div>\n<p dir=\"auto\">or</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sudo curl -Lo /usr/local/bin/sampler https://github.com/sqshq/sampler/releases/download/v1.1.0/sampler-1.1.0-darwin-amd64\nsudo chmod +x /usr/local/bin/sampler\"><pre class=\"notranslate\">sudo curl -Lo /usr/local/bin/sampler https://github.com/sqshq/sampler/releases/download/v1.1.0/sampler-1.1.0-darwin-amd64\nsudo chmod +x /usr/local/bin/sampler</pre></div>\n<h3 dir=\"auto\">Linux</h3>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sudo wget https://github.com/sqshq/sampler/releases/download/v1.1.0/sampler-1.1.0-linux-amd64 -O /usr/local/bin/sampler\nsudo chmod +x /usr/local/bin/sampler\"><pre class=\"notranslate\">sudo wget https://github.com/sqshq/sampler/releases/download/v1.1.0/sampler-1.1.0-linux-amd64 -O /usr/local/bin/sampler\nsudo chmod +x /usr/local/bin/sampler</pre></div>\n<p dir=\"auto\">Note: <code class=\"notranslate\">libasound2-dev</code> system library is required to be installed for Sampler to play a <a href=\"https://github.com/sqshq/sampler#triggers\">trigger</a> sound tone. Usually the library is in place, but if not - you can install it with your favorite package manager, e.g <code class=\"notranslate\">apt install libasound2-dev</code></p>\n<h4 dir=\"auto\">Packaging status</h4>\n<ul dir=\"auto\">\n<li><a href=\"https://apps.fedoraproject.org/packages/golang-github-sqshq-sampler\" rel=\"nofollow\">Fedora</a> <code class=\"notranslate\">sudo dnf install golang-github-sqshq-sampler</code> (F31+)</li>\n<li><a href=\"https://aur.archlinux.org/packages/sampler\" rel=\"nofollow\">Arch</a> <code class=\"notranslate\">yay -S sampler</code></li>\n</ul>\n<h3 dir=\"auto\">Windows (experimental)</h3>\n<p dir=\"auto\">Recommended to use with advanced console emulators, e.g. <a href=\"https://cmder.app/\" rel=\"nofollow\">Cmder</a></p>\n<p dir=\"auto\">Via <a href=\"https://chocolatey.org/docs\" rel=\"nofollow\">Chocolatey</a></p>\n<div class=\"highlight highlight-source-powershell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"choco install sampler\"><pre class=\"notranslate\">choco install sampler</pre></div>\n<p dir=\"auto\">or</p>\n<p dir=\"auto\"><a href=\"https://github.com/sqshq/sampler/releases/download/v1.1.0/sampler-1.1.0-windows-amd64.exe\">Download .exe</a></p>\n<h3 dir=\"auto\">Docker</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Create a configuration file\nvim config.yml\n\n# Build the container image\ndocker build --tag sampler .\n\n# Run a container\ndocker run --interactive --tty --volume $(pwd)/config.yml:/root/config.yml sampler --config /root/config.yml\"><pre class=\"notranslate\"><code class=\"notranslate\"># Create a configuration file\nvim config.yml\n\n# Build the container image\ndocker build --tag sampler .\n\n# Run a container\ndocker run --interactive --tty --volume $(pwd)/config.yml:/root/config.yml sampler --config /root/config.yml\n</code></pre></div>\n<h2 dir=\"auto\">Usage</h2>\n<p dir=\"auto\">You specify shell commands, Sampler executes them with a required rate. The output is used for visualization.</p>\n<p dir=\"auto\">Using Sampler is basically a 3-step process:</p>\n<ul dir=\"auto\">\n<li>Define your shell commands in a YAML configuration file</li>\n<li>Run <code class=\"notranslate\">sampler -c config.yml</code></li>\n<li>Adjust components size and location on UI</li>\n</ul>\n<h2 dir=\"auto\">But there are so many monitoring systems already</h2>\n<p dir=\"auto\">Sampler is by no means an alternative to full-scale monitoring systems, but rather an easy to setup development tool.</p>\n<p dir=\"auto\">If spinning up and configuring <a href=\"https://prometheus.io\" rel=\"nofollow\">Prometheus with Grafana</a> is complete overkill for you task, Sampler might be the right solution. No servers, no databases, no deploy - you specify shell commands, and it just works.</p>\n<h2 dir=\"auto\">Then it should be installed on every server I monitor?</h2>\n<p dir=\"auto\">No, you can run Sampler on local, but still gather telemetry from multiple remote machines. Any visualization might have <code class=\"notranslate\">init</code> command, where you can ssh to a remote server. See the <a href=\"https://github.com/sqshq/sampler#ssh\">SSH example</a></p>\n<h2 dir=\"auto\">Contents</h2>\n<ul dir=\"auto\">\n<li><a href=\"#components\">Components</a>\n<ul dir=\"auto\">\n<li><a href=\"#runchart\">Runchart</a></li>\n<li><a href=\"#sparkline\">Sparkline</a></li>\n<li><a href=\"#barchart\">Barchart</a></li>\n<li><a href=\"#gauge\">Gauge</a></li>\n<li><a href=\"#textbox\">Textbox</a></li>\n<li><a href=\"#asciibox\">Asciibox</a></li>\n</ul>\n</li>\n<li><a href=\"#bells-and-whistles\">Bells and whistles</a>\n<ul dir=\"auto\">\n<li><a href=\"#triggers\">Triggers (conditional actions)</a></li>\n<li><a href=\"#interactive-shell-support\">Interactive shell (database interaction, remote server access, etc)</a></li>\n<li><a href=\"#variables\">Variables</a></li>\n<li><a href=\"#color-theme\">Color theme</a></li>\n</ul>\n</li>\n<li><a href=\"#real-world-recipes\">Real-world recipes (contributions welcome!)</a>\n<ul dir=\"auto\">\n<li><a href=\"#databases\">Databases (MySQL, PostgreSQL, MongoDB, Neo4j)</a></li>\n<li><a href=\"#kafka\">Kafka</a></li>\n<li><a href=\"#docker\">Docker</a></li>\n<li><a href=\"#ssh\">SSH</a></li>\n<li><a href=\"#jmx\">JMX</a></li>\n</ul>\n</li>\n</ul>\n<h2 dir=\"auto\">Components</h2>\n<p dir=\"auto\">The following is a list of configuration examples for each component type, with macOS compatible sampling scripts.</p>\n<h3 dir=\"auto\">Runchart</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/59168666-aff96d00-8b04-11e9-99b6-34d8bae37bd2.png\"><img src=\"https://user-images.githubusercontent.com/6069066/59168666-aff96d00-8b04-11e9-99b6-34d8bae37bd2.png\" alt=\"runchart\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"runcharts:\n  - title: Search engine response time\n    rate-ms: 500        # sampling rate, default = 1000\n    scale: 2            # number of digits after sample decimal point, default = 1\n    legend:\n      enabled: true     # enables item labels, default = true\n      details: false    # enables item statistics: cur/min/max/dlt values, default = true\n    items:\n      - label: GOOGLE\n        sample: curl -o /dev/null -s -w '%{time_total}'  https://www.google.com\n        color: 178      # 8-bit color number, default one is chosen from a pre-defined palette\n      - label: YAHOO\n        sample: curl -o /dev/null -s -w '%{time_total}'  https://search.yahoo.com\n      - label: BING\n        sample: curl -o /dev/null -s -w '%{time_total}'  https://www.bing.com\"><pre class=\"notranslate\"><span class=\"pl-ent\">runcharts</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Search engine response time</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">500</span>        <span class=\"pl-c\"><span class=\"pl-c\">#</span> sampling rate, default = 1000</span>\n    <span class=\"pl-ent\">scale</span>: <span class=\"pl-c1\">2</span>            <span class=\"pl-c\"><span class=\"pl-c\">#</span> number of digits after sample decimal point, default = 1</span>\n    <span class=\"pl-ent\">legend</span>:\n      <span class=\"pl-ent\">enabled</span>: <span class=\"pl-s\">true     </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> enables item labels, default = true</span>\n      <span class=\"pl-ent\">details</span>: <span class=\"pl-s\">false    </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> enables item statistics: cur/min/max/dlt values, default = true</span>\n    <span class=\"pl-ent\">items</span>:\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">GOOGLE</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">curl -o /dev/null -s -w '%{time_total}'  https://www.google.com</span>\n        <span class=\"pl-ent\">color</span>: <span class=\"pl-c1\">178</span>      <span class=\"pl-c\"><span class=\"pl-c\">#</span> 8-bit color number, default one is chosen from a pre-defined palette</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">YAHOO</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">curl -o /dev/null -s -w '%{time_total}'  https://search.yahoo.com</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">BING</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">curl -o /dev/null -s -w '%{time_total}'  https://www.bing.com</span></pre></div>\n<h3 dir=\"auto\">Sparkline</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/59167746-de754900-8b00-11e9-9305-c9a4176634d2.png\"><img src=\"https://user-images.githubusercontent.com/6069066/59167746-de754900-8b00-11e9-9305-c9a4176634d2.png\" alt=\"sparkline\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sparklines:\n  - title: CPU usage\n    rate-ms: 200\n    scale: 0\n    sample: ps -A -o %cpu | awk '{s+=$1} END {print s}'\n  - title: Free memory pages\n    rate-ms: 200\n    scale: 0\n    sample: memory_pressure | grep 'Pages free' | awk '{print $3}'\"><pre class=\"notranslate\"><span class=\"pl-ent\">sparklines</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">CPU usage</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">200</span>\n    <span class=\"pl-ent\">scale</span>: <span class=\"pl-c1\">0</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">ps -A -o %cpu | awk '{s+=$1} END {print s}'</span>\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Free memory pages</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">200</span>\n    <span class=\"pl-ent\">scale</span>: <span class=\"pl-c1\">0</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">memory_pressure | grep 'Pages free' | awk '{print $3}'</span></pre></div>\n<h3 dir=\"auto\">Barchart</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/59167751-de754900-8b00-11e9-8d01-efd04ae1eec6.png\"><img src=\"https://user-images.githubusercontent.com/6069066/59167751-de754900-8b00-11e9-8d01-efd04ae1eec6.png\" alt=\"barchart\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"barcharts:\n  - title: Local network activity\n    rate-ms: 500        # sampling rate, default = 1000\n    scale: 0            # number of digits after sample decimal point, default = 1\n    items:\n      - label: UDP bytes in\n        sample: nettop -J bytes_in -l 1 -m udp | awk '{sum += $4} END {print sum}'\n      - label: UDP bytes out\n        sample: nettop -J bytes_out -l 1 -m udp | awk '{sum += $4} END {print sum}'\n      - label: TCP bytes in\n        sample: nettop -J bytes_in -l 1 -m tcp | awk '{sum += $4} END {print sum}'\n      - label: TCP bytes out\n        sample: nettop -J bytes_out -l 1 -m tcp | awk '{sum += $4} END {print sum}'\"><pre class=\"notranslate\"><span class=\"pl-ent\">barcharts</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Local network activity</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">500</span>        <span class=\"pl-c\"><span class=\"pl-c\">#</span> sampling rate, default = 1000</span>\n    <span class=\"pl-ent\">scale</span>: <span class=\"pl-c1\">0</span>            <span class=\"pl-c\"><span class=\"pl-c\">#</span> number of digits after sample decimal point, default = 1</span>\n    <span class=\"pl-ent\">items</span>:\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">UDP bytes in</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">nettop -J bytes_in -l 1 -m udp | awk '{sum += $4} END {print sum}'</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">UDP bytes out</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">nettop -J bytes_out -l 1 -m udp | awk '{sum += $4} END {print sum}'</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">TCP bytes in</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">nettop -J bytes_in -l 1 -m tcp | awk '{sum += $4} END {print sum}'</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">TCP bytes out</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">nettop -J bytes_out -l 1 -m tcp | awk '{sum += $4} END {print sum}'</span></pre></div>\n<h3 dir=\"auto\">Gauge</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/59318799-4c06ae00-8c96-11e9-868a-7fef803f3739.png\"><img src=\"https://user-images.githubusercontent.com/6069066/59318799-4c06ae00-8c96-11e9-868a-7fef803f3739.png\" alt=\"gauge\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"gauges:\n  - title: Minute progress\n    rate-ms: 500        # sampling rate, default = 1000\n    scale: 2            # number of digits after sample decimal point, default = 1\n    percent-only: false # toggle display of the current value, default = false\n    color: 178          # 8-bit color number, default one is chosen from a pre-defined palette\n    cur:\n      sample: date +%S  # sample script for current value\n    max:\n      sample: echo 60   # sample script for max value\n    min:\n      sample: echo 0    # sample script for min value\n  - title: Year progress\n    cur:\n      sample: date +%j\n    max:\n      sample: echo 365\n    min:\n      sample: echo 0\"><pre class=\"notranslate\"><span class=\"pl-ent\">gauges</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Minute progress</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">500</span>        <span class=\"pl-c\"><span class=\"pl-c\">#</span> sampling rate, default = 1000</span>\n    <span class=\"pl-ent\">scale</span>: <span class=\"pl-c1\">2</span>            <span class=\"pl-c\"><span class=\"pl-c\">#</span> number of digits after sample decimal point, default = 1</span>\n    <span class=\"pl-ent\">percent-only</span>: <span class=\"pl-s\">false </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> toggle display of the current value, default = false</span>\n    <span class=\"pl-ent\">color</span>: <span class=\"pl-c1\">178</span>          <span class=\"pl-c\"><span class=\"pl-c\">#</span> 8-bit color number, default one is chosen from a pre-defined palette</span>\n    <span class=\"pl-ent\">cur</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">date +%S  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> sample script for current value</span>\n    <span class=\"pl-ent\">max</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">echo 60   </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> sample script for max value</span>\n    <span class=\"pl-ent\">min</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">echo 0    </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> sample script for min value</span>\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Year progress</span>\n    <span class=\"pl-ent\">cur</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">date +%j</span>\n    <span class=\"pl-ent\">max</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">echo 365</span>\n    <span class=\"pl-ent\">min</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">echo 0</span></pre></div>\n<h3 dir=\"auto\">Textbox</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/59168949-192db000-8b06-11e9-900b-0e92ff494f62.png\"><img src=\"https://user-images.githubusercontent.com/6069066/59168949-192db000-8b06-11e9-900b-0e92ff494f62.png\" alt=\"textbox\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"textboxes:\n  - title: Local weather\n    rate-ms: 10000      # sampling rate, default = 1000\n    sample: curl wttr.in?0ATQF\n    border: false       # border around the item, default = true\n    color: 178          # 8-bit color number, default is white\n  - title: Docker containers stats\n    rate-ms: 500\n    sample: docker stats --no-stream --format &quot;table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\\t{{.PIDs}}&quot;\"><pre class=\"notranslate\"><span class=\"pl-ent\">textboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Local weather</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">10000</span>      <span class=\"pl-c\"><span class=\"pl-c\">#</span> sampling rate, default = 1000</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">curl wttr.in?0ATQF</span>\n    <span class=\"pl-ent\">border</span>: <span class=\"pl-s\">false       </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> border around the item, default = true</span>\n    <span class=\"pl-ent\">color</span>: <span class=\"pl-c1\">178</span>          <span class=\"pl-c\"><span class=\"pl-c\">#</span> 8-bit color number, default is white</span>\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Docker containers stats</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">500</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">docker stats --no-stream --format \"table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\\t{{.PIDs}}\"</span></pre></div>\n<h3 dir=\"auto\">Asciibox</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/59169283-aa515680-8b07-11e9-8beb-716a387aed1b.png\"><img src=\"https://user-images.githubusercontent.com/6069066/59169283-aa515680-8b07-11e9-8beb-716a387aed1b.png\" alt=\"asciibox\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"asciiboxes:\n  - title: UTC time\n    rate-ms: 500        # sampling rate, default = 1000\n    font: 3d            # font type, default = 2d\n    border: false       # border around the item, default = true    \n    color: 43           # 8-bit color number, default is white\n    sample: env TZ=UTC date +%r\"><pre class=\"notranslate\"><span class=\"pl-ent\">asciiboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">UTC time</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">500</span>        <span class=\"pl-c\"><span class=\"pl-c\">#</span> sampling rate, default = 1000</span>\n    <span class=\"pl-ent\">font</span>: <span class=\"pl-c1\">3d</span>            <span class=\"pl-c\"><span class=\"pl-c\">#</span> font type, default = 2d</span>\n    <span class=\"pl-ent\">border</span>: <span class=\"pl-s\">false       </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> border around the item, default = true    </span>\n    <span class=\"pl-ent\">color</span>: <span class=\"pl-c1\">43</span>           <span class=\"pl-c\"><span class=\"pl-c\">#</span> 8-bit color number, default is white</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">env TZ=UTC date +%r</span></pre></div>\n<h2 dir=\"auto\">Bells and whistles</h2>\n<h3 dir=\"auto\">Triggers</h3>\n<p dir=\"auto\">Triggers allow to perform conditional actions, like visual/sound alerts or an arbitrary shell command.<br>\nThe following examples illustrate the concept.</p>\n<h4 dir=\"auto\">Clock gauge, which shows minute progress and announces current time at the beginning of each minute</h4>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"gauges:\n  - title: MINUTE PROGRESS\n    position: [[0, 18], [80, 0]]  \n    cur:\n      sample: date +%S\n    max:\n      sample: echo 60\n    min:\n      sample: echo 0\n    triggers:\n      - title: CLOCK BELL EVERY MINUTE\n        condition: '[ $label == &quot;cur&quot; ] &amp;&amp; [ $cur -eq 0 ] &amp;&amp; echo 1 || echo 0'  # expects &quot;1&quot; as TRUE indicator\n        actions:\n          terminal-bell: true  # standard terminal bell, default = false\n          sound: true    # NASA quindar tone, default = false\n          visual: false  # notification with current value on top of the component area, default = false\n          script: say -v samantha `date +%I:%M%p`  # an arbitrary script, which can use $cur, $prev and $label variables\"><pre class=\"notranslate\"><span class=\"pl-ent\">gauges</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">MINUTE PROGRESS</span>\n    <span class=\"pl-ent\">position</span>: <span class=\"pl-s\">[[0, 18], [80, 0]]  </span>\n    <span class=\"pl-ent\">cur</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">date +%S</span>\n    <span class=\"pl-ent\">max</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">echo 60</span>\n    <span class=\"pl-ent\">min</span>:\n      <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">echo 0</span>\n    <span class=\"pl-ent\">triggers</span>:\n      - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">CLOCK BELL EVERY MINUTE</span>\n        <span class=\"pl-ent\">condition</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>[ $label == \"cur\" ] &amp;&amp; [ $cur -eq 0 ] &amp;&amp; echo 1 || echo 0<span class=\"pl-pds\">'</span></span>  <span class=\"pl-c\"><span class=\"pl-c\">#</span> expects \"1\" as TRUE indicator</span>\n        <span class=\"pl-ent\">actions</span>:\n          <span class=\"pl-ent\">terminal-bell</span>: <span class=\"pl-s\">true  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> standard terminal bell, default = false</span>\n          <span class=\"pl-ent\">sound</span>: <span class=\"pl-s\">true    </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> NASA quindar tone, default = false</span>\n          <span class=\"pl-ent\">visual</span>: <span class=\"pl-s\">false  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> notification with current value on top of the component area, default = false</span>\n          <span class=\"pl-ent\">script</span>: <span class=\"pl-s\">say -v samantha `date +%I:%M%p`  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> an arbitrary script, which can use $cur, $prev and $label variables</span></pre></div>\n<h4 dir=\"auto\">Search engine latency chart, which alerts user when latency exceeds a threshold</h4>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"runcharts:\n  - title: SEARCH ENGINE RESPONSE TIME (sec)\n    rate-ms: 200\n    items:\n      - label: GOOGLE\n        sample: curl -o /dev/null -s -w '%{time_total}'  https://www.google.com\n      - label: YAHOO\n        sample: curl -o /dev/null -s -w '%{time_total}'  https://search.yahoo.com     \n    triggers:\n      - title: Latency threshold exceeded\n        condition: echo &quot;$prev &lt; 0.3 &amp;&amp; $cur &gt; 0.3&quot; |bc -l  # expects &quot;1&quot; as TRUE indicator\n        actions:\n          terminal-bell: true  # standard terminal bell, default = false\n          sound: true   # NASA quindar tone, default = false\n          visual: true  # visual notification on top of the component area, default = false\n          script: 'say alert: ${label} latency exceeded ${cur} second' # an arbitrary script, which can use $cur, $prev and $label variables\"><pre class=\"notranslate\"><span class=\"pl-ent\">runcharts</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">SEARCH ENGINE RESPONSE TIME (sec)</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">200</span>\n    <span class=\"pl-ent\">items</span>:\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">GOOGLE</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">curl -o /dev/null -s -w '%{time_total}'  https://www.google.com</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">YAHOO</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">curl -o /dev/null -s -w '%{time_total}'  https://search.yahoo.com     </span>\n    <span class=\"pl-ent\">triggers</span>:\n      - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Latency threshold exceeded</span>\n        <span class=\"pl-ent\">condition</span>: <span class=\"pl-s\">echo \"$prev &lt; 0.3 &amp;&amp; $cur &gt; 0.3\" |bc -l  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> expects \"1\" as TRUE indicator</span>\n        <span class=\"pl-ent\">actions</span>:\n          <span class=\"pl-ent\">terminal-bell</span>: <span class=\"pl-s\">true  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> standard terminal bell, default = false</span>\n          <span class=\"pl-ent\">sound</span>: <span class=\"pl-s\">true   </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> NASA quindar tone, default = false</span>\n          <span class=\"pl-ent\">visual</span>: <span class=\"pl-s\">true  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> visual notification on top of the component area, default = false</span>\n          <span class=\"pl-ent\">script</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>say alert: ${label} latency exceeded ${cur} second<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> an arbitrary script, which can use $cur, $prev and $label variables</span></pre></div>\n<h3 dir=\"auto\">Interactive shell support</h3>\n<p dir=\"auto\">In addition to the <code class=\"notranslate\">sample</code> command, one can specify <code class=\"notranslate\">init</code> command (executed only once before sampling) and <code class=\"notranslate\">transform</code> command (to post-process <code class=\"notranslate\">sample</code> command output). That covers interactive shell use case, e.g. to establish connection to a database only once, and then perform polling within interactive shell session.</p>\n<h4 dir=\"auto\">Basic mode</h4>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"textboxes:\n  - title: MongoDB polling\n    rate-ms: 500\n    init: mongo --quiet --host=localhost test # executes only once to start the interactive session\n    sample: Date.now();                       # executes with a required rate, in scope of the interactive session\n    transform: echo result = $sample          # executes in scope of local session, $sample variable is available for transformation\"><pre class=\"notranslate\"><span class=\"pl-ent\">textboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">MongoDB polling</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">500</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">mongo --quiet --host=localhost test </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> executes only once to start the interactive session</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">Date.now();                       </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> executes with a required rate, in scope of the interactive session</span>\n    <span class=\"pl-ent\">transform</span>: <span class=\"pl-s\">echo result = $sample          </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> executes in scope of local session, $sample variable is available for transformation</span></pre></div>\n<h4 dir=\"auto\">PTY mode</h4>\n<p dir=\"auto\">In some cases interactive shell won't work, because its stdin is not a terminal. We can fool it, using PTY mode:</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"textboxes:\n  - title: Neo4j polling\n    pty: true  # enables pseudo-terminal mode, default = false\n    init: cypher-shell -u neo4j -p pwd --format plain\n    sample: RETURN rand();\n    transform: echo &quot;$sample&quot; | tail -n 1\n  - title: Top on a remote server\n    pty: true  # enables pseudo-terminal mode, default = false\n    init: ssh -i ~/user.pem ec2-user@1.2.3.4\n    sample: top    \"><pre class=\"notranslate\"><span class=\"pl-ent\">textboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Neo4j polling</span>\n    <span class=\"pl-ent\">pty</span>: <span class=\"pl-s\">true  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> enables pseudo-terminal mode, default = false</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">cypher-shell -u neo4j -p pwd --format plain</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">RETURN rand();</span>\n    <span class=\"pl-ent\">transform</span>: <span class=\"pl-s\">echo \"$sample\" | tail -n 1</span>\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Top on a remote server</span>\n    <span class=\"pl-ent\">pty</span>: <span class=\"pl-s\">true  </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> enables pseudo-terminal mode, default = false</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">ssh -i ~/user.pem ec2-user@1.2.3.4</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">top    </span></pre></div>\n<h4 dir=\"auto\">Multistep init</h4>\n<p dir=\"auto\">It is also possible to execute multiple init commands one after another, before you start sampling.</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"textboxes:\n  - title: Java application uptime\n    multistep-init:\n      - java -jar jmxterm-1.0.0-uber.jar\n      - open host:port # or local PID\n      - bean java.lang:type=Runtime\n    sample: get Uptime\"><pre class=\"notranslate\"><span class=\"pl-ent\">textboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Java application uptime</span>\n    <span class=\"pl-ent\">multistep-init</span>:\n      - <span class=\"pl-s\">java -jar jmxterm-1.0.0-uber.jar</span>\n      - <span class=\"pl-s\">open host:port </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> or local PID</span>\n      - <span class=\"pl-s\">bean java.lang:type=Runtime</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">get Uptime</span></pre></div>\n<h3 dir=\"auto\">Variables</h3>\n<p dir=\"auto\">If the configuration file contains repeated patterns, they can be extracted into the <code class=\"notranslate\">variables</code> section.<br>\nAlso variables can be specified using <code class=\"notranslate\">-v</code>/<code class=\"notranslate\">--variable</code> flag on startup, and any system environment variables will also be available in the scripts.</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"variables:\n    mongoconnection: mongo --quiet --host=localhost test\nbarcharts:\n  - title: MongoDB documents by status\n    items:\n      - label: IN_PROGRESS\n        init: $mongoconnection\n        sample: db.getCollection('events').find({status:'IN_PROGRESS'}).count()\n      - label: SUCCESS\n        init: $mongoconnection\n        sample: db.getCollection('events').find({status:'SUCCESS'}).count()\n      - label: FAIL\n        init: $mongoconnection\n        sample: db.getCollection('events').find({status:'FAIL'}).count()\"><pre class=\"notranslate\"><span class=\"pl-ent\">variables</span>:\n    <span class=\"pl-ent\">mongoconnection</span>: <span class=\"pl-s\">mongo --quiet --host=localhost test</span>\n<span class=\"pl-ent\">barcharts</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">MongoDB documents by status</span>\n    <span class=\"pl-ent\">items</span>:\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">IN_PROGRESS</span>\n        <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$mongoconnection</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">db.getCollection('events').find({status:'IN_PROGRESS'}).count()</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">SUCCESS</span>\n        <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$mongoconnection</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">db.getCollection('events').find({status:'SUCCESS'}).count()</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">FAIL</span>\n        <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$mongoconnection</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">db.getCollection('events').find({status:'FAIL'}).count()</span></pre></div>\n<h3 dir=\"auto\">Color theme</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6069066/59959405-994c0200-9484-11e9-856b-c4d18716e1de.png\"><img src=\"https://user-images.githubusercontent.com/6069066/59959405-994c0200-9484-11e9-856b-c4d18716e1de.png\" alt=\"light-theme\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"theme: light # default = dark\nsparklines:\n  - title: CPU usage\n    sample: ps -A -o %cpu | awk '{s+=$1} END {print s}'\"><pre class=\"notranslate\"><span class=\"pl-ent\">theme</span>: <span class=\"pl-s\">light </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> default = dark</span>\n<span class=\"pl-ent\">sparklines</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">CPU usage</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">ps -A -o %cpu | awk '{s+=$1} END {print s}'</span></pre></div>\n<h2 dir=\"auto\">Real-world recipes</h2>\n<h3 dir=\"auto\">Databases</h3>\n<p dir=\"auto\">The following are different database connection examples. Interactive shell (init script) usage is recommended to establish connection only once and then reuse it during sampling.</p>\n<details><summary>MySQL</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# prerequisite: installed mysql shell\n\nvariables:\n  mysql_connection: mysql -u root -s --database mysql --skip-column-names\nsparklines:  \n  - title: MySQL (random number example)\n    pty: true\n    init: $mysql_connection\n    sample: select rand();\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> prerequisite: installed mysql shell</span>\n\n<span class=\"pl-ent\">variables</span>:\n  <span class=\"pl-ent\">mysql_connection</span>: <span class=\"pl-s\">mysql -u root -s --database mysql --skip-column-names</span>\n<span class=\"pl-ent\">sparklines</span>:  \n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">MySQL (random number example)</span>\n    <span class=\"pl-ent\">pty</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$mysql_connection</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">select rand();</span></pre></div>\n</details>\n<details><summary>PostgreSQL</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# prerequisite: installed psql shell\n\nvariables:\n  PGPASSWORD: pwd\n  postgres_connection: psql -h localhost -U postgres --no-align --tuples-only\nsparklines:\n  - title: PostgreSQL (random number example)\n    init: $postgres_connection\n    sample: select random();\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> prerequisite: installed psql shell</span>\n\n<span class=\"pl-ent\">variables</span>:\n  <span class=\"pl-ent\">PGPASSWORD</span>: <span class=\"pl-s\">pwd</span>\n  <span class=\"pl-ent\">postgres_connection</span>: <span class=\"pl-s\">psql -h localhost -U postgres --no-align --tuples-only</span>\n<span class=\"pl-ent\">sparklines</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">PostgreSQL (random number example)</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$postgres_connection</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">select random();</span></pre></div>\n</details>\n<details><summary>MongoDB</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# prerequisite: installed mongo shell\n\nvariables:\n  mongo_connection: mongo --quiet --host=localhost test\nsparklines:\n  - title: MongoDB (random number example)\n    init: $mongo_connection\n    sample: Math.random();\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> prerequisite: installed mongo shell</span>\n\n<span class=\"pl-ent\">variables</span>:\n  <span class=\"pl-ent\">mongo_connection</span>: <span class=\"pl-s\">mongo --quiet --host=localhost test</span>\n<span class=\"pl-ent\">sparklines</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">MongoDB (random number example)</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$mongo_connection</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">Math.random();</span></pre></div>\n</details>\n<details><summary>Neo4j</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# prerequisite: installed cypher shell\n\nvariables:\n  neo4j_connection: cypher-shell -u neo4j -p pwd --format plain\nsparklines:\n  - title: Neo4j (random number example)\n    pty: true\n    init: $neo4j_connection\n    sample: RETURN rand();\n    transform: echo &quot;$sample&quot; | tail -n 1\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> prerequisite: installed cypher shell</span>\n\n<span class=\"pl-ent\">variables</span>:\n  <span class=\"pl-ent\">neo4j_connection</span>: <span class=\"pl-s\">cypher-shell -u neo4j -p pwd --format plain</span>\n<span class=\"pl-ent\">sparklines</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Neo4j (random number example)</span>\n    <span class=\"pl-ent\">pty</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$neo4j_connection</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">RETURN rand();</span>\n    <span class=\"pl-ent\">transform</span>: <span class=\"pl-s\">echo \"$sample\" | tail -n 1</span></pre></div>\n</details>\n<h3 dir=\"auto\">Kafka</h3>\n<details><summary>Kafka lag per consumer group</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"variables:\n  kafka_connection: $KAFKA_HOME/bin/kafka-consumer-groups --bootstrap-server localhost:9092\nruncharts:\n  - title: Kafka lag per consumer group\n    rate-ms: 5000\n    scale: 0\n    items:\n      - label: A-&gt;B\n        sample: $kafka_connection --group group_a --describe | awk 'NR&gt;1 {sum += $5} END {print sum}'\n      - label: B-&gt;C\n        sample: $kafka_connection --group group_b --describe | awk 'NR&gt;1 {sum += $5} END {print sum}'\n      - label: C-&gt;D\n        sample: $kafka_connection --group group_c --describe | awk 'NR&gt;1 {sum += $5} END {print sum}'\"><pre class=\"notranslate\"><span class=\"pl-ent\">variables</span>:\n  <span class=\"pl-ent\">kafka_connection</span>: <span class=\"pl-s\">$KAFKA_HOME/bin/kafka-consumer-groups --bootstrap-server localhost:9092</span>\n<span class=\"pl-ent\">runcharts</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Kafka lag per consumer group</span>\n    <span class=\"pl-ent\">rate-ms</span>: <span class=\"pl-c1\">5000</span>\n    <span class=\"pl-ent\">scale</span>: <span class=\"pl-c1\">0</span>\n    <span class=\"pl-ent\">items</span>:\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">A-&gt;B</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">$kafka_connection --group group_a --describe | awk 'NR&gt;1 {sum += $5} END {print sum}'</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">B-&gt;C</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">$kafka_connection --group group_b --describe | awk 'NR&gt;1 {sum += $5} END {print sum}'</span>\n      - <span class=\"pl-ent\">label</span>: <span class=\"pl-s\">C-&gt;D</span>\n        <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">$kafka_connection --group group_c --describe | awk 'NR&gt;1 {sum += $5} END {print sum}'</span></pre></div>\n</details>\n<h3 dir=\"auto\">Docker</h3>\n<details><summary>Docker containers stats (CPU, MEM, O/I)</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"textboxes:\n  - title: Docker containers stats\n    sample: docker stats --no-stream --format &quot;table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemPerc}}\\t{{.MemUsage}}\\t{{.NetIO}}\\t{{.BlockIO}}\\t{{.PIDs}}&quot;\"><pre class=\"notranslate\"><span class=\"pl-ent\">textboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Docker containers stats</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">docker stats --no-stream --format \"table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemPerc}}\\t{{.MemUsage}}\\t{{.NetIO}}\\t{{.BlockIO}}\\t{{.PIDs}}\"</span></pre></div>\n</details>\n<h3 dir=\"auto\">SSH</h3>\n<details><summary>TOP command on a remote server</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"variables:\n  sshconnection: ssh -i ~/my-key-pair.pem ec2-user@1.2.3.4\ntextboxes:\n  - title: SSH\n    pty: true\n    init: $sshconnection\n    sample: top\"><pre class=\"notranslate\"><span class=\"pl-ent\">variables</span>:\n  <span class=\"pl-ent\">sshconnection</span>: <span class=\"pl-s\">ssh -i ~/my-key-pair.pem ec2-user@1.2.3.4</span>\n<span class=\"pl-ent\">textboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">SSH</span>\n    <span class=\"pl-ent\">pty</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-ent\">init</span>: <span class=\"pl-s\">$sshconnection</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">top</span></pre></div>\n</details>\n<h3 dir=\"auto\">JMX</h3>\n<details><summary>Java application uptime example</summary>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# prerequisite: download [jmxterm jar file](https://docs.cyclopsgroup.org/jmxterm)\n\ntextboxes:\n  - title: Java application uptime\n    multistep-init:\n      - java -jar jmxterm-1.0.0-uber.jar\n      - open host:port # or local PID\n      - bean java.lang:type=Runtime\n    sample: get Uptime\n    transform: echo $sample | tr -dc '0-9' | awk '{printf &quot;%.1f min&quot;, $1/1000/60}'\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> prerequisite: download [jmxterm jar file](https://docs.cyclopsgroup.org/jmxterm)</span>\n\n<span class=\"pl-ent\">textboxes</span>:\n  - <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Java application uptime</span>\n    <span class=\"pl-ent\">multistep-init</span>:\n      - <span class=\"pl-s\">java -jar jmxterm-1.0.0-uber.jar</span>\n      - <span class=\"pl-s\">open host:port </span><span class=\"pl-c\"><span class=\"pl-c\">#</span> or local PID</span>\n      - <span class=\"pl-s\">bean java.lang:type=Runtime</span>\n    <span class=\"pl-ent\">sample</span>: <span class=\"pl-s\">get Uptime</span>\n    <span class=\"pl-ent\">transform</span>: <span class=\"pl-s\">echo $sample | tr -dc '0-9' | awk '{printf \"%.1f min\", $1/1000/60}'</span></pre></div>\n</details>","updatedAt":"2025-05-22T01:47:30Z","upvoteCount":null,"author":{"login":"eryajf","avatarUrl":"https://avatars.githubusercontent.com/u/33259379?u=e4a4090a38ac2473aaed4ef9945233636776c6c3&v=4","url":"https://github.com/eryajf"},"category":null,"labels":{"edges":[{"node":{"name":"更多","color":"25B472"}},{"node":{"name":"命令行工具","color":"e05879"}},{"node":{"name":"sqshq","color":"1b35a9"}}]},"comments":{"edges":[]}}},"pageContext":{"number":499,"previous":{"title":"saltstack/salt: 该软件能自动化管理和配置任何规模的基础设施或应用程序。","number":498},"next":{"title":"samwafgo/SamWaf: 一款开源轻量级的网站应用防火墙","number":500}}},
    "staticQueryHashes": ["151096407","2861350382"]}